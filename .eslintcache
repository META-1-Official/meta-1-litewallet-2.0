[{"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/index.js":"1","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/App.js":"2","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/index.js":"3","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/lib/TradeWithPassword.js":"4","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/lib/fetchDepositAddress.js":"5","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/lib/CheckPassword.js":"6","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/account/selector.js":"7","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/API/API.js":"8","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/account/actions.js":"9","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/lib/Portfolio.js":"10","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/meta1/selector.js":"11","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/meta1/actions.js":"12","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/lib/SendWithPassword.js":"13","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/utils/localstorage.js":"14","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/Wallet/OrdersTable.js":"15","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/PaperWalletLogin/PaperWalletLogin.js":"16","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/Navbar/Navbar.js":"17","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/Settings/Settings.js":"18","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/LeftPanel/LeftPanel.js":"19","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/RightSideHelpMenuSecondType/RightSideHelpMenuSecondType.js":"20","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/Footer/Footer.js":"21","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/UI/loader/Loader.js":"22","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/saga.js":"23","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/reducer.js":"24","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/Wallet/index.js":"25","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/ExchangeForm/index.js":"26","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/SignUpForm/index.js":"27","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/SendForm/index.js":"28","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/DepositForm/index.js":"29","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/WithdrawForm/index.js":"30","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/account/types.js":"31","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/meta1/types.js":"32","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/lib/fetchHistory.js":"33","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/Wallet/cryptoChooser.js":"34","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/utils/commonFunction.js":"35","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/lib/createAccountWithPassword.js":"36","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/PaperWalletLogin/CreatePdfWallet.js":"37","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/lib/useDebounce.js":"38","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/LoginScreen/index.jsx":"39","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/Navbar/WidgetOnRamper.js":"40","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/LeftPanelAdapt/LeftPanelAdapt.js":"41","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/RightSideHelpMenuThirdType/RightSideHelpMenuThirdType.js":"42","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/ExchangeForm/ExchangeSelect.js":"43","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/SignUpForm/SubmitForm.js":"44","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/SignUpForm/UserInformationForm.js":"45","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/account/saga.js":"46","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/account/reducer.js":"47","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/meta1/saga.js":"48","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/meta1/reducer.js":"49","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/Wallet/PortfolioTable.js":"50","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/requests/compareCrypto.js":"51","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/config/help.js":"52","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/RightSideHelpMenuFirstType/RightSideHelpMenuFirstType.js":"53","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/helpers/string.js":"54","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/lib/AccountApi.js":"55","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/utils/signature.js":"56","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/helpers/utility.js":"57","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/Wallet/TransactionHash.jsx":"58","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/helpers/useAssets.js":"59","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/helpers/UseAccount.js":"60","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/helpers/Cache.js":"61","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/utils/common.js":"62","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/SignUpForm/FaceKiForm.js":"63","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/OpenOrder/index.jsx":"64","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/lib/fetchOpenOrder.js":"65","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/utils/MarketClasses.js":"66","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/utils/utils.js":"67","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/utils/asset_utils.js":"68","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/utils/asset_constants.js":"69","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/SignUpForm/MigrationForm.js":"70","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/OpenOrder/CustomizedColumns.jsx":"71","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/utils/constant.js":"72"},{"size":662,"mtime":1662645792961,"results":"73","hashOfConfig":"74"},{"size":34636,"mtime":1665108624233,"results":"75","hashOfConfig":"74"},{"size":887,"mtime":1662458083977,"results":"76","hashOfConfig":"74"},{"size":2434,"mtime":1665108624229,"results":"77","hashOfConfig":"74"},{"size":590,"mtime":1654004845481,"results":"78","hashOfConfig":"74"},{"size":787,"mtime":1662458083972,"results":"79","hashOfConfig":"74"},{"size":1791,"mtime":1663832794019,"results":"80","hashOfConfig":"74"},{"size":9793,"mtime":1663860373580,"results":"81","hashOfConfig":"74"},{"size":3761,"mtime":1663832794018,"results":"82","hashOfConfig":"74"},{"size":2386,"mtime":1648912407000,"results":"83","hashOfConfig":"74"},{"size":694,"mtime":1662458083980,"results":"84","hashOfConfig":"74"},{"size":1630,"mtime":1662458083977,"results":"85","hashOfConfig":"74"},{"size":709,"mtime":1648912407000,"results":"86","hashOfConfig":"74"},{"size":888,"mtime":1654004845483,"results":"87","hashOfConfig":"74"},{"size":8525,"mtime":1665108624227,"results":"88","hashOfConfig":"74"},{"size":3656,"mtime":1662458083968,"results":"89","hashOfConfig":"74"},{"size":8971,"mtime":1662968437122,"results":"90","hashOfConfig":"74"},{"size":13194,"mtime":1662458083969,"results":"91","hashOfConfig":"74"},{"size":8349,"mtime":1665108624226,"results":"92","hashOfConfig":"74"},{"size":5524,"mtime":1662458083968,"results":"93","hashOfConfig":"74"},{"size":17474,"mtime":1662458083966,"results":"94","hashOfConfig":"74"},{"size":1348,"mtime":1648864532000,"results":"95","hashOfConfig":"74"},{"size":263,"mtime":1662458083982,"results":"96","hashOfConfig":"74"},{"size":191,"mtime":1662458083980,"results":"97","hashOfConfig":"74"},{"size":11607,"mtime":1665108624228,"results":"98","hashOfConfig":"74"},{"size":36474,"mtime":1665108624226,"results":"99","hashOfConfig":"74"},{"size":6924,"mtime":1663912328572,"results":"100","hashOfConfig":"74"},{"size":24144,"mtime":1662458083969,"results":"101","hashOfConfig":"74"},{"size":4597,"mtime":1663912328564,"results":"102","hashOfConfig":"74"},{"size":15804,"mtime":1664362090257,"results":"103","hashOfConfig":"74"},{"size":1748,"mtime":1663832794019,"results":"104","hashOfConfig":"74"},{"size":845,"mtime":1662458083980,"results":"105","hashOfConfig":"74"},{"size":1833,"mtime":1665108624229,"results":"106","hashOfConfig":"74"},{"size":2226,"mtime":1648864532000,"results":"107","hashOfConfig":"74"},{"size":73,"mtime":1663747129915,"results":"108","hashOfConfig":"74"},{"size":4341,"mtime":1662730274703,"results":"109","hashOfConfig":"74"},{"size":3776,"mtime":1662458083967,"results":"110","hashOfConfig":"74"},{"size":445,"mtime":1662458083975,"results":"111","hashOfConfig":"74"},{"size":15829,"mtime":1665109514870,"results":"112","hashOfConfig":"74"},{"size":546,"mtime":1648864532000,"results":"113","hashOfConfig":"74"},{"size":6658,"mtime":1665108624226,"results":"114","hashOfConfig":"74"},{"size":2698,"mtime":1650439168000,"results":"115","hashOfConfig":"74"},{"size":2111,"mtime":1648864532000,"results":"116","hashOfConfig":"74"},{"size":6308,"mtime":1663842160605,"results":"117","hashOfConfig":"74"},{"size":12902,"mtime":1663912328565,"results":"118","hashOfConfig":"74"},{"size":5327,"mtime":1662968401029,"results":"119","hashOfConfig":"74"},{"size":5214,"mtime":1663832794019,"results":"120","hashOfConfig":"74"},{"size":1611,"mtime":1662458083979,"results":"121","hashOfConfig":"74"},{"size":1980,"mtime":1662458083978,"results":"122","hashOfConfig":"74"},{"size":10360,"mtime":1665108624228,"results":"123","hashOfConfig":"74"},{"size":432,"mtime":1654004845479,"results":"124","hashOfConfig":"74"},{"size":1402,"mtime":1654004845479,"results":"125","hashOfConfig":"74"},{"size":3654,"mtime":1662458083968,"results":"126","hashOfConfig":"74"},{"size":250,"mtime":1654004845479,"results":"127","hashOfConfig":"74"},{"size":531,"mtime":1662458083972,"results":"128","hashOfConfig":"74"},{"size":1403,"mtime":1663747228318,"results":"129","hashOfConfig":"74"},{"size":29040,"mtime":1662458083971,"results":"130","hashOfConfig":"74"},{"size":828,"mtime":1662458083970,"results":"131","hashOfConfig":"74"},{"size":877,"mtime":1662458083970,"results":"132","hashOfConfig":"74"},{"size":497,"mtime":1662458083970,"results":"133","hashOfConfig":"74"},{"size":282,"mtime":1662458083970,"results":"134","hashOfConfig":"74"},{"size":1149,"mtime":1662458098863,"results":"135","hashOfConfig":"74"},{"size":3642,"mtime":1663836019662,"results":"136","hashOfConfig":"74"},{"size":7478,"mtime":1663832794017,"results":"137","hashOfConfig":"74"},{"size":4276,"mtime":1663246040181,"results":"138","hashOfConfig":"74"},{"size":41990,"mtime":1654004845482,"results":"139","hashOfConfig":"74"},{"size":14138,"mtime":1662458083987,"results":"140","hashOfConfig":"74"},{"size":4334,"mtime":1663246040182,"results":"141","hashOfConfig":"74"},{"size":1502,"mtime":1663246040181,"results":"142","hashOfConfig":"74"},{"size":2185,"mtime":1663836044519,"results":"143","hashOfConfig":"74"},{"size":4662,"mtime":1663832794017,"results":"144","hashOfConfig":"74"},{"size":213,"mtime":1665108624229,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"1yd6kr1",{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"148"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"148"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"148"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"148"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"148"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"148"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"148"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"148"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"148"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"148"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"148"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"148"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"148"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"148"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"148"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"148"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"148"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"148"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"148"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"148"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"148"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"148"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"148"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"148"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/index.js",[],["315","316"],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/App.js",["317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345"],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/index.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/lib/TradeWithPassword.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/lib/fetchDepositAddress.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/lib/CheckPassword.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/account/selector.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/API/API.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/account/actions.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/lib/Portfolio.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/meta1/selector.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/meta1/actions.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/lib/SendWithPassword.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/utils/localstorage.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/Wallet/OrdersTable.js",["346","347","348","349","350","351","352","353"],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/PaperWalletLogin/PaperWalletLogin.js",["354","355","356","357","358"],"/* eslint-disable array-callback-return */\nimport React, { useEffect, useState } from \"react\";\nimport { generateKeyFromPassword } from \"../../lib/createAccountWithPassword\";\nimport { Button, Form, FormField } from \"semantic-ui-react\";\nimport useDebounce from \"../../lib/useDebounce\";\nimport { PrivateKey } from \"meta1-vision-js\";\nimport { createPaperWalletAsPDF } from \"./CreatePdfWallet\";\nimport Meta1 from \"meta1-vision-dex\";\nimport \"./style.css\";\nimport { useSelector } from \"react-redux\";\nimport { portfolioReceiverSelector } from \"../../store/meta1/selector\";\n\nexport default function PaperWalletLogin({ accountName }) {\n  const [account, setAccount] = useState(localStorage.getItem(\"login\") || accountName);\n  const [password, setPassword] = useState(\"\");\n  const [readyToCreate, setReadyToCreate] = useState(false);\n  const [accountChecked, setAccountChecked] = useState(true);\n  const [check, setCheck] = useState(false);\n  const debouncedAccount = useDebounce(account, 500);\n  const portfolioReceiverState =  useSelector(portfolioReceiverSelector);\n  useEffect(() => {\n    if (account?.length > 0) {\n      async function fetchAccount(debouncedAccount) {\n        // Сделать запрос к АП\n        try {\n          await portfolioReceiverState.fetch(debouncedAccount);\n          setAccountChecked(true);\n        } catch (e) {\n          setAccountChecked(false);\n        }\n      }\n\n      if (debouncedAccount) {\n        fetchAccount(debouncedAccount);\n      } else {\n        setAccountChecked(false);\n      }\n    }\n  }, [debouncedAccount, account]);\n\n  // getting the privateKey\n  const getPrivateKey = (password) => PrivateKey.fromSeed(password).toWif();\n\n  const handleSubmit = () => {\n    setReadyToCreate(true);\n  };\n\n  // Generate owner, memo and active Key\n  let { privKey: owner_private } = generateKeyFromPassword(\n    account,\n    \"owner\",\n    password\n  );\n  let { privKey: active_private } = generateKeyFromPassword(\n    account,\n    \"active\",\n    password\n  );\n  let { privKey: memo_private } = generateKeyFromPassword(\n    account,\n    \"memo\",\n    password\n  );\n\n  const handleCreatePaperWallet = async () => {\n    try {\n      await Meta1.login(localStorage.getItem(\"login\"), password);\n      createPaperWalletAsPDF(\n        localStorage.getItem(\"login\"),\n        owner_private,\n        active_private,\n        memo_private\n      );\n    } catch (e) {\n      setCheck(true);\n    }\n  };\n\n  return (\n    <div className=\"login-width\">\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <FormField>\n          <label basic className=\"paper_wallet_login_label\">\n            Login With\n          </label>\n          <input disabled value={\"Account Name (Cloud Wallet)\"} />\n        </FormField>\n        <FormField>\n          <label basic className=\"paper_wallet_login_label\">\n            Account Name\n          </label>\n          <input\n            value={localStorage.getItem(\"login\") || accountName}\n            disabled\n            placeholder={\"Account Name\"}\n          />\n        </FormField>\n        <FormField>\n          <label basic className=\"paper_wallet_login_label\">\n          Passkey\n          </label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          {check !== false && <p style={{ color: \"red\" }}>Invalid Passkey</p>}\n        </FormField>\n        <Button\n          color=\"yellow\"\n          type=\"submit\"\n          fluid\n          onClick={handleCreatePaperWallet}\n          disabled={!password}\n        >\n          {\" \"}\n          Create Paper Wallet\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/Navbar/Navbar.js",["359","360","361"],"import React from \"react\";\nimport styles from \"./Navbar.module.scss\";\nimport \"./styles.css\";\nimport logo from \"../../images/Logo.png\";\nimport LeftPanelAdapt from \"../LeftPanelAdapt/LeftPanelAdapt\";\nimport WidgetOnRamper from \"./WidgetOnRamper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logoutRequest } from \"../../store/account/actions\";\nimport { navbarProfileImageSelector } from \"../../store/account/selector\";\n\nconst Navbar = (props) => {\n  const dispatch = useDispatch();\n  const navbarProfileImageState = useSelector(navbarProfileImageSelector)\n  const {\n    onClickHomeHandler,\n    onClickPortfolioHandler,\n    onClickExchangeHandler,\n    onClickPaperWalletHandler,\n    onClickOrderTableHandler,\n    onClickSettingsHandler,\n    onClickHistoryHandler,\n    onClickOpenOrderHandler,\n    portfolio,\n    name\n  } = props;\n\n  const { innerWidth: width } = window;\n  const isMobile = width <= 600;\n  const openInNewTab = url => {\n    window.open(url, '_blank', 'noopener,noreferrer');\n  };\n  return (\n    <>\n      <div\n        className=\"modal fade\"\n        id=\"fund\"\n        tabIndex=\"-1\"\n        aria-labelledby=\"exampleModalLabel\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog modal-lg modal-dialog-scrollable\">\n          <div className=\"modal-content\">\n            <div className={\"modal-body onramper-wallet\"}>\n              <button\n                style={{ margin: \"0 0 0 97%\" }}\n                type=\"button\"\n                className=\"btn-close\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n              />\n              <iframe\n                src=\"https://widget.onramper.com/?color=ffc000&amp;defaultAmount=1000&amp;defaultFiat=USD&amp;defaultCrypto=BTC&amp;apiKey=pk_prod_k6LKERIMdGDE8geCxOApKSCy6mnfF5CuhI4TLZj55Wc0\"\n                title=\"myFrame\"\n                style={{ border: \"0\" }}\n                allowFullScreen=\"\"\n                aria-hidden=\"false\"\n                tabIndex=\"0\"\n                width=\"100%\"\n                height=\"600\"\n                frameBorder=\"0\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <nav\n        className={\n          styles.navbar + \" navbar navbar-expand-lg navbar-dark bg-dark\"\n        }\n      >\n        <div className=\"container-fluid\">\n          <img\n            className={styles.img}\n            onClick={() => {\n              window.open(process.env.REACT_APP_WALLET_LOGO_HREF);\n            }}\n            style={{ cursor: \"pointer\" }}\n            src={logo}\n            alt=\"logo\"\n          />\n          {isMobile && portfolio ? (\n            <div className={styles.mobileName}>\n              <p>\n                <strong>Hello, {name}</strong>\n              </p>\n            </div>\n          ) : null}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <div className={\"navbar-nav me-auto\"} />\n            <div className=\"d-flex\">\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                <div className={styles.blockhelp}>\n                  <i\n                    className=\"far fa-question-circle\"\n                    style={{ marginRight: \".2rem\" }}\n                  />\n                  <span\n                    onClick={() => {\n                      window.open(process.env.REACT_APP_WALLET_FOOTER_SUPPORT_HREF);\n                    }}\n                  >\n                    Get help\n                  </span>\n                </div>\n                <div className=\"nav-item dropdown parent-this\">\n                  <a\n                    className={styles.btn}\n                    href=\"#\"\n                    id=\"navbarScrollingDropdown\"\n                    role=\"button\"\n                    data-bs-toggle=\"dropdown\"\n                    aria-expanded=\"false\"\n                  >\n                    Fund Wallet\n                   <span \n                   className=\"nav-link dropdown-toggle for-dropdown\"\n                    id=\"navbarScrollingDropdown\"\n                   ></span>\n                    <div\n                      className={\"imgUser\"}\n                      style={{ marginLeft: \".3rem\" }}\n                    >\n                    </div>\n                  </a>\n                  <ul\n                    className=\"dropdown-menu dropdown-width\"\n                    aria-labelledby=\"navbarScrollingDropdown\"\n                    style={{ marginLeft: \"-4rem\", width: \"8rem\" }}\n                  >\n                    <li>\n                      <button\n                        className=\"dropdown-item\"\n                        style={{ textAlign: \"center\" }}\n                        disabled={!name && !portfolio}\n                        data-bs-toggle=\"modal\"\n                        data-bs-target=\"#fund\"\n                      >\n                        Fund Wallet With Credit/Debit Card\n                      </button>\n                    </li>\n                    <li>\n                      <button\n                        className=\"dropdown-item\"\n                        style={{ textAlign: \"center\" }}\n                        onClick={() => openInNewTab(process.env.REACT_APP_FUND_WALLET_WITH_CRYPTOCURRENCY)}\n                      >\n                        Fund Wallet With Cryptocurrency\n                      </button>\n                    </li>\n                    <li>\n                      <button\n                        className=\"dropdown-item\"\n                        style={{ textAlign: \"center\" }}\n                        onClick={() => openInNewTab(process.env.REACT_APP_FUND_WALLET_WITH_WIRE_OR_CHECK)}\n                      >\n                        Fund Wallet with Wire or Check\n                      </button>\n                    </li>\n                  </ul>\n                </div>\n                <div className={styles.line + styles.adaptNeed} />\n                <div\n                  className={styles.adaptNeed}\n                  style={{\n                    marginRight: \"1rem\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  <div className=\"nav-item dropdown\">\n                    <a\n                      className=\"nav-link dropdown-toggle\"\n                      href=\"#\"\n                      id=\"navbarScrollingDropdown\"\n                      role=\"button\"\n                      data-bs-toggle=\"dropdown\"\n                      aria-expanded=\"false\"\n                    >\n                      <div\n                        className={\"imgUser\"}\n                        style={{ marginLeft: \".3rem\" }}\n                      >\n                        <img\n                          className={styles.userImg}\n                          id=\"avatarNavbar\"\n                          src={navbarProfileImageState}\n                          alt=\"user\"\n                        />\n                      </div>\n                    </a>\n                    {name && portfolio ? (\n                      <ul\n                        className=\"dropdown-menu\"\n                        aria-labelledby=\"navbarScrollingDropdown\"\n                        style={{ marginLeft: \"-4rem\", width: \"8rem\" }}\n                      >\n                        <li>\n                          <p\n                            className=\"dropdown-item\"\n                            style={{ textAlign: \"center\" }}\n                            onClick={() => {\n                              dispatch(logoutRequest());\n                            }}\n                          >\n                            Log Out\n                          </p>\n                        </li>\n                      </ul>\n                    ) : null}\n                  </div>\n                </div>\n              </div>\n            </div>\n            {isMobile ? (\n              <LeftPanelAdapt\n                onClickHomeHandler={onClickHomeHandler}\n                onClickPortfolioHandler={onClickPortfolioHandler}\n                onClickExchangeHandler={onClickExchangeHandler}\n                onClickPaperWalletHandler={onClickPaperWalletHandler}\n                onClickOrderTableHandler={onClickOrderTableHandler}\n                onClickSettingsHandler={onClickSettingsHandler}\n                onClickHistoryHandler={onClickHistoryHandler}\n                portfolio={portfolio}\n                name={name}\n                onClickOpenOrderHandler={onClickOpenOrderHandler}\n              />\n            ) : null}\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default Navbar;\n","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/Settings/Settings.js",["362","363","364","365","366","367","368","369","370","371","372","373","374","375"],"import React, { useEffect, useRef, useState } from \"react\";\nimport styles from \"./Settings.module.scss\";\nimport axios from \"axios\";\nimport RightSideHelpMenuThirdType from \"../RightSideHelpMenuThirdType/RightSideHelpMenuThirdType\";\nimport {\n  Image,\n  Modal,\n  Button,\n  Grid,\n  Icon,\n  Label,\n  Popup,\n} from \"semantic-ui-react\";\nimport { saveUserCurrency } from \"../../API/API\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeCurrencySelector, checkPasswordObjSelector, cryptoDataSelector, userCurrencySelector } from \"../../store/meta1/selector\";\nimport { accountsSelector, isValidPasswordKeySelector, passwordKeyErrorSelector, profileImageSelector } from \"../../store/account/selector\";\nimport { deleteAvatarRequest, passKeyRequestService, passKeyResetService, uploadAvatarRequest } from \"../../store/account/actions\";\nimport { saveUserCurrencyRequest, saveUserCurrencyReset, setUserCurrencyAction } from \"../../store/meta1/actions\";\nlet isSet = false;\nconst Settings = (props) => {\n  const {\n    onClickExchangeEOSHandler,\n    onClickExchangeUSDTHandler,\n    getAvatarFromBack,\n    userCurrency,\n    setUserCurrency,\n    setTokenModalMsg,\n    setTokenModalOpen\n  } = props;\n\n  const checkPasswordState = useSelector(checkPasswordObjSelector);\n  const userCurrencyState = useSelector(userCurrencySelector);\n  const [currency, setCurrency] = useState(userCurrencyState);\n  const [modalOpened, setModalOpened] = useState(false);\n  const [password, setPassword] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [openPasswordSection, setOpenPasswordSection] = useState(false);\n  const [isRemoveBtn, setIsRemoveBtn] = useState(false);\n  const [isPasswordTouch, setIsPasswordTouch] = useState(false);\n  const imageRef = useRef();\n  const dispatch = useDispatch();\n  const cryptoDataState = useSelector(cryptoDataSelector);\n  const accountNameState = useSelector(accountsSelector);\n  const profileImageState =  useSelector(profileImageSelector);\n  const changeCurrencyState = useSelector(changeCurrencySelector);\n  const isValidPasswordKeyState = useSelector(isValidPasswordKeySelector);\n  const passwordKeyErrorState = useSelector(passwordKeyErrorSelector);\n  \n  useEffect(() => {\n    if (!isValidPasswordKeyState && passwordKeyErrorState) {\n      setPasswordError(\"Invalid Credentials\");\n      return;\n    }\n    if (isValidPasswordKeyState) {\n      if (isRemoveBtn) {\n        dispatch(passKeyResetService());\n        dispatch(deleteAvatarRequest(accountNameState));\n      }\n      else {\n        imageRef.current.click();\n      }\n      closePasswordSectionHandler(false);\n    }\n  }, [isValidPasswordKeyState, passwordKeyErrorState])\n  const changeCurrencyHandler = async (e) => {\n    e.preventDefault();\n    dispatch(saveUserCurrencyRequest({login:accountNameState,currency}));\n  };\n  useEffect(()=>{\n    if (changeCurrencyState) {\n      setModalOpened(true);\n    }\n  },[changeCurrencyState]);\n\n  const uploadImageValidation = async () => {\n    if (!password) {\n      setIsPasswordTouch(true);\n      return;\n    }\n    dispatch(passKeyRequestService({ login: accountNameState, password}));\n  }\n\n  const removeImageValidation = async () => {\n    if (!password) {\n      setIsPasswordTouch(true);\n      return;\n    }\n    dispatch(passKeyRequestService({ login: accountNameState, password}));\n  }\n\n  async function uploadFile(e) {\n    e.preventDefault();\n    if (e.target?.files[0]?.name) {\n      let type = e.target?.files[0]?.name.split(\".\")[1];\n      if (type === \"png\" || type === \"jpeg\" || type === \"jpg\") {\n        if (\n          e.target?.files[0]?.size > 70000 &&\n          e.target?.files[0]?.size < 1000000\n        ) {\n          const formData = new FormData();\n          formData.append(\"login\", accountNameState);\n          formData.append(\n            \"file\",\n            document.getElementById(\"file_upload\")?.files[0]\n          );\n          dispatch(uploadAvatarRequest(formData));\n        } else {\n          alert(\"Invalid file size\");\n        }\n      } else {\n        alert(\"Invalid file format\");\n      }\n    } else {\n      alert(\"Please select a file\");\n    }\n    document.getElementById(\"file_upload\").value = \"\";\n  }\n\n  const openPasswordSectionHandler = (isRemove = false) => {\n    setPassword('');\n    setOpenPasswordSection(true);\n    setPasswordError('');\n    if (isRemove) setIsRemoveBtn(true);\n  }\n  const closePasswordSectionHandler = () => {\n    setOpenPasswordSection(false);\n    setPasswordError('');\n    setIsRemoveBtn(false);\n    setIsPasswordTouch(false);\n  }\n  return (\n    <>\n      <Modal\n        size=\"mini\"\n        open={modalOpened}\n        onClose={() => {\n          setModalOpened(false);\n          dispatch(saveUserCurrencyReset())\n        }}\n        id={\"modalExch\"}\n      >\n        <Modal.Header>Currency change</Modal.Header>\n        <Modal.Content style={{ height: \"55%\" }}>\n          <div\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <h3 style={{ textAlign: \"center\" }}>\n              You have successfully changed the currency to{\" \"}\n              {currency.split(\" \")[0]}\n            </h3>\n          </div>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            style={{ backgroundColor: \"#fc0\", color: \"white\" }}\n            onClick={() => {\n              setModalOpened(false);\n              dispatch(saveUserCurrencyReset())\n            }}\n          >\n            OK\n          </Button>\n        </Modal.Actions>\n      </Modal>\n      <div>\n        <div style={{ background: \"#fff\", padding: \"1.05rem 2rem\" }}>\n          <h3 style={{ fontWeight: \"600\" }}>\n            <strong>Account Settings</strong>\n          </h3>\n        </div>\n        <div className={styles.adaptNeed}>\n          <div className={styles.mainBlockAdapt} style={{ width: \"70%\" }}>\n            <div className={styles.mainBlock}>\n              <div className={styles.mainHeader}>\n                <h3 style={{ fontWeight: \"700\" }}>Edit Profile</h3>\n              </div>\n              <hr style={{ color: \"rgba(80, 83, 97, 0.47)\" }} />\n              <div className={styles.changeDataBlock}>\n                <div className={styles.imgChangeBlock}>\n                  <div className={styles.userNewImgBlock}>\n                    <img\n                      src={profileImageState}\n                      id=\"imageUser\"\n                      style={{\n                        width: \"140px\",\n                        height: \"140px\",\n                        borderRadius: \"100px\",\n                      }}\n                      alt=\"\"\n                    />\n                  </div>\n                  <div className={styles.extraInfoBlock}>\n\n                    {<div style={openPasswordSection ? { display: 'none', fontFamily: \"Poppins, sans-serif\" } : { display: 'block', fontFamily: \"Poppins, sans-serif\" }}>\n                      <h4 style={{ margin: \"0\" }}>Upload a Photo</h4>\n                      <div className={styles.buttonAdapt}>\n                        <div\n                          className={styles.blockForUpload}\n                          style={{ position: \"relative\" }}\n                          onClick={() => openPasswordSectionHandler()}\n                        >\n                          <p className={styles.pUpload}>Choose a File</p>\n\n                        </div>\n                        <div style={{ display: 'none' }} >\n                          <input\n                            type=\"file\"\n                            id=\"file_upload\"\n                            onChange={(e) => {\n                              uploadFile(e);\n                            }}\n                            onClick={()=>{\n                              dispatch(passKeyResetService());\n                            }}\n                            ref={imageRef}\n                            className={styles.uploadButton}\n                          />\n                        </div>\n                        <button\n                          className={styles.Button}\n                          style={{ marginLeft: \"1rem\" }}\n                          onClick={() => openPasswordSectionHandler(true)}\n                        >\n                          Remove the Photo\n                        </button>\n                      </div>\n                    </div>}\n                    {!!openPasswordSection && <div>\n                      <label>Enter Passkey</label>\n                      <input\n                        type='password'\n                        value={password}\n                        onChange={(e) => {\n                          setPassword(e.target.value)\n                          setIsPasswordTouch(true)\n                        }}\n                        onBlur={() => setIsPasswordTouch(true)}\n                        className={styles.input_password}\n                      />\n                      {!password && isPasswordTouch && <span style={{ color: 'red', display: 'block' }}>Passkey field can't be empty</span>}\n                      <button onClick={!isRemoveBtn ? uploadImageValidation : removeImageValidation} className={styles.Button_Password} >Submit</button>\n                      <button onClick={closePasswordSectionHandler} className={styles.Button_Password}>Cancel</button>\n                    </div>}\n                    <div className={styles.extraText}>\n                      <span>Acceptable formats: jpg, png only</span>\n                      <span>\n                        Maximum file size is 1mb and minimum size 70kb\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className={styles.changeCurrencyBlock}>\n              <div className={styles.changeCurrencyHeader}>\n                <h3>Currency Preference</h3>\n              </div>\n              <hr style={{ color: \"rgba(80, 83, 97, 0.47)\" }} />\n              <form\n                onSubmit={changeCurrencyHandler}\n                className={styles.changeCurrencyForm}\n              >\n                <div\n                  style={{ margin: \"0 0 1rem 0\", color: \"rgb(90, 103, 118)\" }}\n                >\n                  <span>\n                    Select your preferred display currency for all markets.\n                  </span>\n                </div>\n                <div className={styles.changeDataInput}>\n                  <select\n                    className={styles.currencySelect}\n                    onChange={(e) => setCurrency(e.target.value)}\n                    name=\"currencies\"\n                    id=\"currenciesChoose\"\n                    value={currency}\n                  >\n                    <option value=\"$ USD 1\">$ (USD)</option>\n                    <option value={`€ EUR ${cryptoDataState.ExchangeRate[0].rate}`}>\n                      € (EUR)\n                    </option>\n                    <option value={`£ GBP ${cryptoDataState.ExchangeRate[1].rate}`}>\n                      £ (GBP)\n                    </option>\n                    <option value={`₽ RUB ${cryptoDataState.ExchangeRate[2].rate}`}>\n                      ₽ (RUB)\n                    </option>\n                    <option\n                      value={`CA$ CAD ${cryptoDataState.ExchangeRate[3].rate}`}\n                    >\n                      CA$ (CAD)\n                    </option>\n                  </select>\n                </div>\n                <div className={styles.blockButton}>\n                  <button\n                    type={\"submit\"}\n                    style={{ width: \"10rem\" }}\n                    className={styles.Button}\n                  >\n                    Update\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n          <div className={styles.helpBlockAdapt} style={{ width: \"30%\" }}>\n            <RightSideHelpMenuThirdType\n              onClickExchangeEOSHandler={onClickExchangeEOSHandler}\n              onClickExchangeUSDTHandler={onClickExchangeUSDTHandler}\n            />\n          </div>\n        </div>\n      </div>\n\n      <Modal\n        size=\"mini\"\n        open={passwordError !== ''}\n        onClose={() => {\n          setPasswordError('');\n          dispatch(passKeyResetService());\n        }}\n        id={\"modalExch\"}\n      >\n        <Modal.Header>Error occured</Modal.Header>\n        <Modal.Content>\n          <Grid verticalAlign=\"middle\" centered>\n            <Grid.Row centered columns={2}>\n              <Grid.Column width={4}>\n                <Icon disabled name=\"warning sign\" size=\"huge\" />\n              </Grid.Column>\n\n              <Grid.Column width={10}>\n                <div className=\"trade-error\">{passwordError}</div>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button positive onClick={() => {\n            setPasswordError('');\n            dispatch(passKeyResetService());\n          }}>\n            OK\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    </>\n  );\n};\n\nexport default Settings;\n","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/LeftPanel/LeftPanel.js",["376","377","378"],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/RightSideHelpMenuSecondType/RightSideHelpMenuSecondType.js",["379"],"import * as React from \"react\";\nimport styles from \"./RightSideHelpMenuSecondType.module.scss\";\nimport { useQuery } from \"react-query\";\nimport MetaLoader from \"../../UI/loader/Loader\";\nimport { getAsset } from \"../Wallet/cryptoChooser\";\nimport getHistory from \"../../lib/fetchHistory\";\nimport { removeExponent } from '../../utils/commonFunction'\nimport { trxTypes } from \"../../helpers/utility\";\nimport { ChainTypes as grapheneChainTypes } from 'meta1-vision-js';\nconst {operations} = grapheneChainTypes;\nconst ops = Object.keys(operations);\nops.push(\n\t'property_create_operation',\n\t'property_update_operation',\n\t'property_approve_operation',\n\t'property_delete_operation',\n\t'asset_price_publish_operation'\n);\nconst RightSideHelpMenuSecondType = (props) => {\n  const { onClickExchangeEOSHandler, onClickExchangeUSDTHandler } = props;\n\n  const { data, isLoading } = useQuery(\"historySideBar\", getHistory, {\n    refetchInterval: 3000,\n  });\n\n  const DateOfStartEOS = 1645998629;\n  const DateOfStartUSDT = 1646085029;\n\n  const calculateDate = (date) => {\n    return Math.floor((new Date() / 1000 - date) / 86400);\n  };\n\n  return (\n    <div className={`${styles.adaptNeed} ${props.fromHistory ? styles.newAdaptNeed : ''}`}>\n      <div className={`${styles.newCrypto} ${typeof props.fromHistory === 'boolean' && props.fromHistory ? styles.newCryptoCustom : ''} ${typeof props.fromHistory === 'string' && props.fromHistory === 'exchange' ? styles.newCryptoCustomExchange : ''}`}>\n        <h5 style={{ fontWeight: \"bold\", fontSize: \"1rem\" }}>\n          New Crypto on META1\n        </h5>\n        <hr />\n        <div className={styles.newCryptoBlock}>\n          <div\n            className={styles.crypto}\n            id={\"usdtBlock\"}\n            onClick={onClickExchangeUSDTHandler}\n            style={{ cursor: \"pointer\" }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <img\n                style={{ width: \"35px\", height: \"35px\", marginTop: \".3rem\" }}\n                src=\"https://icons.iconarchive.com/icons/cjdowner/cryptocurrency-flat/1024/Tether-USDT-icon.png\"\n                alt=\"uniswap\"\n              />\n              <div\n                className={styles.blockCryptText}\n                style={{ marginLeft: \".5rem\" }}\n              >\n                <h6>USDT</h6>\n                <span>Added {calculateDate(DateOfStartUSDT)} days ago</span>\n              </div>\n            </div>\n            <div style={{ marginTop: \"1rem\", marginRight: \"1rem\" }}>\n              <i\n                style={{ color: \"#240000\" }}\n                className=\"fas fa-chevron-right event\"\n              />\n            </div>\n          </div>\n          <hr />\n          <div\n            className={styles.crypto}\n            id={\"eosBlock\"}\n            onClick={onClickExchangeEOSHandler}\n            style={{ cursor: \"pointer\" }}\n          >\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              <img\n                style={{ width: \"35px\", height: \"35px\", marginTop: \".3rem\" }}\n                src=\"https://icons.iconarchive.com/icons/cjdowner/cryptocurrency-flat/1024/EOS-icon.png\"\n                alt=\"cordano\"\n              />\n              <div\n                className={styles.blockCryptText}\n                style={{ marginLeft: \".5rem\" }}\n              >\n                <h6>EOS</h6>\n                <span>Added {calculateDate(DateOfStartEOS)} days ago</span>\n              </div>\n            </div>\n            <div style={{ marginTop: \"1rem\", marginRight: \"1rem\" }}>\n              <i\n                style={{ color: \"#240000\" }}\n                className=\"fas fa-chevron-right event\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className={`${styles.intro} ${typeof props.fromHistory === \"boolean\" && props.fromHistory ? styles.newIntro : ''} ${typeof props.fromHistory === 'string' && props.fromHistory === 'exchange' ? styles.newCryptoCustomExchange : ''}`}>\n        <h5>Recent Transactions</h5>\n        <hr />\n        {isLoading ? (\n          <MetaLoader size={\"small\"} />\n        ) : data.length > 0 ? (\n          data?.map((el, index) => (\n            <div\n              key={index}\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                margin: \"1rem 0\",\n              }}\n            >\n              <div\n                style={{ margin: \"auto 0\", width: \"6rem\", textAlign: \"end\" }}\n              >\n                <span\n                  className={`${styles.spanStatusBtn} ${trxTypes[ops[el.op_type]] === 'Cancel order' ? styles.transactionSpanCancel : trxTypes[ops[el.op_type]] === 'Place order' ? styles.transactionSpanPlace : styles.transactionSpanFill }`}\n                >{trxTypes[ops[el.op_type]]}</span>\n              </div>\n              <div\n                style={{ margin: \".25rem 0\", width: \"6rem\", textAlign: \"end\" }}\n              >\n                <p>{removeExponent(Number(el.amount))}</p>\n              </div>\n            </div>\n          ))\n        ) : (\n          <div className={styles.helpBlock}>\n            <span>\n              You don't own any crypto. <br /> Ready to make a purchase?\n            </span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RightSideHelpMenuSecondType;\n","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/Footer/Footer.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/UI/loader/Loader.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/saga.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/reducer.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/Wallet/index.js",["380","381","382","383","384","385","386","387","388","389"],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/ExchangeForm/index.js",["390","391","392","393","394","395","396","397","398","399","400","401","402"],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/SignUpForm/index.js",["403","404"],"import React, { useEffect, useState } from \"react\";\nimport { UserInformationForm } from \"./UserInformationForm.js\";\nimport SubmitForm from \"./SubmitForm.js\";\nimport createAccountWithPassword from \"../../lib/createAccountWithPassword.js\";\nimport { Button } from \"semantic-ui-react\";\nimport RightSideHelpMenuFirstType from \"../RightSideHelpMenuFirstType/RightSideHelpMenuFirstType\";\n\nimport { checkOldUser } from \"../../API/API\";\nimport OpenLogin from '@toruslabs/openlogin';\n\nimport \"./SignUpForm.css\";\nimport FaceKiForm from \"./FaceKiForm.js\";\nimport MigrationForm from \"./MigrationForm.js\";\n\nexport default function SignUpForm(props) {\n  const {\n    onRegistration,\n    onClickExchangeEOSHandler,\n    onClickExchangeUSDTHandler,\n    portfolio,\n    isSignatureProcessing,\n    signatureResult,\n    onBackClick\n  } = props;\n  const [accountName, setAccountName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [step, setStep] = useState('userform');\n  const [authData, setAuthData] = useState(null);\n  const [privKey, setPrivKey] = useState(null);\n\n  useEffect(() => {\n    if (isSignatureProcessing) {\n      setAccountName(localStorage.getItem('login'));\n      setPassword(localStorage.getItem('password'));\n      setFirstName(localStorage.getItem('firstname'));\n      setLastName(localStorage.getItem('lastname'));\n      setPhone(localStorage.getItem('phone'));\n      setEmail(localStorage.getItem('email'));\n      setStep('signature');\n    }\n  }, [])\n\n  const openLogin = new OpenLogin({\n    clientId: process.env.REACT_APP_TORUS_PROJECT_ID,\n    network: process.env.REACT_APP_TORUS_NETWORK,\n    uxMode: 'popup',\n    whiteLabel: {\n      name: 'META1'\n    },\n  });\n\n  const stepUserInfoSubmit = async (\n    accName,\n    pass,\n    newPhone,\n    newLastName,\n    newFirstName\n  ) => {\n    setAccountName(accName);\n    setFirstName(newFirstName);\n    setPassword(pass);\n    setLastName(newLastName);\n    setPhone(newPhone);\n\n    const response = await checkOldUser(accName);\n    \n    if (response?.found === true) {\n      setStep('migration');\n    }\n    else renderTorusStep();\n  };\n\n  const stepGoToTorus = (\n    accName,\n    pass,\n    newPhone,\n    newLastName,\n    newFirstName\n  ) => {\n    setAccountName(accName);\n    setFirstName(newFirstName);\n    setPassword(pass);\n    setLastName(newLastName);\n    setPhone(newPhone);\n    renderTorusStep();\n  };\n\n  const stepGoToEsignature = () => {\n    setStep('submit');\n  };\n\n  const stepLastSubmit = async () => {\n\n    try {\n      await createAccountWithPassword(\n        accountName,\n        password,\n        false,\n        \"\",\n        1,\n        \"\",\n        phone,\n        email,\n        lastName,\n        firstName\n      );\n      localStorage.removeItem('password');\n      localStorage.removeItem('firstname');\n      localStorage.removeItem('lastname');\n      localStorage.removeItem('phone');\n      localStorage.removeItem('email');\n      onRegistration(accountName, password, email);\n    } catch (e) { }\n  };\n\n  const renderStep = () => {\n    switch (step) {\n      case 'userform':\n        return <UserInformationForm\n          {...props}\n          onSubmit={stepUserInfoSubmit}\n          accountName={accountName}\n          lastName={lastName}\n          firstName={firstName}\n          password={password}\n          phone={phone}\n        />\n      case 'faceki':\n        return <FaceKiForm\n          {...props}\n          onClick={stepGoToEsignature}\n          accountName={accountName}\n          lastName={lastName}\n          firstName={firstName}\n          password={password}\n          email={email}\n          privKey={privKey}\n          phone={phone}\n        />\n      case 'migration':\n        return <MigrationForm\n          {...props}\n          onClick={stepGoToTorus}\n          accountName={accountName}\n          lastName={lastName}\n          firstName={firstName}\n          password={password}\n          email={email}\n          privKey={privKey}\n          phone={phone}\n        />\n      case 'submit':\n        return <SubmitForm\n          {...props}\n          onSubmit={stepLastSubmit}\n          accountName={accountName}\n          lastName={lastName}\n          firstName={firstName}\n          password={password}\n          privKey={privKey}\n          email={email}\n          phone={phone} />\n      case 'signature':\n        return <SubmitForm\n          {...props}\n          onSubmit={stepLastSubmit}\n          accountName={accountName}\n          lastName={lastName}\n          firstName={firstName}\n          password={password}\n          privKey={privKey}\n          email={email}\n          signatureResult={signatureResult}\n          phone={phone} />\n      default:\n        return null;\n    }\n  }\n\n  const renderTorusStep = async () => {\n    if (\n      !openLogin\n    ) {\n      return;\n    }\n\n    try {\n      await openLogin.init();\n      await openLogin.login();\n      if (openLogin.privKey) {\n        const privKey = openLogin.privKey;\n        const data = await openLogin.getUserInfo();\n\n        setAuthData(data);\n        setPrivKey(privKey);\n        setEmail(data?.email);\n\n        console.log('User logged in');\n        setStep('faceki');\n      }\n    } catch (error) {\n      console.log('Error in Torus Render', error);\n    }\n  }\n\n  return (\n    <>\n      <div>\n        <div\n          style={{\n            background: \"#fff\",\n            width: \"100%\",\n            height: \"3.7rem\",\n            padding: \"1.1rem 2rem\",\n            boxShadow: \"0 9px 10px 0 rgba(0,0,0,0.11)\",\n            fontSize: \"1.3rem\",\n            fontWeight: \"bold\",\n          }}\n        >\n          <span style={{ color: \"#240000\" }}>META Lite Wallet</span>\n        </div>\n        <div className={\"createWalletForm\"}>\n          <div className={\"justFlexAndDirect\"}>\n            <div className={\"regForm\"}>\n              <Button\n                style={{ color: \"#fdc000\", fontSize: \".9rem\" }}\n                labelPosition=\"left\"\n                onClick={onBackClick}\n              >\n                <i\n                  className=\"fal fa-arrow-left\"\n                  style={{ marginRight: \".5rem\" }}\n                />\n                <span\n                  style={{\n                    borderBottom: \"1px solid #fdc000\",\n                    color: \"#fdc000\",\n                  }}\n                >\n                  Back\n                </span>\n              </Button>\n              {renderStep()}\n            </div>\n            <div className={\"adaptThing\"}>\n              <RightSideHelpMenuFirstType\n                onClickExchangeEOSHandler={onClickExchangeEOSHandler}\n                onClickExchangeUSDTHandler={onClickExchangeUSDTHandler}\n                portfolio={portfolio}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/SendForm/index.js",["405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428"],"import MetaLoader from \"../../UI/loader/Loader\";\nimport React, { useState, useEffect } from \"react\";\nimport useDebounce from \"../../lib/useDebounce\";\nimport { alpha, styled } from \"@mui/material/styles\";\nimport TextField from \"@mui/material/TextField\";\nimport styles from \"./SendForm.module.scss\";\nimport RightSideHelpMenuSecondType from \"../RightSideHelpMenuSecondType/RightSideHelpMenuSecondType\";\nimport { Modal, Icon, Button, Grid, Header, Popup } from \"semantic-ui-react\";\nimport Input from \"@mui/material/Input\";\nimport { helpSendTo, helpAmount, helpMax1, helpSwap } from \"../../config/help\";\nimport \"./style.css\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Meta1 from \"meta1-vision-dex\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { checkPasswordObjSelector, portfolioReceiverSelector, senderApiSelector, userCurrencySelector } from \"../../store/meta1/selector\";\nimport { accountsSelector, isValidPasswordKeySelector, passwordKeyErrorSelector } from \"../../store/account/selector\";\nimport { saveBalanceRequest } from \"../../store/meta1/actions\";\nimport { passKeyRequestService, passKeyResetService } from \"../../store/account/actions\";\n\nconst FEE = 0.00034;\n\nconst SendForm = React.memo((props) => {\n  const {\n    portfolio,\n    onBackClick,\n    sender,\n    asset,\n    onSuccessTransfer,\n    assets,\n    onClickExchangeEOSHandler,\n    onClickExchangeUSDTHandler\n  } = props;\n  const userCurrencyState = useSelector(userCurrencySelector);\n  const sendApiState = useSelector(senderApiSelector);\n  const portfolioReceiverState = useSelector(portfolioReceiverSelector);\n  const accountState = useSelector(accountsSelector);\n  const dispatch = useDispatch();\n  const feeAsset = portfolio.find((asset) => asset.name === \"META1\");\n  const amountHold =\n    portfolio.find((cur) => cur.name === asset).qty == undefined\n      ? 0\n      : portfolio.find((cur) => cur.name === asset).qty;\n  const pre = assets.find((el) => el.symbol === asset).precision;\n  const [chosenCrypt, setChosenCrypt] = useState(\"\");\n  const [receiver, setReceiver] = useState(\"\");\n  const [assetCh, setAssetCh] = useState(asset);\n  const [amount, setAmount] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [repeat, setRepeat] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [askForPassword, setAskForPassword] = useState(false);\n  const [inProgress, setInProgress] = useState(false);\n  const [modalOpened, setModalOpened] = useState(false);\n  const [accountChecked, setAccountChecked] = useState(false);\n  const [accountIsLoading, setAccountIsLoading] = useState(false);\n  const debouncedAccount = useDebounce(receiver, 500);\n  const [assetData, setAssetData] = useState({});\n  const [balance, setBalance] = useState(amountHold);\n  const [options, setOptions] = useState([]);\n  const [priceForAsset, setPriceForAsset] = useState(0);\n  const [blockPrice, setBlockPrice] = useState(0);\n  const [precisionAssets, setPrecisionAssets] = useState();\n  const [password, setPassword] = useState(\"\");\n  const [clickedInputs, setClickedInputs] = useState(false);\n  const [feeAlert, setFeeAlert] = useState(false);\n  const checkPasswordState = useSelector(checkPasswordObjSelector);\n  const isValidPasswordKeyState = useSelector(isValidPasswordKeySelector);\n  const passwordKeyErrorState = useSelector(passwordKeyErrorSelector);\n\n  useEffect(() => {\n    async function getData() {\n      if (asset !== \"USDT\" && asset !== \"META1\") {\n        const response = await fetch(\n          `https://api.binance.com/api/v3/ticker/24hr?symbol=${asset}USDT`\n        );\n        await setPriceForAsset((await response.json()).lastPrice);\n      } else if (asset === \"META1\") {\n        Meta1.ticker(\"USDT\", \"META1\").then((res) =>\n          setPriceForAsset(Number(res.latest).toFixed(2))\n        );\n      } else {\n        setPriceForAsset(1);\n      }\n    }\n    getData();\n  }, [asset]);\n\n  useEffect(() => {\n    if (!isValidPasswordKeyState && passwordKeyErrorState) {\n      setError(\"Invalid Credentials\");\n      setRepeat(true);\n      dispatch(passKeyResetService());\n      setInProgress(false);\n    }\n    if (isValidPasswordKeyState) {\n      dispatch(passKeyResetService());\n      performTransferSubmit();\n    }\n  },[isValidPasswordKeyState, passwordKeyErrorState])\n\n  const performTransferSubmit = async () => {\n    const result = await sendApiState.perform({\n      password,\n      to: receiver,\n      amount,\n      message,\n      asset,\n    });\n    if (result.error) {\n      if (result.error === \"Invalid credentials\") {\n        setError(result.error);\n      } else if ((asset === \"META1\" && feeAsset.qty === amount) || !feeAsset) {\n        setError(\"You don't have enough cryptocurrency to pay FEE\");\n      } else {\n        setError(\"Invalid Receiver\");\n      }\n      setRepeat(true);\n    } else {\n      dispatch(saveBalanceRequest(accountState))\n      setModalOpened(true);\n    }\n    setInProgress(false);\n  }\n  useEffect(() => {\n    function filterPrec() {\n      let preObj = {};\n      for (let i = 0; i < assets.length; i++) {\n        preObj[assets[i].symbol] = assets[i].precision;\n      }\n      setPrecisionAssets(preObj);\n    }\n    filterPrec();\n  }, [assets]);\n\n  useEffect(() => {\n    if (parseFloat(feeAsset?.qty) < FEE && feeAsset) {\n      setError(\"Not enough FEE\");\n    }\n  }, [feeAsset]);\n\n  useEffect(() => {\n    if (receiver.length > 0) {\n      setError(\"\");\n      setAccountIsLoading(true);\n      setAccountChecked(false);\n    }\n    setOptions(newOptions.sort((a, b) => (a.name > b.name ? 1 : -1)));\n  }, [receiver]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      let allInputs = document.getElementsByClassName(\n        \"css-1pw81iq-MuiInputBase-root-MuiFilledInput-root\"\n      );\n      for (let i = 0; i < allInputs.length; i++) {\n        allInputs[i].style.borderRadius = \"8px\";\n      }\n    }, 50);\n  }, []);\n\n  useEffect(() => {\n    if (Number(amount) <= 0 && clickedInputs) {\n      setError(\"Amount can't be 0, Please update it\");\n    } else if (Number(amount) > Number(balance)) {\n      setError(\"You don't have enough crypto\");\n    } else {\n      setError(\"\");\n    }\n  }, [amount, receiver]);\n\n  const RedditTextField = React.memo(\n    styled((props) => (\n      <TextField InputProps={{ disableUnderline: true }} {...props} />\n    ))(({ theme }) => ({\n      \"& .MuiFilledInput-root\": {\n        border: \"1px solid #e2e2e1\",\n        overflow: \"hidden\",\n        backgroundColor: theme.palette.mode === \"light\" ? \"#fcfcfb\" : \"#2b2b2b\",\n        borderRadius: \"8px !important\",\n        transition: theme.transitions.create([\n          \"border-color\",\n          \"background-color\",\n          \"box-shadow\",\n        ]),\n        \"&:hover\": {\n          backgroundColor: \"transparent\",\n        },\n        \"&.Mui-focused\": {\n          backgroundColor: \"transparent\",\n          boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n          borderColor: theme.palette.primary.main,\n        },\n      },\n    }))\n  );\n\n  const setSelected = (value) => {\n    setAssetCh(value.value);\n    portfolio.map((el) =>\n      el.name === value.value\n        ? setAssetData({\n          balance: el.qty,\n          image: el.image,\n          label: el.name,\n          value: el.name,\n        })\n        : null\n    );\n  };\n  const calculateUsdPriceHandler = (e) => {\n    let priceForOne = Number(e.target.value) * priceForAsset;\n    setBlockPrice(\n      Number(priceForOne).toFixed(precisionAssets[asset]) *\n      Number(userCurrencyState.split(\" \")[2])\n    );\n  };\n\n  const newOptions = portfolio.map((asset) => {\n    return {\n      image: asset.image,\n      value: asset.name,\n      label: asset.name,\n      balance: asset.qty || 0,\n    };\n  });\n\n  const calculateCryptoPriceHandler = (e) => {\n    let priceForOne = (\n      Number(e.target.value.split(\"$\")[0]) /\n      priceForAsset /\n      Number(userCurrencyState.split(\" \")[2])\n    ).toFixed(precisionAssets[asset]);\n    setAmount(priceForOne);\n    setBlockPrice(e.target.value);\n  };\n\n  useEffect(() => {\n    async function fetchAccount(debouncedAccount) {\n      // Сделать запрос к АП\n      try {\n        await portfolioReceiverState.fetch(debouncedAccount);\n        setAccountChecked(true);\n        setAccountIsLoading(false);\n        if (receiver === sender) {\n          setError(\"Can't transfer to self\");\n        }\n      } catch (e) {\n        setAccountChecked(false);\n        setAccountIsLoading(false);\n        setError(\"Invalid receiver\");\n      }\n    }\n\n    if (debouncedAccount) {\n      fetchAccount(debouncedAccount);\n    } else {\n      setAccountChecked(false);\n      setAccountIsLoading(false);\n    }\n\n    if (Number(amount) <= 0 && clickedInputs) {\n      setError(\"Amount can't be 0, Please update it\");\n    } else if (Number(amount) > Number(balance)) {\n      setError(\"You don't have enough crypto\");\n    } else {\n      setError(\"\");\n    }\n  }, [debouncedAccount, amount]);\n\n  const { innerWidth: width } = window;\n  const isMobile = width <= 600;\n\n  const performTransfer = async (params) => {\n    let asset = assetCh;\n    setError(null);\n    setInProgress(true);\n    const { password } = params;\n    dispatch(passKeyRequestService({ login: accountState, password}));  \n  };\n\n  const setAssetMax = () => {\n    setAmount(assetData.balance);\n    setBlockPrice(\n      Number(assetData.balance * priceForAsset).toFixed(\n        precisionAssets[asset]\n      ) * Number(userCurrencyState.split(\" \")[2])\n    );\n  };\n\n  useEffect(() => {\n    if (repeat) {\n      setTimeout(() => {\n        setError(null);\n        setRepeat(false);\n      }, 2000);\n    }\n  }, [repeat]);\n\n  useEffect(() => {\n    portfolio.map((el) =>\n      el.name === assetCh\n        ? setAssetData({\n          balance: el.qty,\n          image: el.image,\n          label: el.name,\n          value: el.name,\n        })\n        : null\n    );\n  }, [assetCh, assets]);\n  const PasswordForm = (props) => {\n    const [password, setPassword] = useState(\"\");\n    return (\n      <div class=\"ui large fluid labeled input action\">\n        <input\n          type=\"password\"\n          placeholder=\"Passkey\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value.trim())}\n        />\n        <Button color=\"yellow\" onClick={(e) => props.onSubmit(password)}>\n          {\" \"}\n          Send{\" \"}\n        </Button>\n      </div>\n    );\n  };\n  const ariaLabel = { \"aria-label\": \"description\" };\n\n  return (\n    <>\n      <div>\n        <Modal\n          size=\"mini\"\n          open={feeAlert}\n          onClose={() => setFeeAlert(false)}\n          id={\"modalExch\"}\n        >\n          <Modal.Header>All META1 transfer</Modal.Header>\n          <Modal.Content style={{ height: \"55%\" }}>\n            <div\n              style={{\n                width: \"100%\",\n                height: \"100%\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <h4 style={{ textAlign: \"center\" }}>\n                Insufficient Balance: prevented the send of Max amount of META1.\n                <br />\n                META1 coin is required to pay network fees, otherwise your\n                account can become unusable\n              </h4>\n            </div>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button negative onClick={() => setFeeAlert(false)}>\n              OK\n            </Button>\n          </Modal.Actions>\n        </Modal>\n        <div\n          className={\"headerTitle\"}\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <h2 className=\"headTl\">Send</h2>\n          <div style={{ marginRight: \"1rem\", cursor: \"pointer\" }}>\n            <i\n              onClick={onBackClick}\n              className=\"far fa-arrow-left\"\n              style={{ color: \"#FFC000\", marginRight: \".5rem\" }}\n            />\n            <span\n              onClick={onBackClick}\n              style={{\n                color: \"#FFC000\",\n                borderBottom: \"1px solid #FFC000\",\n                height: \"40%\",\n                fontWeight: \"600\",\n              }}\n            >\n              Back to Portfolio\n            </span>\n          </div>\n        </div>\n        <Modal\n          size=\"tiny\"\n          id={\"modal\"}\n          open={modalOpened}\n          onClose={() => {\n            setModalOpened(false);\n            onSuccessTransfer();\n          }}\n        >\n          <Modal.Header>Transfer Completed</Modal.Header>\n          <Modal.Content>\n            <Grid verticalAlign=\"middle\" centered>\n              <Grid.Row centered columns={1}>\n                <Grid.Column>\n                  <h3>\n                    {amount} of {assetCh} sent to {receiver}\n                  </h3>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              positive\n              onClick={() => {\n                setModalOpened(false);\n                onSuccessTransfer();\n              }}\n            >\n              OK\n            </Button>\n          </Modal.Actions>\n        </Modal>\n        <div className={\"justFlexAndDirect\"}>\n          <div className={\"widthh100\"}>\n            <div className={styles.containerMain}>\n              <div className={styles.mainBlock}>\n                <div className={styles.leftBlockSend}>\n                  <h2 style={{ textAlign: \"center\" }}>Send</h2>\n                  <RedditTextField\n                    label=\"From\"\n                    defaultValue={sender}\n                    className={styles.input}\n                    disabled\n                    id=\"reddit-input\"\n                    variant=\"filled\"\n                    style={{ marginBottom: \"1rem\", borderRadius: \"8px\" }}\n                  />\n                  <div\n                    className={styles.inputForAmount}\n                    style={{ marginBottom: \"1rem\" }}\n                  >\n                    <span\n                      style={{\n                        fontSize: \".8rem\",\n                        color: \"#505361\",\n                        marginBottom: \".3rem\",\n                      }}\n                    >\n                      Amount {assetData.label}\n                    </span>\n                    <Input\n                      id={\"inputForAmount\"}\n                      type=\"number\"\n                      value={amount ? amount : \"\"}\n                      min=\"0\"\n                      endAdornment={\n                        <InputAdornment position=\"end\" className=\"currency-color-change\" >\n                          <span style={{ fontSize: '16px' }}>{assetData.label}</span>\n                        </InputAdornment>\n                      }\n                      onChange={(e) => {\n                        const amountOut = e.target.value;\n                        if (\n                          e.target.value.length < 11 &&\n                          /[-+]?[0-9]*\\.?[0-9]*/.test(e.target.value) &&\n                          Number(e.target.value) >= 0\n                        ) {\n                          setClickedInputs(true);\n                          setAmount(amountOut);\n                          calculateUsdPriceHandler(e);\n                        }\n                      }}\n                      placeholder={balance}\n                    />\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                        marginTop: \".1rem\",\n                        fontSize: \"1rem\",\n                        color: \"#505361\",\n                        position:'relative'\n                      }}\n                    >\n                      <input\n                        type=\"number\"\n                        className={styles.inputDollars}\n                        min=\"0\"\n                        inputmode=\"numeric\"\n                        pattern=\"\\d*\"\n                        onChange={(e) => {\n                          if (Number(e.target.value) >= 0) {\n                            setClickedInputs(true);\n                            calculateCryptoPriceHandler(e);\n                          }\n                        }}\n                        placeholder={`Amount ${userCurrencyState.split(\" \")[1]}`}\n                        value={amount ? blockPrice : \"\"}\n                      />\n                      <span style={{ fontSize: '16px' }} className={styles['abs-sp']} >{userCurrencyState.split(\" \")[0]}</span>\n                    </div>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                        position: \"relative\",\n                      }}\n                    >\n                      <span style={{ color: \"#505361\", paddingTop: \"2rem\" }}>\n                        FEE: {FEE} META1\n                      </span>\n                      <div\n                        className=\"max-button-new\"\n                        style={{\n                          position: \"absolute\",\n                          right: \"0\",\n                          bottom: \"-3px\",\n                        }}\n                      >\n                        <Popup\n                          content={`Click this button to sell all your ${assetData.label}`}\n                          position={isMobile ? \"bottom left\" : \"bottom center\"}\n                          trigger={\n                            <Button\n                              className={\"btn\"}\n                              secondary\n                              onClick={setAssetMax}\n                              floated=\"right\"\n                              size=\"mini\"\n                            >\n                              MAX\n                            </Button>\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <Grid.Column>\n                    <TextField\n                      InputProps={{ disableUnderline: true }}\n                      label=\"Passkey\"\n                      className={styles.input}\n                      type={\"password\"}\n                      id=\"reddit-input pass\"\n                      variant=\"filled\"\n                      style={{ marginBottom: \"1rem\", borderRadius: \"8px\" }}\n                      value={password}\n                      onChange={({ target }) => setPassword(target.value)}\n                    />\n                  </Grid.Column>\n                </div>\n                <div\n                  style={{\n                    marginTop: \"4rem\",\n                    marginLeft: \".3rem\",\n                    width: \"40px\",\n                    height: \"40px\",\n                    background: \"#fdc000\",\n                    borderRadius: \"40px\",\n                    padding: \".7rem .85rem\",\n                  }}\n                  className=\"text-center-s\"\n                >\n                  <i\n                    style={{ color: \"#fff\" }}\n                    className={\n                      isMobile ? \"far fa-arrow-down\" : \"far fa-arrow-right\"\n                    }\n                  />\n                </div>\n                <div className={styles.rightBlockSend}>\n                  <h2 style={{ textAlign: \"center\" }}>Receive</h2>\n                  <TextField\n                    InputProps={{ disableUnderline: true }}\n                    label=\"To\"\n                    value={receiver}\n                    onChange={(e) => {\n                      setReceiver(e.target.value);\n                    }}\n                    className={styles.input}\n                    id=\"reddit-input receiver\"\n                    variant=\"filled\"\n                    style={{ marginBottom: \"1rem\", borderRadius: \"8px\" }}\n                  />\n                  <div className={styles.blockInfoCrypto}>\n                    <img\n                      style={{ width: \"60px\", height: \"60px\" }}\n                      src={assetData.image}\n                      alt=\"cryptImg\"\n                    />\n                    <div className={styles.blockInfoText}>\n                      <span>You will Send {assetData.label} Coin</span>\n                      <h3>\n                        {Number(amount) ? amount : 0} {assetData.label}\n                      </h3>\n                      <span>\n                        {blockPrice || 0} {userCurrencyState.split(\" \")[1]}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {!askForPassword && !inProgress && (\n                <Grid.Row className={\"buttonSend\"} columns={1}>\n                  <Popup\n                    disabled\n                    trigger={\n                      <button\n                        className={\"btnSend ui button yellow buttSend\"}\n                        style={{\n                          marginLeft: \"2rem\",\n                          marginTop: \"1rem\",\n                          boxShadow: \"0 2px 10px 0 rgba(0, 0, 0, .11)\",\n                        }}\n                        disabled={\n                          !accountChecked ||\n                          amount === \"\" ||\n                          password === \"\" ||\n                          error\n                        }\n                        onClick={(e) => {\n                          e.preventDefault();\n                          if (Number(amount) > Number(amountHold)) {\n                            setAskForPassword(false);\n                            setError(`your balance is not enough `);\n                            setRepeat(true);\n                          } else {\n                            let password =\n                              document.getElementById(\n                                \"reddit-input pass\"\n                              ).value;\n                            if (receiver !== \"\" && password !== \"\" && amount) {\n                              if (parseFloat(feeAsset?.qty) < FEE) {\n                                setError(\"Not enough FEE\");\n                              } else {\n                                if (\n                                  assetCh === \"META1\" &&\n                                  Number(amount) === Number(feeAsset.qty)\n                                ) {\n                                  setFeeAlert(true);\n                                } else {\n                                  performTransfer({\n                                    ...{ to: receiver },\n                                    ...{\n                                      password,\n                                      amount,\n                                      assetCh,\n                                      message,\n                                    },\n                                  });\n                                }\n                              }\n                            } else {\n                              setError(\n                                \"You have entered incorrect data, please check it.\"\n                              );\n                            }\n                          }\n                        }}\n                      >\n                        Confirm\n                      </button>\n                    }\n                  />\n                </Grid.Row>\n              )}\n\n              {inProgress && <MetaLoader size={\"small\"} />}\n\n              {error && (\n                <Grid>\n                  <Grid.Row centered>\n                    <h5 style={{ color: \"red\" }}>{error}</h5>\n                  </Grid.Row>\n                </Grid>\n              )}\n            </div>\n          </div>\n          <div className={\"bottomBlockAdapt\"}>\n            <RightSideHelpMenuSecondType\n              onClickExchangeEOSHandler={onClickExchangeEOSHandler}\n              onClickExchangeUSDTHandler={onClickExchangeUSDTHandler}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n});\n\nexport default SendForm;\n","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/DepositForm/index.js",["429","430","431","432","433","434","435"],"import { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Message,\n  Modal,\n  Icon,\n  Button,\n  Grid,\n  Header,\n  Input,\n} from \"semantic-ui-react\";\nimport QRCode from \"react-qr-code\";\n\nimport \"./style.css\";\n\nexport default function DepositForm(props) {\n  const { fetcher, account, onBackClick, asset } = props;\n  const [isLoading, setIsLoading] = useState(false);\n  const [address, setAddress] = useState(props.address);\n  const [refreshData, setRefreshData] = useState(false);\n  const [minAmountObj] = useState({\n    usdt: 1,\n    btc: 0.001,\n    bnb: 0.001,\n    xlm: 0.001,\n    ltc: 0.01,\n    eth: 0.001\n  });\n  const canDeposit = address.length > 0;\n  useEffect(() => {\n    async function fetchAddress(asset) {\n      if (typeof fetcher !== 'function') {\n        setRefreshData(prev => !prev);\n        return;\n      }\n      try {\n        setIsLoading(true);\n        const fetchedAsset = asset === \"USDT\" ? \"eth\" : asset;\n        const resp = await fetcher(fetchedAsset);\n        const body = await resp.body.getReader().read();\n        if (resp.status === 200) {\n          const addr = JSON.parse(\n            new TextDecoder(\"utf-8\").decode(body.value)\n          ).address;\n          setAddress(addr);\n        }\n        setIsLoading(false);\n      } catch (e) {\n        setIsLoading(false);\n      }\n    }\n\n    if (asset !== undefined) fetchAddress(asset);\n  }, [asset, refreshData]);\n\n  const getMinAmount = (key) => {\n    if (typeof key === 'string') {\n      key = key.toLowerCase();\n    }\n    return minAmountObj[key] ? minAmountObj[key] : 0.001;\n  }\n\n  return (\n    <>\n      <div>\n        <div\n          className={\"headerTitle\"}\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <h2 className=\"headTl\">Deposit</h2>\n          <div style={{ marginRight: \"1rem\", cursor: \"pointer\" }}>\n            <i\n              className=\"far fa-arrow-left\"\n              style={{ color: \"#FFC000\", marginRight: \".5rem\" }}\n            />\n            <span\n              onClick={onBackClick}\n              style={{\n                color: \"#FFC000\",\n                borderBottom: \"1px solid #FFC000\",\n                height: \"40%\",\n                fontWeight: \"600\",\n              }}\n            >\n              Back to Portfolio\n            </span>\n          </div>\n        </div>\n\n        <div className=\"qr-section\">\n          <div\n            style={{\n              background: \"#F0F1F4\",\n              padding: \"1rem\",\n              width: \"96%\",\n              margin: \"0 auto\",\n              borderRadius: \"10px\",\n            }}\n          >\n            <span\n              style={{\n                color: \"#000\",\n                fontWeight: \"bold\",\n                fontSize: \".8rem\",\n                margin: \"1rem\",\n              }}\n            >\n              DEPOSIT <span style={{ color: \"#FFC000\" }}>{asset}</span>\n            </span>\n            <div className={\"needAdaptToQR\"}>\n              {!isLoading && !canDeposit && <p> Cannot deposit </p>}\n              {!isLoading && canDeposit && (\n                <QRCode value={address} size={200} />\n              )}\n            </div>\n          </div>\n          <p\n            style={{\n              margin: \"1rem\",\n              color: \"#505361\",\n              fontWeight: \"600\",\n              fontSize: \".8rem\",\n            }}\n          >\n            Minimum deposit: {getMinAmount(asset)} {asset} {asset.toLowerCase()==='usdt'?'(ERC20)':''}\n          </p>\n          <div>\n            {!isLoading && canDeposit && (\n              <CopyToClipboard text={address} onCopy={() => {}}>\n                <div style={{ width: \"100%\" }}>\n                  <Input\n                    style={{ width: \"100%\" }}\n                    action={{\n                      color: \"yellow\",\n                      labelPosition: \"right\",\n                      icon: \"copy\",\n                      content: \"Copy\",\n                    }}\n                    value={address}\n                  />\n                </div>\n              </CopyToClipboard>\n            )}\n          </div>\n\n          <Message\n            className={\"messageRed\"}\n            icon=\"attention\"\n            header=\"Important information\"\n            content={`Send only ${asset} ${asset.toLowerCase()==='usdt'?'ERC20':''} to this address. Sending less than ${getMinAmount(asset)} ${asset} or any other currency to this address may result in the loss of your deposit`}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/WithdrawForm/index.js",["436","437","438","439","440","441","442","443","444","445","446","447","448","449","450"],"\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport React, { useState, useEffect } from \"react\";\nimport Meta1 from \"meta1-vision-dex\";\nimport { PrivateKey } from \"meta1-vision-js\";\nimport {\n  Image, Modal, Button, Grid, Icon, Label, Popup\n} from \"semantic-ui-react\";\nimport Input from \"@mui/material/Input\";\nimport TextField from \"@mui/material/TextField\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport CAValidator from \"multicoin-address-validator\";\n\nimport \"./style.css\";\nimport ExchangeSelect from \"../ExchangeForm/ExchangeSelect.js\";\nimport styles from \"../ExchangeForm/ExchangeForm.module.scss\";\nimport { helpWithdrawInput, helpMax1 } from \"../../config/help\";\nimport MetaLoader from \"../../UI/loader/Loader\";\nimport { trim } from \"../../helpers/string\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { sendEmailSelector } from \"../../store/account/selector\";\nimport { sendMailRequest, sendMailReset } from \"../../store/account/actions\";\nimport { userCurrencySelector } from \"../../store/meta1/selector\";\n\nconst WITHDRAW_ASSETS = [\"ETH\", \"BTC\", \"BNB\", \"XLM\", \"LTC\", \"USDT\"];\n\nconst MIN_WITHDRAW_AMOUNT = {\n  \"BTC\": 0.0005,\n  \"ETH\": 0.01,\n  \"LTC\": 0.001,\n  \"EOS\": 0.1,\n  \"XLM\": 0.01,\n  \"META1\": 0.02,\n  \"USDT\": 50,\n};\n\nconst WithdrawForm = (props) => {\n  const {onBackClick, asset } = props;\n  const userCurrencyState = useSelector(userCurrencySelector);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedFrom, setSelectedFrom] = useState(props.selectedFrom);\n  const [selectedFromAmount, setSelectedFromAmount] = useState(\"\");\n  const [amountError, setAmountError] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [isValidName, setIsValidName] = useState(false);\n  const [emailAddress, setEmailAddress] = useState(\"\");\n  const [isValidEmailAddress, setIsValidEmailAddress] = useState(false);\n  const [blockPrice, setBlockPrice] = useState();\n  const [priceForAsset, setPriceForAsset] = useState(0);\n  const [assets, setAssets] = useState(props.assets);\n  const [options, setOptions] = useState([]);\n  const [invalidEx, setInvalidEx] = useState(false);\n  const [clickedInputs, setClickedInputs] = useState(false);\n  const [toAddress, setToAddress] = useState(\"\");\n  const [isValidAddress, setIsValidAddress] = useState(false);\n  const [isValidCurrency, setIsValidCurrency] = useState(false);\n  const sendEmailState = useSelector(sendEmailSelector);\n  const dispatch = useDispatch();\n  const ariaLabel = { \"aria-label\": \"description\" };\n  useEffect(() => {\n    const currentPortfolio = props.portfolio || [];\n    setAssets(props.assets);\n\n    const getBalance = (symbol) => {\n      const assetInWallet = currentPortfolio.find((el) => el.name === symbol);\n\n      return assetInWallet ? assetInWallet.qty : 0;\n    };\n\n    const newOptions = assets.map((asset) => {\n      return {\n        image: asset.image,\n        value: asset.symbol,\n        label: asset.symbol,\n        pre: asset.precision,\n        balance: getBalance(asset.symbol) || 0,\n      };\n    });\n\n    setOptions(newOptions);\n\n    if (options !== []) {\n      const from = asset\n        ? newOptions.find((el) => el.value === asset)\n        : newOptions[0];\n\n      setSelectedFrom(from);\n    } else {\n      setSelectedFrom(newOptions.find((o) => o.value === selectedFrom.value));\n    }\n  }, [props.assets, props.portfolio]);\n  useEffect(() => {\n    if (selectedFrom) {\n      changeAssetHandler(selectedFrom.value);\n    }\n  }, [selectedFrom]);\n\n  useEffect(() => {\n    if (selectedFrom && selectedFromAmount) {\n      console.log(\"@1 - \", selectedFromAmount === 0)\n      if (parseFloat(selectedFrom.balance) < parseFloat(selectedFromAmount)) {\n        setAmountError('Amount exceeded the balance.');\n      } else if (parseFloat(MIN_WITHDRAW_AMOUNT['USDT']) > parseFloat(blockPrice)/userCurrencyState.split(' ')[2]) {\n        setAmountError('Amount is too small.');\n      } else {\n        setAmountError('');\n      }\n    } else {\n      setAmountError('');\n    }\n  }, [selectedFromAmount, blockPrice]);\n\n  useEffect(() => {\n    if (!name) {\n      setIsValidName(true);\n    } else if (trim(name) === '') {\n      setIsValidName(false);\n    } else {\n      setIsValidName(true);\n    }\n  }, [name]);\n\n  useEffect(() => {\n    if (emailAddress) {\n      setIsValidEmailAddress(\n        String(emailAddress).toLowerCase().match(\n          /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        )\n      );\n    } else {\n      setIsValidEmailAddress(false);\n    }\n  }, [emailAddress]);\n\n  useEffect(() => {\n    if (selectedFrom && toAddress) {\n      if (process.env.REACT_APP_ENV === 'prod') {\n        setIsValidAddress(CAValidator.validate(toAddress, selectedFrom.value));\n      } else {\n        setIsValidAddress(\n          CAValidator.validate(toAddress, selectedFrom.value, \"testnet\")\n        );\n      }\n    }\n  }, [toAddress, selectedFrom]);\n  const changeAssetHandler = async (val) => {\n    if (val !== \"META1\" && val !== \"USDT\") {\n      const response = await fetch(\n        `https://api.binance.com/api/v3/ticker/24hr?symbol=${val}USDT`\n      );\n      await setPriceForAsset((await response.json()).lastPrice);\n    } else if (val === \"USDT\") {\n      setPriceForAsset(1);\n    } else {\n      Meta1\n        .ticker(\"USDT\", \"META1\")\n        .then((res) => setPriceForAsset(Number(res.latest).toFixed(2)));\n    }\n  };\n\n  const setAssetMax = (e) => {\n    e.preventDefault();\n    setSelectedFromAmount(selectedFrom.balance);\n    setTimeout(() => {\n      let priceForOne = (\n        Number(document.getElementById(\"inputAmount\").value) * priceForAsset\n      ).toFixed(3);\n      setBlockPrice(priceForOne * Number(userCurrencyState.split(\" \")[2]));\n    }, 25);\n  };\n\n  const calculateUsdPriceHandler = (e) => {\n    if (e.target.value.length != 0) {\n      const priceForOne = (Number(e.target.value) * priceForAsset).toFixed(2);\n      setBlockPrice(priceForOne * Number(userCurrencyState.split(\" \")[2]));\n    } else {\n      setBlockPrice(NaN);\n    }\n  };\n\n  const calculateCryptoPriceHandler = (e) => {\n    setBlockPrice(e.target.value);\n\n    if (e.target.value) {\n      let priceForOne = (\n        Number(e.target.value) /\n        priceForAsset /\n        Number(userCurrencyState.split(\" \")[2])\n      ).toFixed(selectedFrom.label === \"USDT\" ? 3 : selectedFrom.pre);\n      setSelectedFromAmount(priceForOne);\n    } else {\n      setSelectedFromAmount(e.target.value);\n    }\n  };\n\n  const onClickWithdraw = (e) => {\n    e.preventDefault();\n\n    const emailType = \"withdraw\";\n    const emailData = {\n      accountName: props.accountName,\n      name: trim(name),\n      emailAddress: trim(emailAddress),\n      asset: selectedFrom.value,\n      amount: selectedFromAmount,\n      toAddress: trim(toAddress)\n    };\n    dispatch(sendMailRequest({emailType,emailData}))\n  }\n\n  useEffect(()=>{\n    if (sendEmailState) {\n      alert(\"Email sent, awesome!\");\n      // Reset form inputs\n      setName('');\n      setEmailAddress('');\n      setSelectedFromAmount(NaN);\n      setBlockPrice(NaN);\n      setToAddress('');\n      dispatch(sendMailReset());\n    }\n  }, [sendEmailState]);\n\n  if (selectedFrom == null) return null;\n\n  const getAssets = (except) => options\n    .filter((asset) => WITHDRAW_ASSETS.indexOf(asset.value) > -1)\n    .filter((el) => el.value !== except);\n\n  const canWithdraw = name && isValidName &&\n    isValidEmailAddress &&\n    isValidAddress &&\n    !amountError &&\n    selectedFromAmount;\n\n  return (\n    <>\n      <div className=\"withdraw\">\n        <div\n          className={\"headerTitle\"}\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <h2 className=\"headTl\">Withdraw</h2>\n          <div style={{ marginRight: \"1rem\", cursor: \"pointer\" }}>\n            <i\n              className=\"far fa-arrow-left\"\n              style={{ color: \"#FFC000\", marginRight: \".5rem\" }}\n            />\n            <span\n              onClick={onBackClick}\n              style={{\n                color: \"#FFC000\",\n                borderBottom: \"1px solid #FFC000\",\n                height: \"40%\",\n                fontWeight: \"600\",\n              }}\n            >\n              Back to Portfolio\n            </span>\n          </div>\n        </div>\n\n        {isLoading ?\n          <MetaLoader size={\"small\"} />\n          :\n          <form>\n            <label>\n              <span>Name:</span><br />\n              <TextField\n                InputProps={{ disableUnderline: true, className: 'custom-input-bg' }}\n                value={name}\n                onChange={(e) => { setName(e.target.value) }}\n                className={styles.input}\n                id=\"name-input\"\n                variant=\"filled\"\n                style={{ marginBottom: \"1rem\", borderRadius: \"8px\" }}\n              />\n              {name && !isValidName &&\n                <span className=\"c-danger\">Invalid first name</span>\n              }\n            </label><br />\n            <label>\n              <span>Email Address:</span><br />\n              <TextField\n                InputProps={{ disableUnderline: true, className: 'custom-input-bg' }}\n                value={emailAddress}\n                onChange={(e) => { setEmailAddress(e.target.value) }}\n                className={styles.input}\n                id=\"emailaddress-input\"\n                variant=\"filled\"\n                style={{ marginBottom: \"1rem\", borderRadius: \"8px\" }}\n              />\n              {emailAddress && !isValidEmailAddress &&\n                <span className=\"c-danger\">Invalid email address</span>\n              }\n            </label><br />\n            <label>\n              <span>META1 Wallet Name:</span>\n              <TextField\n                InputProps={{ disableUnderline: true }}\n                value={props.accountName}\n                disabled={true}\n                className={styles.input}\n                id=\"wallet-name-input\"\n                variant=\"filled\"\n                style={{ marginBottom: \"1rem\", borderRadius: \"8px\" }}\n              />\n            </label><br />\n            <label>\n              <span>From Currency:</span>\n              <ExchangeSelect\n                onChange={(val) => {\n                  setSelectedFrom(val);\n                  changeAssetHandler(val.value);\n                  setSelectedFromAmount(NaN);\n                  setBlockPrice(NaN);\n                  setInvalidEx(false);\n                }}\n                options={getAssets(selectedFrom.value)}\n                selectedValue={selectedFrom}\n              />\n            </label><br />\n            <label>\n              <span>From Amount:</span>\n              <div className=\"wallet-input\">\n                <Popup\n                  content={helpWithdrawInput(selectedFrom?.value)}\n                  position=\"bottom center\"\n                  trigger={\n                    <div className={styles.inputForAmount}>\n                      <Input\n                        placeholder=\"Amount crypto\"\n                        value={selectedFromAmount}\n                        type={\"number\"}\n                        onChange={(e) => {\n                          if (\n                            e.target.value.length < 11 &&\n                            /[-+]?[0-9]*\\.?[0-9]*/.test(\n                              e.target.value\n                            ) &&\n                            Number(e.target.value) >= 0\n                          ) {\n                            setSelectedFromAmount(e.target.value);\n                            calculateUsdPriceHandler(e);\n                            setClickedInputs(true);\n                          }\n                        }}\n                        endAdornment={\n                          <InputAdornment position=\"end\">\n                            {selectedFrom.label}\n                          </InputAdornment>\n                        }\n                        inputProps={ariaLabel}\n                        id={\"inputAmount\"}\n                        disabled={invalidEx}\n                        min=\"0\"\n                        inputMode=\"numeric\"\n                        pattern=\"\\d*\"\n                      />\n                      <div\n                        style={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                          marginTop: \".1rem\",\n                          fontSize: \"1rem\",\n                          color: \"#505361\",\n                        }}\n                      >\n                        <input\n                          className={styles.inputDollars}\n                          onChange={(e) => {\n                            if (\n                              e.target.value.length < 11 &&\n                              /[-+]?[0-9]*\\.?[0-9]*/.test(\n                                e.target.value\n                              ) &&\n                              Number(e.target.value) >= 0\n                            ) {\n                              calculateCryptoPriceHandler(e);\n                              setClickedInputs(true);\n                            }\n                          }}\n                          min=\"0\"\n                          inputMode=\"numeric\"\n                          pattern=\"\\d*\"\n                          type={\"number\"}\n                          placeholder={`Amount ${userCurrencyState.split(\" \")[1]\n                            }`}\n                          disabled={invalidEx}\n                          style={\n                            invalidEx ? { opacity: \"0.5\" } : null\n                          }\n                          value={blockPrice}\n                        />\n                        <span>{userCurrencyState.split(\" \")[0]}</span>\n                      </div>\n                    </div>\n                  }\n                />\n                <div className=\"max-button\">\n                  <Popup\n                    content={helpMax1(selectedFrom?.value)}\n                    position=\"bottom center\"\n                    trigger={\n                      <Button\n                        secondary\n                        className={\"btn\"}\n                        onClick={setAssetMax}\n                        floated=\"right\"\n                        size=\"mini\"\n                      >\n                        MAX\n                      </Button>\n                    }\n                  />\n                </div>\n              </div>\n              {(selectedFromAmount && amountError) ?\n                <span className=\"c-danger\">{amountError}</span> : null\n              }\n            </label><br />\n            <label>\n              <span>Destination Address:</span>\n              <TextField\n                InputProps={{ disableUnderline: true, className: 'custom-input-bg' }}\n                value={toAddress}\n                onChange={(e) => { setToAddress(e.target.value) }}\n                className={styles.input}\n                id=\"destination-input\"\n                variant=\"filled\"\n                style={{ marginBottom: \"1rem\", borderRadius: \"8px\" }}\n              />\n              {toAddress && !isValidAddress &&\n                <span className=\"c-danger\">Invalid {selectedFrom?.value} address</span>\n              }\n            </label><br /><br />\n            <Button\n              primary\n              type=\"submit\"\n              className=\"btn-primary withdraw\"\n              onClick={(e) => onClickWithdraw(e)}\n              floated=\"left\"\n              disabled={canWithdraw ? '' : 'disabled'}\n            >\n              Withdraw\n            </Button>\n          </form>\n        }\n      </div>\n    </>\n  );\n}\n\nexport default WithdrawForm\n","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/account/types.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/meta1/types.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/lib/fetchHistory.js",["451","452"],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/Wallet/cryptoChooser.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/utils/commonFunction.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/lib/createAccountWithPassword.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/PaperWalletLogin/CreatePdfWallet.js",["453","454","455","456","457"],"import jsPDF from 'jspdf'\nimport QRCode from 'qrcode'\n\nimport image from './img.png'\n\nconst isLocked = () => true\n\nconst _createPaperWalletAsPDF = function (\n    ownerkeys,\n    activeKeys,\n    memoKey,\n    accountName\n) {\n    const width = 1050,\n        height = 1150, //mm\n        lineMargin = 5,\n        qrSize = 50,\n        textMarginLeft = qrSize + 7,\n        qrMargin = 5,\n        qrRightPos = width - qrSize - qrMargin,\n        textWidth = width - qrSize * 2 - qrMargin * 2 - 3,\n        textHeight = 8,\n        logoWidth = (width * 3) / 4,\n        logoHeight = logoWidth / 2.8, //  logo original width/height=2.8\n        logoPositionX = (width - logoWidth) / 2;\n    let rowHeight = 110;\n    const keys = [activeKeys, ownerkeys, memoKey]\n    const keysName = ['Active Key', 'Owner Key', 'Memo Key']\n\n    let locked = isLocked()\n\n    const pdf = new jsPDF({\n        orientation: 'portrait',\n        format: [width, height],\n        compressPdf: true\n    })\n\n    const checkPageH = (pdfInstance, currentPageH, maxPageH) => {\n        if (currentPageH >= maxPageH) {\n            pdfInstance.addPage()\n            rowHeight = 10\n        }\n        return pdf.internal.getNumberOfPages()\n    }\n\n    const keyRow = (privateKey) => {\n        let currentPage = checkPageH(pdf, rowHeight, 400)\n        gQrcode(privateKey.toPublicKey().toPublicKeyString(), qrMargin, rowHeight + 10, currentPage)\n        if (locked && !!privateKey) {\n            gQrcode(privateKey.toWif(), 315, rowHeight + 10, currentPage)\n        }\n        pdf.text('PublicKey', textMarginLeft, rowHeight + 20)\n        pdf.text(privateKey.toPublicKey().toPublicKeyString(), textMarginLeft, rowHeight + 30)\n        pdf.text('PrivateKey', textMarginLeft, rowHeight + 40)\n        pdf.rect(textMarginLeft - 1, rowHeight + 24, 258, textHeight)\n        if (locked) {\n            pdf.text('PrivateKey', textMarginLeft, rowHeight + 40)\n            if (!!privateKey) {\n                pdf.text(privateKey.toWif(), textMarginLeft, rowHeight + 50)\n            } else {\n                pdf.text('Not found.', textMarginLeft, rowHeight + 50)\n            }\n            pdf.rect(textMarginLeft - 1, rowHeight + 44, 258, textHeight)\n        }\n        rowHeight += 50\n    }\n\n    const gQrcode = (qrcode, rowWidth, rowHeight, currentPage) => {\n        QRCode.toDataURL(qrcode)\n            .then((url) => {\n                pdf.setPage(currentPage)\n                pdf.addImage(url, 'JPEG', rowWidth, rowHeight, qrSize, qrSize)\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n\n    let img = new Image()\n    img.src = image\n    pdf.addImage(img, 'PNG', 115, 30, 150, 50, '', 'MEDIUM')\n    pdf.text('Account:', 18, rowHeight - 10)\n    pdf.text(accountName, 42, rowHeight - 10)\n\n    let content = keys.map((privateKeys, index) => {\n        if (index >= 1) {\n            rowHeight += 25 // add margin-top for block\n        }\n        checkPageH(pdf, rowHeight, 400)\n        pdf.text('Public', 22, rowHeight + 7)\n        pdf.text(keysName[index], 170, rowHeight + 7)\n        if (locked) {\n            pdf.text('Private', 327, rowHeight + 7)\n        }\n        pdf.line(lineMargin, rowHeight + 1, 365, rowHeight + 1)\n        pdf.line(lineMargin, rowHeight + 9, 365, rowHeight + 9)\n        keyRow(privateKeys)\n    })\n\n    Promise.all(content).then(() => {\n        pdf.save(\n            'meta' +\n                '-paper-wallet-' +\n                (locked ? 'public-' : 'private-') +\n                accountName +\n                '.pdf'\n        )\n    })\n}\n\nconst createPaperWalletAsPDF = function (\n    account,\n    owner_private,\n    active_private,\n    memo_private,\n) {\n    _createPaperWalletAsPDF(owner_private, active_private, memo_private, account)\n}\n\nexport { createPaperWalletAsPDF }\n","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/lib/useDebounce.js",["458"],"import { useState, useEffect } from 'react'\n\nexport default function useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value)\n\n    useEffect(\n        () => {\n            const handler = setTimeout(() => {\n                setDebouncedValue(value)\n            }, delay)\n\n            return () => {\n                clearTimeout(handler)\n            }\n        },\n        [value]\n    )\n\n    return debouncedValue\n}\n","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/LoginScreen/index.jsx",["459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475"],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/Navbar/WidgetOnRamper.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/LeftPanelAdapt/LeftPanelAdapt.js",["476","477","478"],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/RightSideHelpMenuThirdType/RightSideHelpMenuThirdType.js",["479"],"import * as React from \"react\";\nimport styles from \"./RightSideHelpMenuThirdType.module.scss\";\n\nconst RightSideHelpMenuSecondType = (props) => {\n  const { onClickExchangeEOSHandler, onClickExchangeUSDTHandler, portfolio } =\n    props;\n\n  const DateOfStartEOS = 1645998629;\n  const DateOfStartUSDT = 1646085029;\n\n  const calculateDate = (date) => {\n    return Math.floor((new Date() / 1000 - date) / 86400);\n  };\n\n  return (\n    <>\n      <div className={styles.newCrypto}>\n        <h5 style={{ fontWeight: \"bold\", fontSize: \"1rem\" }}>\n          New Crypto on META1\n        </h5>\n        <hr />\n        <div className={styles.newCryptoBlock}>\n          <div className={styles.crypto} onClick={onClickExchangeUSDTHandler}>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <img\n                style={{ width: \"35px\", height: \"35px\", marginTop: \".3rem\" }}\n                src=\"https://icons.iconarchive.com/icons/cjdowner/cryptocurrency-flat/1024/Tether-USDT-icon.png\"\n                alt=\"usdt\"\n              />\n              <div\n                className={styles.blockCryptText}\n                style={{ marginLeft: \".5rem\" }}\n              >\n                <h6>USDT</h6>\n                <span>Added {calculateDate(DateOfStartUSDT)} days ago</span>\n              </div>\n            </div>\n            <div style={{ marginTop: \"1rem\", marginRight: \"1rem\" }}>\n              <i\n                style={{ color: \"#240000\" }}\n                className=\"fas fa-chevron-right event\"\n              />\n            </div>\n          </div>\n          <hr />\n          <div className={styles.crypto} onClick={onClickExchangeEOSHandler}>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              <img\n                style={{ width: \"35px\", height: \"35px\", marginTop: \".3rem\" }}\n                src=\"https://icons.iconarchive.com/icons/cjdowner/cryptocurrency-flat/1024/EOS-icon.png\"\n                alt=\"EOS\"\n              />\n              <div\n                className={styles.blockCryptText}\n                style={{ marginLeft: \".5rem\" }}\n              >\n                <h6>EOS</h6>\n                <span>Added {calculateDate(DateOfStartEOS)} days ago</span>\n              </div>\n            </div>\n            <div style={{ marginTop: \"1rem\", marginRight: \"1rem\" }}>\n              <i\n                style={{ color: \"#240000\" }}\n                className=\"fas fa-chevron-right event\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default RightSideHelpMenuSecondType;\n","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/ExchangeForm/ExchangeSelect.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/SignUpForm/SubmitForm.js",["480","481","482","483","484"],"import React, { useEffect, useState } from \"react\";\nimport MetaLoader from \"../../UI/loader/Loader\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport axios from \"axios\";\nimport { getUserKycProfile, getESigToken } from \"../../API/API\";\n\nimport {\n  Button,\n  Message,\n  Checkbox,\n  Form,\n  Popup,\n  Grid,\n} from \"semantic-ui-react\";\n\nexport default function SubmitForm(props) {\n  const { innerWidth: width } = window;\n  const isMobile = width <= 600;\n\n  const [access, setAccess] = useState(true);\n  const [recover, setRecover] = useState(true);\n  const [stored, setStored] = useState(true);\n  const [living, setLiving] = useState(true);\n  const [signed, setSigned] = useState(props.signatureResult === 'success' ? true : false);\n  const [paid, setPaid] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const isAllChecked = access && recover && stored && living && signed;\n\n  useEffect(async () => {\n    const response = await getUserKycProfile(props.email);\n    if (response && response.status.isPaid === 1 && response.status.isSign === 1) {\n      setSigned(true);\n      setPaid(true);\n    }\n  }, [])\n\n  const handleSign = async (e) => {\n    if (!signed) {\n      const { email, phone, firstName, lastName, accountName, password } = props;\n\n      try {\n        const response = await getUserKycProfile(email);\n        if (response && response.status.isPaid === 1 && response.status.isSign === 1) {\n          alert('You already signed E-Signature');\n          setSigned(true);\n          return;\n        }\n      } catch (err) {\n        console.log('Error in getting user esignautre profile');\n        return;\n      }\n\n      try {\n        const token = await getESigToken(email);\n        if (token) {\n          localStorage.setItem('login', accountName);\n          localStorage.setItem('password', password);\n          localStorage.setItem('firstname', firstName);\n          localStorage.setItem('lastname', lastName);\n          localStorage.setItem('phone', phone);\n          localStorage.setItem('email', email);\n\n          window.location.href = `${process.env.REACT_APP_ESIGNATURE_URL\n            }/e-sign?email=${encodeURIComponent(\n              email\n            )}&firstName=${firstName}&lastName=${lastName}&phoneNumber=${phone}&token=${token}&redirectUrl=${window.location.origin\n            }`;\n        } else {\n          return;\n        }\n      } catch (err) {\n        console.log('Error in e-sign token generation');\n        return;\n      }\n    }\n  }\n\n  return (\n    <>\n      {signed && <div className=\"membership_head\">\n        <p style={{ fontSize: '30px', fontWeight: 600 }}>\n          Pay $1 Lifetime Membership Fee\n        </p>\n        <p style={{ fontSize: '16px', color: '#607383', paddingLeft: '30px', paddingRight: '30px' }}>\n          META Association Lifetime membership is required to be a META 1 Member, this fee is paid once and provides lifetime membership\n        </p>\n        <div className=\"divider\" />\n        <p style={{ fontSize: '20px', color: '#00AD6A' }}>\n          Successfully paid $1 by Credit Card\n        </p>\n      </div>\n      }\n      <Grid>\n        <Grid.Column style={{ marginTop: \"1rem\" }} width={16}>\n          <Form>\n            <Form.Field>\n              <label>Passkey</label>\n              <div className=\"ui action input\">\n                <input value={props.password} type=\"text\" disabled className=\"dark-wallet-key\" />\n                <Popup\n                  content=\"Copy to Clipboard.\"\n                  trigger={\n                    <div>\n                      <CopyToClipboard text={props.password} onCopy={() => { }}>\n                        <button\n                          name=\"copyToken\"\n                          style={{ color: \"#240000\" }}\n                          class=\"ui yellow right icon button\"\n                        >\n                          <i class=\"copy icon\" />\n                        </button>\n                      </CopyToClipboard>\n                      <span className=\"copy_text copy_text_passkey\">Copy</span>\n                    </div>\n                  }\n                />\n              </div>\n            </Form.Field>\n\n            <Message\n              className={\"messageRed\"}\n              icon=\"attention\"\n              header=\"Important information\"\n              content=\"If you forget your passkey phrase you will be unable to access your account and your funds. We cannot reset or restore your passkey! Memorize or write down your username and passkey!\"\n            />\n\n            <Form.Field>\n              <Checkbox\n                onChange={(e) => setAccess(!access)}\n                checked={access}\n                label=\"I understand that I will lose access to my funds if I lose my passkey\"\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <Checkbox\n                onChange={(e) => setRecover(!recover)}\n                checked={recover}\n                label=\"I understand that no one can recover my passkey if I lose or forget it\"\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <Checkbox\n                onChange={(e) => setStored(!stored)}\n                checked={stored}\n                label=\"I have written down or otherwise stored my passkey\"\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <Checkbox\n                onChange={(e) => setLiving(!living)}\n                checked={living}\n                label=\" I am a living man or woman hence a living being\"\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <Checkbox\n                onChange={(e) => handleSign(e)}\n                checked={signed}\n                label=\" Sign META Association Membership Agreement\"\n              />\n            </Form.Field>\n\n            {isSubmitted && <MetaLoader size={\"small\"} />}\n            {!isSubmitted && (\n              <Button\n                className=\"sbBtn\"\n                onClick={() => {\n                  setIsSubmitted(true);\n                  props.onSubmit();\n                }}\n                disabled={!isAllChecked}\n                type=\"submit\"\n              >\n                Submit\n              </Button>\n            )}\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/SignUpForm/UserInformationForm.js",["485","486","487","488"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport { key, ChainValidation } from \"meta1-vision-js\";\nimport AccountApi from \"../../lib/AccountApi\";\nimport \"./SignUpForm.css\";\nimport { Button, Form, Grid, Input, Popup } from \"semantic-ui-react\";\nimport countryCodes from '../../utils/countryCode.json'\nimport { MenuItem, Select } from \"@mui/material\";\n\nconst useDebounce = (value, timeout) => {\n  const [state, setState] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => setState(value), timeout);\n\n    return () => clearTimeout(handler);\n  }, [value, timeout]);\n\n  return state;\n};\n\nconst UserInformationForm = (props) => {\n  const [isSelectorOpen, setIsSelectorOpen] = useState(false);\n  const [isTouchedCountry, setIsTouchedCountry] = useState(false)\n  const [generatedPassword, setGeneratedPassword] = useState(\"\");\n  const phoneRef = useRef();\n  useEffect(() => {\n    if (generatedPassword === \"\") {\n      setGeneratedPassword(`P${key.get_random_key().toWif().toString()}`);\n    }\n  }, [generatedPassword]);\n\n  const [accountName, setAccountName] = useState(props.accountName || \"\");\n  const debouncedAccountName = useDebounce(accountName, 100);\n  const [accountNameErrors, setAccountNameErrors] = useState(null);\n  const [firstName, setFirstName] = useState(props.firstName || \"\");\n  const [lastName, setLastName] = useState(props.lastName || \"\");\n  const [phone, setPhone] = useState(props.phone || \"\");\n  const [phoneFormat, setPhoneFormat] = useState('');\n  const [searchAccount, setSearchAccount] = useState([[\"PM\", \"\"]]);\n  const [touchedAccountName, setTouchedAccountName] = useState(false);\n  const [phoneError, setPhoneError] = useState(null);\n  const [firstNameError, setFirstNameError] = useState(null);\n  const [lastNameError, setLastNameError] = useState(null);\n  const [country, setCountry] = useState(\"227\");\n  const [selectedCountryObj, setSelectedCountryObj] = useState({\n      \"id\": 227,\n      \"iso2\": \"US\",\n      \"defaultName\": \"USA\",\n      \"countryCode\": \"1\",\n      \"patterns\": [\n          \"XXX XXX XXXX\"\n      ]\n  });\n  \n  useEffect(() => {\n    setPhone(`+${selectedCountryObj.countryCode}${phoneFormat.replaceAll(' ','')}`)\n  }, [selectedCountryObj, phoneFormat]);\n\n  const phoneNumberSpacingHandler = () => {\n    let pattern = '';\n    if (Array.isArray(selectedCountryObj.patterns)) {\n      pattern = selectedCountryObj.patterns[0]\n    }\n    let spaceArr = [];\n    let count = 0;\n    for(let data of pattern) {\n        if (data === \" \") {\n            spaceArr.push(count);\n        }\n        count++;\n    }\n    return spaceArr;\n  }\n\n  useEffect(() => {\n    if (accountName) {\n      AccountApi.lookupAccounts(accountName, 1)\n        .then((res) => setSearchAccount(res))\n        .catch((err) => console.log(err));\n    }\n  }, [accountName]);\n  const hasNumber = (myString) => {\n    return /\\d/.test(myString);\n  }\n  const isVowelsNotExistAndHasNumber = (str) => {\n    if (hasNumber(str)) {\n      if (str.includes(\"-\")) {\n        return true;\n      }\n      return false;\n    } else {\n      return false;\n    }\n  }\n\n  const phoneNumberChangeHandler = (event) => {\n    if (!isNaN(event.target.value.replaceAll(' ',''))) {\n      if (event.target.value === \"0\") {\n        setPhoneError(`Phone number can't start with 0`);\n      } else if (event.target.value !== \"0\" && !event.target.value.includes('.')) {\n        setPhoneError('');\n        if (event.target.value === \"\") {\n          setPhoneError(`Phone number can't be empty`);\n        }\n        if (!selectedCountryObj?.patterns)  {\n          setPhoneFormat(event.target.value);\n        } else {\n          const spacingArr = phoneNumberSpacingHandler();\n          if (event.nativeEvent.inputType !== \"deleteContentBackward\" && spacingArr.includes(event.target.value.length)) {\n            setPhoneFormat(event.target.value + \" \");\n          } else {\n            setPhoneFormat(event.target.value);\n          }\n          if (event.target.value.length !== selectedCountryObj?.patterns[0].length) {\n            setPhoneError(`Phone number should be ${selectedCountryObj.patterns[0].replaceAll(' ','').length} digits long`);\n          }\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    const error = ChainValidation.is_account_name_error(debouncedAccountName);\n    const error1 = isVowelsNotExistAndHasNumber(debouncedAccountName);\n    if (error) {\n      if (!error1) {\n        setAccountNameErrors({\n          content:\n            \"Please enter a wallet nickname (not your personal name) containing at least one dash, a number\",\n          pointing: \"below\",\n        });\n      } else {\n        setAccountNameErrors({\n          content: error,\n          pointing: \"below\",\n        });\n      }\n    } else if (!error1) {\n      setAccountNameErrors({\n        content:\n          \"Please enter a wallet nickname (not your personal name) containing at least one dash, a number\",\n        pointing: \"below\",\n      });\n    } else {\n      setAccountNameErrors(null);\n    }\n  }, [debouncedAccountName]);\n\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  useEffect(() => {\n    if (isSubmitted) {\n      props.onSubmit(\n        accountName,\n        generatedPassword,\n        phone,\n        lastName,\n        firstName\n      );\n    }\n    return () => setIsSubmitted(false);\n  }, [\n    firstName,\n    isSubmitted,\n    accountName,\n    generatedPassword,\n    props,\n    lastName,\n    phone,\n  ]);\n\n  const { innerWidth: width } = window;\n  const isMobile = width <= 600;\n\n  const MobileNumberError = phoneFormat.replaceAll(' ','');\n  \n  useEffect(()=>{\n    if (!isSelectorOpen && isTouchedCountry) {\n      if (phoneRef && phoneRef.current) {\n        phoneRef.current.focus();\n      }\n    }\n  },[isSelectorOpen]);\n\n  return (\n    <>\n      <h2 className=\"head-title\">Create META Wallet</h2>\n      <Grid>\n        <Grid.Column width={16} className=\"singup-grid\">\n          <Form autoComplete=\"off\" onSubmit={setIsSubmitted}>\n            <div className=\"field\">\n              <Grid stackable>\n                <Grid.Column width={isMobile ? 16 : 8}>\n                  <Form.Field>\n                    <label>First Name</label>\n                    <input\n                      value={firstName}\n                      onChange={(event) => {\n                        setFirstName(event.target.value);\n                        if (!/^[A-Za-z]{0,63}$/.test(event.target.value)) {\n                          setFirstNameError(\n                            \"Your First Name must not contain special characters\"\n                          );\n                        } else {\n                          setFirstNameError(null);\n                        }\n                      }}\n                      placeholder=\"First Name\"\n                      required\n                    />\n                    {firstNameError && (\n                      <p style={{ color: \"red\" }}> {firstNameError}</p>\n                    )}\n                  </Form.Field>                \n                  <Form.Field>\n                    <label >Phone Number</label>\n                    <div className=\"phone-number-div\">\n                      <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        open={isSelectorOpen}\n                        onOpen={()=> setIsSelectorOpen(true)}\n                        onClose={ ()=> {\n                          setIsSelectorOpen(false);\n                          setIsTouchedCountry(true);\n                        }}\n                        value={country}\n                        className=\"country-code\"\n                        MenuProps={{ classes: { paper: 'options-height' }}}\n                        label=\"Select\"\n                        onChange={(e)=>{\n                          const obj = countryCodes.find(data => data.id === Number(e.target.value));\n                          setCountry(e.target.value);\n                          setSelectedCountryObj(obj);\n                          setPhoneFormat('');\n                          setPhoneError('');\n                        }}\n                        style={{maxHeight:'37px'}}\n                      >\n                        {countryCodes?.map((data, index) => {\n                          return <MenuItem key={index} value={data?.id}>\n                            <div className=\"country-select-data\">\n                              <div>\n                                <img className=\"countryFlag-img\" src={`https://flagcdn.com/24x18/${data?.iso2.toLowerCase()}.png`} alt='flag' /> \n                                <span className={`countryName-span ${!isSelectorOpen ? 'hide-element' : ''}`} >{data.defaultName}</span>\n                              </div>\n                              <div className=\"countryCode-span\">+{data?.countryCode}</div>\n                            </div>\n                          </MenuItem>\n                        })}\n                      </Select>\n                      <input\n                          ref={phoneRef}\n                          value={phoneFormat}\n                          type='tel'\n                          className=\"phone-number-input\"\n                          onChange={(e) => phoneNumberChangeHandler(e)}\n                          onKeyDown={(event)=> {\n                            if ( event.key !==\"Backspace\" && !selectedCountryObj.patterns && phoneFormat.length === 15 ) {\n                              event.preventDefault();\n                            } else if ( event.key !==\"Backspace\" && selectedCountryObj?.patterns && phoneFormat.length === selectedCountryObj.patterns[0].length ) {\n                              event.preventDefault();\n                            } else if (event.key === \" \") {\n                              event.preventDefault();\n                            }\n                          }}\n                          placeholder={Array.isArray(selectedCountryObj?.patterns) && selectedCountryObj?.patterns.length > 0 &&  selectedCountryObj?.patterns[0] ? selectedCountryObj?.patterns[0] : ''}\n                          required\n                        />\n                    </div>\n                    {phoneError && (\n                          <p style={{ color: \"red\" }}>{phoneError}</p>\n                        )}\n                  </Form.Field>\n                </Grid.Column>\n                <Grid.Column width={isMobile ? 16 : 8}>\n                    <Form.Field>  \n                      <label>Last Name</label>\n                      <input\n                        value={lastName}\n                        onChange={(event) => {\n                          setLastName(event.target.value);\n                          if (!/^[A-Za-z]{0,63}$/.test(event.target.value)) {\n                            setLastNameError(\n                              \"Your Last Name must not contain special characters\"\n                            );\n                          } else {\n                            setLastNameError(null);\n                          }\n                        }}\n                        placeholder=\"Last Name\"\n                        required\n                      />\n                      {lastNameError && (\n                        <p style={{ color: \"red\" }}> {lastNameError}</p>\n                      )}\n                    </Form.Field>         \n                </Grid.Column>\n              </Grid>\n            </div>\n\n            <Form.Field>\n              <label>Wallet Name</label>\n              <input\n                control={Input}\n                value={accountName}\n                type=\"text\"\n                error={accountNameErrors}\n                placeholder=\"Wallet Name\"\n                onChange={({ target }) => {\n                  setAccountName(target.value.toLocaleLowerCase());\n                  setTouchedAccountName(true);\n                }}\n              />\n              {accountName && accountNameErrors?.content && touchedAccountName ? (\n                <p style={{ color: \"red\" }}> {accountNameErrors?.content}</p>\n              ) : null}\n            </Form.Field>\n            <Form.Field>\n              <Button\n                className=\"yellow\"\n                style={{ color: \"#240000\", marginTop:'1em' }}\n                type=\"submit\"\n                disabled={\n                  firstName === \"\" ||\n                  lastName === \"\" ||\n                  phone === \"\" ||\n                  phone === undefined ||\n                  MobileNumberError === \"\" ||\n                  accountNameErrors ||\n                  (searchAccount.length > 0 ? searchAccount[0][0] === accountName : false) ||\n                  phoneError ||\n                  firstNameError ||\n                  lastNameError\n                }\n              >\n                Submit\n              </Button>\n            </Form.Field>\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n};\n\nexport { UserInformationForm };","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/account/saga.js",["489"],"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { checkOldUser, deleteAvatar, getUserData, loginRequest, sendEmail, uploadAvatar, validateSignature } from '../../API/API';\nimport { setAccessToken, setLoginDetail } from '../../utils/localstorage';\nimport { checkTokenRequest, checkAccountSignatureError, checkAccountSignatureSuccess, checkTransferableError, checkTransferableSuccess, deleteAvatarSuccess, getUserError, getUserSuccess, loginError, loginSuccess, sendMailError, sendMailSuccess, uploadAvatarSuccess, passKeyErrorService, passKeySuccessService } from './actions';\nimport * as types from './types';\nimport Meta1 from \"meta1-vision-dex\";\nimport { signUpHandler } from '../../utils/common';\nfunction* loginHandler(data) {\n    try {\n        if (data?.payload?.fromSignUpFlag) {\n            const result = yield signUpHandler(data.payload.login, data.payload.password);\n            if (result && !result.status) {\n                yield put(loginError({accountName: null, token: '', msg: 'Account Creation is under process. Please try after sometime' }));\n                return;\n            }\n        }\n        const response = yield call(loginRequest,data.payload.login, data.payload.password);\n        if(!response.error){\n            setAccessToken(response.token);\n            setLoginDetail(response.accountName)\n            yield put(loginSuccess({accountName: response.accountName, token: response.token}));\n        } else {\n            yield put(loginError({accountName: null, token: '', msg: 'Wallet name or Passkey is wrong' }));\n        }\n    } catch(e){\n        data.payload.setLoginDataError(true);\n        yield put(loginError({accountName: null, token: '', msg: 'Wallet name or Passkey is wrong' }));\n    }\n}\nfunction* getUserHandler(data) {\n    const response = yield call(getUserData,data.payload);\n    if (response['tokenExpired']) {\n        yield put(getUserError({msg: response.responseMsg}));\n    } else {\n        if (response?.message?.userAvatar != null) {\n            let avatarImage = `${process.env.REACT_APP_BACK_URL}/public/${response.message.userAvatar}`;\n            yield put(getUserSuccess({user: response,avatarImage }));\n        } else {\n            yield put(getUserSuccess({user: response,avatarImage: null }));\n        }\n    }\n}\nfunction* uploadAvatarHandler(data) {\n    const response = yield call(uploadAvatar, data.payload);\n    if (response['tokenExpired']) {\n        yield put(getUserError({msg: response.responseMsg}));\n    } else {\n        let avatarImage = `${process.env.REACT_APP_BACK_URL}/public/${response.message}`;\n        yield put(uploadAvatarSuccess({avatarImage }));\n    }\n}\nfunction* deleteAvatarHandler(data) {\n    const response = yield call(deleteAvatar, data.payload);\n    if (response['tokenExpired']) {\n        yield put(getUserError({msg: response.responseMsg}));\n    } else {\n        yield put(deleteAvatarSuccess());\n    }\n}\nfunction* sendMailHandler(data) {\n    const response = yield call(sendEmail, data.payload.emailType, data.payload.emailData);\n    if (response.success === 'success') {\n        yield put(sendMailSuccess());\n    } else {\n        if (response['tokenExpired']) {\n            yield put(getUserError({msg: response.responseMsg}));\n        } else {\n            alert(\"Oops, something went wrong. Try again\");\n            yield put(sendMailError());\n        }\n    }\n}\n\nfunction* checkTransferableHandler(data) {\n    const response = yield call(checkOldUser, data.payload.login);\n    if (!response.error) {\n        if (response.found) {\n            yield put(checkTransferableSuccess({ oldUser: response.found }));\n        } else {\n            yield put(checkTransferableError());\n        }\n    } else {\n        yield put(checkTransferableError());\n    }\n}\n\nfunction* CheckAccountSignatureHandler(data) {\n    const response = yield call(validateSignature, data.payload.login, data.payload.password);\n    if (!response.error) {\n        yield put(checkAccountSignatureSuccess());\n    } else {\n        yield put(checkAccountSignatureError());\n    }\n}\n\n\nfunction* checkTokenHandler(data) {\n    const response = yield call(getUserData,data.payload);\n    if (response['tokenExpired']) {\n        yield put(getUserError({msg: response.responseMsg}));\n    }\n}\n\nfunction* passKeyHandler(data) {\n    try {\n        yield Meta1.connect(process.env.REACT_APP_MAIA);\n        const loginResult = yield Meta1.login(data.payload.login, data.payload.password);\n        if (loginResult) {\n            yield put(passKeySuccessService());\n        } else {\n            yield put(passKeyErrorService());\n        }\n    } catch (err) {\n        yield put(passKeyErrorService());\n    }\n}\n\nexport function* waitForAccount() {\n    yield takeEvery(types.LOGIN_REQUEST, loginHandler);\n    yield takeEvery(types.GET_USER_REQUEST, getUserHandler);\n    yield takeEvery(types.UPLOAD_AVATAR_REQUEST, uploadAvatarHandler);\n    yield takeEvery(types.DELETE_AVATAR_REQUEST, deleteAvatarHandler);\n    yield takeEvery(types.SEND_MAIL_REQUEST, sendMailHandler);\n    yield takeEvery(types.CHECK_TRANSFERABLE_REQUEST, checkTransferableHandler);\n    yield takeEvery(types.CHECK_ACCOUNT_SIGNATURE_REQUEST, CheckAccountSignatureHandler );\n    yield takeEvery(types.CHECK_TOKEN_REQUEST, checkTokenHandler);\n    yield takeEvery(types.PASS_KEY_REQUEST, passKeyHandler);\n}\n","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/account/reducer.js",["490"],"import { getAccessToken, getLoginDetail } from '../../utils/localstorage';\nimport * as types from './types';\nimport logoNavbar from \"../../images/default-pic2.png\";\nimport logoDefault from \"../../images/default-pic1.png\";\nimport { Avatar } from '@mui/material';\nconst initialState = {\n    isLogin: false,\n    loading: false,\n    account: null,\n    token: '',\n    loginError: false,\n    msg: null,\n    user: null,\n    isTokenValid: true,\n    profileImage: logoDefault,\n    navbarProfileImage: logoNavbar,\n    sentMailSuccess: null,\n    oldUser: false,\n    checkTransferableModel: false,\n    signatureError: false,\n    isSignatureValid: false,\n    isValidPasswordKey: false,\n    passwordKeyError: false,\n    loginErrorMsg: '',\n    openOrderCustomColumns: {\n        \"Buy/sell\": true,\n        \"From / To\": true,\n        \"Price\": true, \n        \"Market Price\": true,\n        \"Orders Date\": true,\n        \"Expiry Date\": true,\n    }\n};\nconst loginDetail = getLoginDetail();\nif(loginDetail){\n    initialState.isLogin = true;\n    initialState.account = loginDetail;\n    initialState.token = getAccessToken();\n}\n\nconst accountsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.LOGIN_REQUEST:\n            return {...state, loading: true, loginError: false, loginErrorMsg: '' };\n        case types.LOGIN_SUCCESS:\n            return {...initialState, loading: false, account: action.payload.accountName, token: action.payload.token, isLogin:true,loginError: false, msg: null };\n        case types.LOGIN_ERROR:\n            return {...state, loading: false, account: null, token: '', isLogin:false, loginError:true, loginErrorMsg: action.payload.msg  };\n        case types.LOGOUT_REQUEST:\n            return {...initialState, isLogin: false, account: null, token:'', loginErrorMsg: '' };\n        case types.GET_USER_REQUEST:\n            return {...state, loading: true, user: null, isTokenValid: true, msg: null };\n        case types.GET_USER_SUCCESS:\n            const avatarImage = action.payload.avatarImage\n            return {...state, loading: false, user: action.payload.user, profileImage:avatarImage ? avatarImage : logoDefault, navbarProfileImage: avatarImage ? avatarImage : logoNavbar };\n        case types.GET_USER_ERROR:\n            return {...state, loading: false, user: null, isTokenValid: false, msg: action.payload.msg, profileImage: logoDefault, navbarProfileImage: logoNavbar };\n        case types.UPLOAD_AVATAR_REQUEST:\n            return {...state, loading: true };\n        case types.UPLOAD_AVATAR_SUCCESS:\n            return {...state, loading: false, profileImage: action.payload.avatarImage, navbarProfileImage: action.payload.avatarImage };\n        case types.DELETE_AVATAR_REQUEST:\n            return {...state, loading: true };\n        case types.DELETE_AVATAR_SUCCESS:\n            return {...state, loading: false, profileImage: logoDefault, navbarProfileImage: logoNavbar };\n        case types.SEND_MAIL_REQUEST:\n            return {...state, loading: true, sentMailSuccess: null };\n        case types.SEND_MAIL_SUCCESS:\n                return {...state, loading: false, sentMailSuccess: true };\n        case types.SEND_MAIL_ERROR:\n            return {...state, loading: false, sentMailSuccess: false };\n        case types.SEND_MAIL_RESET:\n            return {...state, loading: false, sentMailSuccess: null };\n        case types.CHECK_TRANSFERABLE_WALLET_MODAL:\n            return { ...state, loading: false, checkTransferableModel: action.payload };\n        case types.CHECK_TRANSFERABLE_REQUEST:\n            return {...state, loading: true };\n        case types.CHECK_TRANSFERABLE_SUCCESS:\n            return {...state, loading: false, oldUser: action.payload.oldUser };\n        case types.CHECK_TRANSFERABLE_ERROR:\n            return {...state, loading: false, oldUser: false };\n        case types.CHECK_ACCOUNT_SIGNATURE_REQUEST:\n            return {...state, loading: false, signatureError: false };\n        case types.CHECK_ACCOUNT_SIGNATURE_SUCCESS:\n            return {...state, loading: false, signatureError: false, isSignatureValid: true };\n        case types.CHECK_ACCOUNT_SIGNATURE_ERROR:\n            return {...state, loading: false, signatureError: true, isSignatureValid: false };\n        case types.CHECK_ACCOUNT_SIGNATURE_RESET:\n            return {...state, loading: false, signatureError: false, isSignatureValid: false };\n        case types.CHECK_TOKEN_REQUEST:\n            return state;\n        case types.PASS_KEY_REQUEST:\n            return {...state, isValidPasswordKey: false, passwordKeyError: false };\n        case types.PASS_KEY_SUCCESS:\n            return {...state, isValidPasswordKey: true, passwordKeyError: false };\n        case types.PASS_KEY_ERROR:\n            return {...state, isValidPasswordKey: false , passwordKeyError: true};\n        case types.PASS_KEY_RESET:\n            return {...state, isValidPasswordKey: false, passwordKeyError: false };\n        case types.CUSTOMIZED_COLUMNS_OPEN_ORDER:\n            return {...state, openOrderCustomColumns: {...state.openOrderCustomColumns, [action.payload.key]: action.payload.value}};\n        default:\n            return state;\n    }\n}\nexport default accountsReducer;\n","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/meta1/saga.js",["491","492"],"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { getCryptosChange, saveBalance, saveUserCurrency } from '../../API/API';\nimport { getUserError } from '../account/actions';\nimport { getCryptosChangeError, getCryptosChangeSuccess, meta1ConnectError, meta1ConnectSuccess, saveBalanceError, saveBalanceSuccess, saveUserCurrencyError, saveUserCurrencySuccess } from './actions';\nimport * as types from './types';\n\n\nfunction* getCryptosChangeHandler() {\n    const response = yield call(getCryptosChange);\n    if (response) {\n        yield put(getCryptosChangeSuccess({cryptoData: response}));\n    } else {\n        yield put(getCryptosChangeError())\n    }\n}\n\nfunction* saveBalanceHandler(data) {\n    const response = yield call(saveBalance, data.payload);\n    if (response.message === 'success') {\n        yield put(saveBalanceSuccess());\n    } else {\n        yield put(saveBalanceError());\n    }\n}\n\nfunction* saveUserCurrencyHandler(data) {\n    const response = yield call(saveUserCurrency, data.payload.login, data.payload.currency.split(\" \")[1]);\n     if (response.tokenExpired) {\n        yield put(getUserError(response.responseMsg));\n    } else {\n        if(response.error){\n            yield put(saveUserCurrencyError(response.responseMsg));\n        }\n        yield put(saveUserCurrencySuccess(data.payload.currency));\n    }\n}\n\nexport function* waitForMeta1() {\n    yield takeEvery(types.GET_CRYPTOS_CHANGE_REQUEST, getCryptosChangeHandler);\n    yield takeEvery(types.SAVE_USER_CURRENCY_REQUEST, saveUserCurrencyHandler);\n    yield takeEvery(types.SAVE_BALANCE_REQUEST, saveBalanceHandler);\n}\n","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/store/meta1/reducer.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/Wallet/PortfolioTable.js",["493","494"],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/requests/compareCrypto.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/config/help.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/RightSideHelpMenuFirstType/RightSideHelpMenuFirstType.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/helpers/string.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/lib/AccountApi.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/utils/signature.js",["495"],"import Meta1 from \"meta1-vision-dex\";\nimport { generateKeyFromPassword } from \"../lib/createAccountWithPassword\";\nconst { Login, PrivateKey, Signature } = require(\"meta1-vision-js\");\n\nexport async function buildSignature(accountName, password, is4Migration=false) {\n    let publicKey, signature;\n\n    // Migration\n    if (is4Migration) {\n        const signerPkey = PrivateKey.fromWif(password);\n        publicKey = signerPkey.toPublicKey().toString();\n        signature = Signature.sign(accountName, signerPkey).toHex();\n        return { accountName, publicKey, signature };\n    }\n\n    // Connect & Login\n    await Meta1.connect(process.env.REACT_APP_MAIA);\n    const loginResult = await Meta1.login(accountName, password);\n\n    if (loginResult) {\n        try {\n            const signerPkey = PrivateKey.fromWif(password);\n            publicKey = signerPkey.toPublicKey().toString();\n            signature = Signature.sign(accountName, signerPkey).toHex();\n        } catch (err) {\n            const account = await Login.generateKeys(accountName, password, ['owner'], 'DEV11');\n            const ownerPrivateKey = account.privKeys.owner.toWif();\n            publicKey = account.pubKeys.owner;\n            const signerPkey = PrivateKey.fromWif(ownerPrivateKey);\n            signature = Signature.sign(accountName, signerPkey).toHex();\n        }\n    }\n\n    return { accountName, publicKey, signature };\n}\n","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/helpers/utility.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/Wallet/TransactionHash.jsx",["496"],"import React, { useEffect, useState } from 'react';\nimport {Apis} from 'meta1-vision-ws';\n\nconst TrxHash = ({trx}) => {\n    const [data, setData] = useState('');\n    const getBlock = async (height) => {\n        Apis.instance()\n            .db_api()\n            .exec('get_block', [height])\n            .then((result) => {\n                if (!result) {\n                    return false;\n                }\n                result.id = height; // The returned object for some reason does not include the block height..\n                setData(result.transaction_merkle_root);\n            })\n            .catch((error) => {\n                console.log('Error in BlockchainActions.getBlock: ', error);\n            });\n    }\n\n    useEffect(()=>{\n        getBlock(trx);\n    },[]);\n\treturn <div>{data}</div>;\n};\n\nexport default TrxHash;","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/helpers/useAssets.js",["497"],"import React from 'react';\nimport axios from 'axios';\nimport store from '../store';\n\nconst UseAsset = async (assetId) => {\n  const EXPLORER_URL = `${process.env.REACT_APP_EXPLORER_META1_URL}/api/v1/explorer`;\n  const state = store.getState();\n  const activeAssets = state.explorer?.assets?.active_assets;\n  if (activeAssets) {\n    const assets = activeAssets.map((item) => {\n      const { asset } = item;\n      return {\n        data: asset,\n      };\n    });\n    const filteredAssets = assets.filter(\n      (asset) => asset.data.id === assetId || asset.data.symbol === assetId,\n    );\n    if (filteredAssets.length) {\n      return Promise.resolve(filteredAssets[0]);\n    } else {\n      return await axios.get(EXPLORER_URL + '/asset?asset_id=' + assetId);\n    }\n  } else {\n    return await axios.get(EXPLORER_URL + '/asset?asset_id=' + assetId);\n  }\n};\n\nexport default UseAsset;\n","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/helpers/UseAccount.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/helpers/Cache.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/utils/common.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/SignUpForm/FaceKiForm.js",["498","499","500","501","502","503","504"],"import React, { useState, useRef } from \"react\";\nimport MetaLoader from \"../../UI/loader/Loader\";\nimport Webcam from 'react-webcam';\nimport { liveLinessCheck, verify, enroll, getUserKycProfile, postUserKycProfile } from \"../../API/API\";\nimport { Button, Form, Grid, Input, Popup } from \"semantic-ui-react\";\n\nimport \"./SignUpForm.css\";\n\nexport default function FaceKiForm(props) {\n  const webcamRef = useRef(null);\n  const [faceKISuccess, setFaceKISuccess] = useState(false);\n\n  const dataURLtoFile = (dataurl, filename) => {\n    var arr = dataurl.split(','),\n      mime = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]),\n      n = bstr.length,\n      u8arr = new Uint8Array(n);\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([u8arr], filename, { type: mime });\n  }\n\n  const videoEnroll = async () => {\n    const { privKey, email } = props;\n    const imageSrc = webcamRef.current.getScreenshot();\n\n    if (!imageSrc) {\n      alert('Check your camera');\n      return; \n    };\n\n    var file = dataURLtoFile(imageSrc, 'a.jpg');\n\n    const response = await liveLinessCheck(file);\n\n    if (response.data.liveness === 'Spoof') alert('try again!');\n    else {\n      const response_verify = await verify(file);\n      if (\n        response_verify.status === 'Verify OK' &&\n        response_verify.name === `${email}${privKey}`\n      ) {\n        alert('You already enrolled');\n        setFaceKISuccess(true);\n      } else {\n        const response_enroll = await enroll(\n          file,\n          `${email}${privKey}`\n        );\n        if (response_enroll.status === 'Enroll OK') {\n          alert('Successfully enrolled');\n          const add_response = await postUserKycProfile(email, `usr_${privKey}`);\n          setFaceKISuccess(true);\n        }\n      }\n    }\n  }\n\n  return (\n    <div style={{ marginLeft: \"3rem\" }} className={\"totalSumBlock\"}>\n      <div className='under-div'>\n        <div className='header_tag'>\n          <div style={{\n            height: \"550px\",\n            width: \"550px\",\n            background: \"#fff\"\n          }}>\n            <div className='header_p'>\n              <h6 style={{ fontSize: '24px' }}>Bio-Metric 2 Factor Authentication</h6>\n              <p className='header_ptag'>Next, we will setup your Biometric two factor authentication, to ensure the security of your wallet</p>\n            </div>\n            <div className='child-div'>\n              <div style={{ width: '100%', display: 'flex', height: '30px' }}>\n                <div className=\"position-head\">Position your face in the oval</div>\n                <button className='btn_x'>X</button>\n              </div>\n              <Webcam\n                audio={false}\n                ref={webcamRef}\n                screenshotFormat=\"image/jpeg\"\n                videoConstraints={{\n                  facingMode: 'user',\n                  width: 500,\n                  height: 400,\n                }}\n                width={500}\n                height={400}\n                mirrored\n              />\n              <div className='btn-div'>\n                <p className='span-class'>Press record and follow the instructions</p>\n                <div className=\"btn-grp\">\n                  <button className='btn-1' onClick={videoEnroll}>Verify</button>\n                  <Button\n                    onClick={()=>props.onClick()}\n                    className=\"btn-2\"\n                    disabled={faceKISuccess === false}\n                  >\n                    Next\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/OpenOrder/index.jsx",["505","506","507","508","509","510","511","512"],"import { useQuery } from \"react-query\";\nimport { styled } from \"@mui/material/styles\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport MetaLoader from \"../../UI/loader/Loader\";\nimport Paper from \"@mui/material/Paper\";\nimport { useEffect, useState } from \"react\";\nimport './OpenOrder.css';\nimport { Button, FormControl, Grid, MenuItem, Pagination, Popover, Select, Stack, Typography } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { accountsSelector, openOrderCustomColumnsSelector } from \"../../store/account/selector\";\nimport getOpenOrder from \"../../lib/fetchOpenOrder\";\nimport { ChainStore } from \"meta1-vision-js\";\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state';\nimport moment from \"moment\";\nimport { checkTokenRequest } from \"../../store/account/actions\";\n\nconst OpenOrder = (props) => {\n\tconst accountNameState = useSelector(accountsSelector);\n\tconst CustomColumnsState = useSelector(openOrderCustomColumnsSelector);\n\tconst { column, direction } = props;\n\tconst [filterCollection, setFilterCollection] = useState([]);\n\tconst [rowCollection, setRowCollection] = useState([]);\n\tconst [isInvent, setIsInvent] = useState({\n\t\tcurrent: false,\n\t\tsymbol: []\n\t});\n\tconst [pageNum, setPageNum] = useState(1);\n\tconst [perPage,setPerPage]= useState(10);\n\tconst { data, isLoading, error } = useQuery([\"openOrder\", accountNameState, isInvent, pageNum], getOpenOrder, {\n\t\trefetchInterval: 10000\n\t});\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tif (Array.isArray(data)) {\n\t\t\tdata.sort((a, b) => {\n\t\t\t\treturn a.order.getPrice() - b.order.getPrice();\n\t\t\t});\n\n\t\t\tdata.sort((a, b) => {\n\t\t\t\tif (a.marketName > b.marketName) {\n\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (a.marketName < b.marketName) {\n\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t});\n\t\t\tdata.sort((a, b) => {\n\t\t\t\treturn (\n\t\t\t\tmoment(b.order.expiration).valueOf() -\n\t\t\t\tmoment(a.order.expiration).valueOf()\n\t\t\t\t);\n\t\t\t});\n\t\t\tsetRowCollection(data);\n\t\t}\n\t}, [data]);\n\n\tuseEffect(()=>{\n\t\tconst newData = [...rowCollection];\n\t\tlet start = (pageNum-1) * perPage;\n\t\tif (newData.length <= 10 && pageNum > 1) {\n\t\t\tstart = 0;\n\t\t\tsetPageNum(1);\n\t\t}\n\t\tsetFilterCollection(newData.slice(start,start+perPage));\n\t},[rowCollection]);\n\n\tconst inventHandler = (currentValue, symbol) => {\n\t\tlet symbolArr = isInvent.symbol;\n\n\t\tif (currentValue) {\n\t\t\tsymbolArr.splice(symbolArr.indexOf(symbol),1);\t\n\t\t} else {\n\t\t\tsymbolArr.push(symbol)\n\t\t}\t\n\n\t\tsetIsInvent(prev => {\n\t\t\treturn {\n\t\t\t\tcurrent: !currentValue,\n\t\t\t\tsymbol : symbolArr\n\t\t\t}\n\t\t});\n\t}\n\n\tconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n\t\t[`&.${tableCellClasses.head}`]: {\n\t\t\tbackgroundColor: theme.palette.common.white,\n\t\t\tcolor: theme.palette.common.black,\n\t\t\tfontWeight: 600,\n\t\t\tfontSize: 15,\n\t\t},\n\t\t[`&.${tableCellClasses.body}`]: {\n\t\t\tfontSize: 14,\n\t\t\tpadding: 8,\n\t\t\tcolor: \"#240000\",\n\t\t},\n\t}));\n\n\tconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n\t\t\"&:nth-of-type(odd)\": {\n\t\t\tbackgroundColor: theme.palette.action.hover,\n\t\t},\n\t\t// hide last border\n\t\t\"&:last-child td, &:last-child th\": {\n\t\t\tborder: 0,\n\t\t},\n\t}));\n\n\tif (isLoading) return <MetaLoader size={\"small\"} />;\n\n\treturn (\n\t\t<>\n\t\t\t<TableContainer className=\"openOrder-table\" component={Paper}>\n\t\t\t\t<Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow style={{ display: \"table-row\" }}>\n\t\t\t\t\t\t\t{CustomColumnsState[\"Buy/sell\"] && <StyledTableCell\n\t\t\t\t\t\t\t\tsorted={column === \"id\" ? direction : null}\n\t\t\t\t\t\t\t\talign=\"left\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tBuy / Sell\n\t\t\t\t\t\t\t</StyledTableCell>}\n\t\t\t\t\t\t\t{CustomColumnsState[\"From / To\"] && <StyledTableCell align=\"left\">\n\t\t\t\t\t\t\t\tFrom / To\n\t\t\t\t\t\t\t</StyledTableCell>}\n\t\t\t\t\t\t\t{CustomColumnsState[\"Price\"] && <StyledTableCell align=\"left\">Price</StyledTableCell>}\n\t\t\t\t\t\t\t{CustomColumnsState[\"Market Price\"] && <StyledTableCell align=\"left\">Market Price</StyledTableCell>}\n\t\t\t\t\t\t\t{CustomColumnsState[\"Orders Date\"] && <StyledTableCell align=\"left\">Order Date</StyledTableCell>}\n\t\t\t\t\t\t\t{CustomColumnsState[\"Expiry Date\"] && <StyledTableCell align=\"left\">Expiry Date</StyledTableCell>}\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{filterCollection && filterCollection.map((el, index) => (\n\t\t\t\t\t\t\t<StyledTableRow key={index}>\n\t\t\t\t\t\t\t\t{CustomColumnsState[\"Buy/sell\"] && <StyledTableCell align=\"left\">\n\t\t\t\t\t\t\t\t\t<span className={`${el.isInverted ? 'danger-title' : 'success-title'}`}>\n\t\t\t\t\t\t\t\t\t\t{el.isInverted ? 'Sell' : 'Buy'}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</StyledTableCell>}\n\t\t\t\t\t\t\t\t{CustomColumnsState[\"From / To\"] && <StyledTableCell align=\"left\">\n\t\t\t\t\t\t\t\t\t<h6 className=\"order-table-column-padding\" style={{ margin: \"0\" }}>{el.fromTo}</h6>\n\t\t\t\t\t\t\t\t</StyledTableCell>}\n\t\t\t\t\t\t\t\t{CustomColumnsState[\"Price\"] && <StyledTableCell align=\"left\">\n\t\t\t\t\t\t\t\t<PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\n\t\t\t\t\t\t\t\t\t{(popupState) => (\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"order-table-column-padding\" {...bindTrigger(popupState)} style={{ margin: \"0\" }}>{el.price}<span className=\"price_symbol\">{el.priceSymbol}</span></h6>\n\t\t\t\t\t\t\t\t\t\t\t<Popover\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"price_symbol_model\"\n\t\t\t\t\t\t\t\t\t\t\t\t{...bindPopover(popupState)}\n\t\t\t\t\t\t\t\t\t\t\t\tanchorOrigin={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'top',\n\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\ttransformOrigin={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvertical: 'bottom',\n\t\t\t\t\t\t\t\t\t\t\t\t\thorizontal: 'center',\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography className=\"price_symbol_model\" sx={{ p: 2 }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className=\"inside_model_btn\" onClick={() => inventHandler(el.isInverted, el.marketName)} >Invert the price</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</PopupState>\n\t\t\t\t\t\t\t\t</StyledTableCell>}\n\t\t\t\t\t\t\t\t{CustomColumnsState[\"Market Price\"] && <StyledTableCell align=\"left\">\n\t\t\t\t\t\t\t\t\t<h6 className=\"order-table-column-padding\" style={{ margin: \"0\" }}>{el.marketPrice}</h6>\n\t\t\t\t\t\t\t\t</StyledTableCell>}\n\t\t\t\t\t\t\t\t{CustomColumnsState[\"Orders Date\"] && <StyledTableCell align=\"left\">\n\t\t\t\t\t\t\t\t\t<h6 className=\"order-table-column-padding\" style={{ margin: \"0\" }}>{el.creationDate}</h6>\n\t\t\t\t\t\t\t\t</StyledTableCell>}\n\t\t\t\t\t\t\t\t{CustomColumnsState[\"Expiry Date\"] && <StyledTableCell align=\"left\">\n\t\t\t\t\t\t\t\t\t<h6 className=\"order-table-column-padding\" style={{ margin: \"0\" }}>{el.expiration}</h6>\n\t\t\t\t\t\t\t\t</StyledTableCell>}\n\t\t\t\t\t\t\t</StyledTableRow>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t{filterCollection && filterCollection.length === 0 && <StyledTableRow>\n\t\t\t\t\t\t\t<StyledTableCell align=\"center\" colSpan={6}>\n\t\t\t\t\t\t\t\t<span>No record found</span>\n\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t</StyledTableRow>}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\n\t\t\t{rowCollection.length > 0 && <Grid container spacing={2}>\n\t\t\t\t<Grid item md={12}>\n\t\t\t\t\t<Stack spacing={2}>\n\t\t\t\t\t\t{rowCollection.length>0 && <div className=\"page_sec\">\n\t\t\t\t\t\t<span>Total of {rowCollection.length} operations</span>\n\t\t\t\t\t\t{rowCollection.length > 10 && <Pagination \n\t\t\t\t\t\t\tcount={Math.ceil(rowCollection.length/perPage)} \n\t\t\t\t\t\t\tshape=\"rounded\"\n\t\t\t\t\t\t\tpage={pageNum}\n\t\t\t\t\t\t\tonChange={(e, num) => {\n\t\t\t\t\t\t\tsetPageNum(num);\n\t\t\t\t\t\t\tdispatch(checkTokenRequest(accountNameState));\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>}\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t</Stack>\n\t\t\t\t</Grid>\n\t\t\t</Grid>}\n\n\t\t</>\n\t);\n};\nexport default OpenOrder;\n","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/lib/fetchOpenOrder.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/utils/MarketClasses.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/utils/utils.js",["513"],"import asset_utils from \"./asset_utils\";\n\nimport {ChainTypes} from \"meta1-vision-js\";\n\nvar numeral = require(\"numeral\");\nlet id_regex = /\\b\\d+\\.\\d+\\.(\\d+)\\b/;\nvar {object_type} = ChainTypes;\n\nvar Utils = {\n    is_object_id: obj_id => {\n        if (\"string\" != typeof obj_id) return false;\n        let match = id_regex.exec(obj_id);\n        return match !== null && obj_id.split(\".\").length === 3;\n    },\n\n    is_object_type: (obj_id, type) => {\n        let prefix = object_type[type];\n        if (!prefix || !obj_id) return null;\n        prefix = \"1.\" + prefix.toString();\n        return obj_id.substring(0, prefix.length) === prefix;\n    },\n\n    get_asset_precision: precision => {\n        precision = precision.toJS ? precision.get(\"precision\") : precision;\n        return Math.pow(10, precision);\n    },\n\n    get_asset_amount: function(amount, asset) {\n        if (amount === 0) return amount;\n        if (!amount) return null;\n        return (\n            amount /\n            this.get_asset_precision(\n                asset.toJS ? asset.get(\"precision\") : asset.precision\n            )\n        );\n    },\n\n    convert_satoshi_to_typed: function(amount, asset) {\n        if (amount === 0) return amount;\n        if (!amount) return null;\n        return (\n            amount /\n            this.get_asset_precision(\n                asset.toJS ? asset.get(\"precision\") : asset.precision\n            )\n        );\n    },\n\n    convert_typed_to_satoshi: function(amount, asset) {\n        return (\n            amount *\n            this.get_asset_precision(\n                asset.toJS ? asset.get(\"precision\") : asset.precision\n            )\n        );\n    },\n\n    get_asset_price: function(\n        quoteAmount,\n        quoteAsset,\n        baseAmount,\n        baseAsset,\n        inverted = false\n    ) {\n        if (!quoteAsset || !baseAsset) {\n            return 1;\n        }\n        var price =\n            this.get_asset_amount(quoteAmount, quoteAsset) /\n            this.get_asset_amount(baseAmount, baseAsset);\n        return inverted ? 1 / price : price;\n    },\n\n    format_volume(amount, precision = 3) {\n        if (amount < 10000) {\n            return this.format_number(amount, precision);\n        } else if (amount < 1000000) {\n            return (Math.round(amount / 10) / 100).toFixed(2) + \"k\";\n        } else {\n            return (Math.round(amount / 10000) / 100).toFixed(2) + \"M\";\n        }\n    },\n\n    format_number: (number, decimals, trailing_zeros = true) => {\n        if (\n            isNaN(number) ||\n            !isFinite(number) ||\n            number === undefined ||\n            number === null\n        )\n            return \"\";\n        let zeros = \".\";\n        for (var i = 0; i < decimals; i++) {\n            zeros += \"0\";\n        }\n        let num = numeral(number).format(\"0,0\" + zeros);\n        if (num.indexOf(\".\") > 0 && !trailing_zeros)\n            return num.replace(/0+$/, \"\").replace(/\\.$/, \"\");\n        return num;\n    },\n\n    format_asset: function(amount, asset, noSymbol, trailing_zeros = true) {\n        let symbol;\n        let digits = 0;\n        if (asset === undefined) return undefined;\n        if (\"symbol\" in asset) {\n            // console.log( \"asset: \", asset )\n            symbol = asset.symbol;\n            digits = asset.precision;\n        } else {\n            // console.log( \"asset: \", asset.toJS() )\n            symbol = asset.get(\"symbol\");\n            digits = asset.get(\"precision\");\n        }\n        let precision = this.get_asset_precision(digits);\n        // console.log( \"precision: \", precision )\n\n        return `${this.format_number(\n            amount / precision,\n            digits,\n            trailing_zeros\n        )}${!noSymbol ? \" \" + symbol : \"\"}`;\n    },\n\n    price_text: function(price, base, quote) {\n        let maxDecimals = 8;\n        let priceText;\n        let quoteID = quote.toJS ? quote.get(\"id\") : quote.id;\n        let quotePrecision = quote.toJS\n            ? quote.get(\"precision\")\n            : quote.precision;\n        let baseID = base.toJS ? base.get(\"id\") : base.id;\n        let basePrecision = base.toJS ? base.get(\"precision\") : base.precision;\n        let fixedPrecisionAssets = {\n            \"1.3.113\": 5, // bitCNY\n            \"1.3.121\": 5 // bitUSD\n        };\n        if (quoteID === \"1.3.0\") {\n            priceText = this.format_number(price, quotePrecision);\n        } else if (baseID === \"1.3.0\") {\n            priceText = this.format_number(\n                price,\n                Math.min(maxDecimals, quotePrecision + 2)\n            );\n        } else if (fixedPrecisionAssets[quoteID]) {\n            priceText = this.format_number(\n                price,\n                fixedPrecisionAssets[quoteID]\n            );\n        } else {\n            priceText = this.format_number(\n                price,\n                Math.min(\n                    maxDecimals,\n                    Math.max(quotePrecision + basePrecision, 2)\n                )\n            );\n        }\n        return priceText;\n    },\n\n    price_to_text: function(price, base, quote, forcePrecision = null) {\n        if (typeof price !== \"number\" || !base || !quote) {\n            return;\n        }\n\n        if (price === Infinity) {\n            price = 0;\n        }\n        let priceText;\n\n        if (forcePrecision) {\n            priceText = this.format_number(price, forcePrecision);\n        } else {\n            priceText = this.price_text(price, base, quote);\n        }\n        let price_split = priceText.split(\".\");\n        let int = price_split[0];\n        let dec = price_split[1];\n        let i;\n\n        let zeros = 0;\n        if (dec) {\n            if (price > 1) {\n                let l = dec.length;\n                for (i = l - 1; i >= 0; i--) {\n                    if (dec[i] !== \"0\") {\n                        break;\n                    }\n                    zeros++;\n                }\n            } else {\n                let l = dec.length;\n                for (i = 0; i < l; i++) {\n                    if (dec[i] !== \"0\") {\n                        i--;\n                        break;\n                    }\n                    zeros++;\n                }\n            }\n        }\n\n        let trailing = zeros\n            ? dec.substr(Math.max(0, i + 1), dec.length)\n            : null;\n\n        if (trailing) {\n            if (trailing.length === dec.length) {\n                dec = null;\n            } else if (trailing.length) {\n                dec = dec.substr(0, i + 1);\n            }\n        }\n\n        return {\n            text: priceText,\n            int: int,\n            dec: dec,\n            trailing: trailing,\n            full: price\n        };\n    },\n\n    check_market_stats: function(\n        newStats = {close: {}},\n        oldStats = {close: {}}\n    ) {\n        let statsChanged =\n            newStats.volumeBase !== oldStats.volumeBase ||\n            !this.are_equal_shallow(\n                newStats.close && newStats.close.base,\n                oldStats.close && oldStats.close.base\n            ) ||\n            !this.are_equal_shallow(\n                newStats.close && newStats.close.quote,\n                oldStats.close && oldStats.close.quote\n            );\n        return statsChanged;\n    },\n\n    are_equal_shallow: function(a, b) {\n        if ((!a && b) || (a && !b)) {\n            return false;\n        }\n        if (Array.isArray(a) && Array.isArray(a)) {\n            if (a.length > b.length) {\n                return false;\n            }\n        }\n        if (typeof a === \"string\" && typeof b === \"string\") {\n            return a === b;\n        } else if (\n            (typeof a === \"string\" && typeof b !== \"string\") ||\n            (typeof a !== \"string\" && typeof b === \"string\")\n        ) {\n            return false;\n        }\n\n        if (a && a.toJS && b && b.toJS) return a === b;\n        for (var key in a) {\n            if ((a.hasOwnProperty(key) && !(key in b)) || a[key] !== b[key]) {\n                return false;\n            }\n        }\n        for (var key in b) {\n            if ((b.hasOwnProperty(key) && !(key in a)) || a[key] !== b[key]) {\n                return false;\n            }\n        }\n\n        return true;\n    },\n\n    makeISODateString(date_str) {\n        if (typeof date_str === \"string\" && !/Z$/.test(date_str)) {\n            date_str += \"Z\";\n        }\n        return date_str;\n    },\n\n    format_date: function(date_str) {\n        date_str = this.makeISODateString(date_str);\n        let date = new Date(date_str);\n        return date.toLocaleDateString();\n    },\n\n    format_time: function(time_str) {\n        time_str = this.makeISODateString(time_str);\n        let date = new Date(time_str);\n        return date.toLocaleString();\n    },\n\n    limitByPrecision: function(value, assetPrecision) {\n        let valueString = value.toString();\n        let splitString = valueString.split(\".\");\n        if (\n            splitString.length === 1 ||\n            (splitString.length === 2 &&\n                splitString[1].length <= assetPrecision)\n        ) {\n            return valueString;\n        } else {\n            return (\n                splitString[0] + \".\" + splitString[1].substr(0, assetPrecision)\n            );\n        }\n    },\n\n    convertPrice: function(fromRate, toRate, fromID, toID) {\n        if (!fromRate || !toRate) {\n            return null;\n        }\n        // Handle case of input simply being a fromAsset and toAsset\n        if (fromRate.toJS && this.is_object_type(fromRate.get(\"id\"), \"asset\")) {\n            fromID = fromRate.get(\"id\");\n            fromRate = fromRate.get(\"bitasset\")\n                ? asset_utils.extractRawFeedPrice(fromRate).toJS()\n                : fromRate.getIn([\"options\", \"core_exchange_rate\"]).toJS();\n        }\n\n        if (toRate.toJS && this.is_object_type(toRate.get(\"id\"), \"asset\")) {\n            toID = toRate.get(\"id\");\n            toRate = toRate.get(\"bitasset\")\n                ? asset_utils.extractRawFeedPrice(toRate).toJS()\n                : toRate.getIn([\"options\", \"core_exchange_rate\"]).toJS();\n        }\n\n        let fromRateQuoteID = fromRate.quote.asset_id;\n        let toRateQuoteID = toRate.quote.asset_id;\n\n        let fromRateQuoteAmount, fromRateBaseAmount;\n        if (fromRateQuoteID === fromID) {\n            fromRateQuoteAmount = fromRate.quote.amount;\n            fromRateBaseAmount = fromRate.base.amount;\n        } else {\n            fromRateQuoteAmount = fromRate.base.amount;\n            fromRateBaseAmount = fromRate.quote.amount;\n        }\n\n        let toRateQuoteAmount, toRateBaseAmount;\n        if (toRateQuoteID === toID) {\n            toRateQuoteAmount = toRate.quote.amount;\n            toRateBaseAmount = toRate.base.amount;\n        } else {\n            toRateQuoteAmount = toRate.base.amount;\n            toRateBaseAmount = toRate.quote.amount;\n        }\n\n        let baseRatio, finalQuoteAmount, finalBaseAmount;\n        if (toRateBaseAmount > fromRateBaseAmount) {\n            baseRatio = toRateBaseAmount / fromRateBaseAmount;\n            finalQuoteAmount = fromRateQuoteAmount * baseRatio;\n            finalBaseAmount = toRateQuoteAmount;\n        } else {\n            baseRatio = fromRateBaseAmount / toRateBaseAmount;\n            finalQuoteAmount = fromRateQuoteAmount;\n            finalBaseAmount = toRateQuoteAmount * baseRatio;\n        }\n\n        return {\n            quote: {\n                amount: finalQuoteAmount,\n                asset_id: toID\n            },\n            base: {\n                amount: finalBaseAmount,\n                asset_id: fromID\n            }\n        };\n    },\n\n    convertValue: function(priceObject, amount, fromAsset, toAsset) {\n        priceObject = priceObject.toJS ? priceObject.toJS() : priceObject;\n        let quotePrecision = this.get_asset_precision(\n            fromAsset.get(\"precision\")\n        );\n        let basePrecision = this.get_asset_precision(toAsset.get(\"precision\"));\n\n        let assetPrice = this.get_asset_price(\n            priceObject.quote.amount,\n            fromAsset,\n            priceObject.base.amount,\n            toAsset\n        );\n\n        let eqValue =\n            fromAsset.get(\"id\") !== toAsset.get(\"id\")\n                ? (basePrecision * (amount / quotePrecision)) / assetPrice\n                : amount;\n\n        if (isNaN(eqValue) || !isFinite(eqValue)) {\n            return null;\n        }\n        return eqValue;\n    },\n\n    sortText(a, b, inverse = false) {\n        if (a > b) {\n            return inverse ? 1 : -1;\n        } else if (a < b) {\n            return inverse ? -1 : 1;\n        } else {\n            return 0;\n        }\n    },\n\n    sortID(a, b, inverse = false) {\n        // inverse = false => low to high\n        let intA = parseInt(a.split(\".\")[2], 10);\n        let intB = parseInt(b.split(\".\")[2], 10);\n\n        return inverse ? intB - intA : intA - intB;\n    },\n\n    calc_block_time(\n        block_number,\n        globalObject,\n        dynGlobalObject,\n        estimate = false\n    ) {\n        let block_interval = null;\n        let head_block = null;\n        let head_block_time = null;\n        if (!estimate && (!globalObject || !dynGlobalObject)) {\n            return null;\n        }\n        // estimate what is unknown, i.e. fix a block and assume interval and constant production with equal parameters\n        if (!globalObject) {\n            block_interval = 3;\n        } else {\n            block_interval = globalObject\n                .get(\"parameters\")\n                .get(\"block_interval\");\n        }\n        if (!dynGlobalObject) {\n            // mainnet estimation\n            head_block = 37025190;\n            head_block_time = new Date(\"2019-04-30T07:55:24Z\");\n        } else {\n            head_block = dynGlobalObject.get(\"head_block_number\");\n            head_block_time = new Date(dynGlobalObject.get(\"time\") + \"Z\");\n        }\n        const seconds_below = (head_block - block_number) * block_interval;\n        return new Date(head_block_time - seconds_below * 1000);\n    },\n\n    get_translation_parts(str) {\n        let re = /{(.*?)}/g;\n        return str.split(re);\n    },\n\n    get_percentage(a, b) {\n        return Math.round((a / b) * 100) + \"%\";\n    },\n};\n\nexport default Utils;","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/utils/asset_utils.js",["514"],"import assetConstants from \"./asset_constants\";\r\nimport sanitize from \"sanitize\";\r\n\r\nexport default class AssetUtils {\r\n    static getFlagBooleans(mask, isBitAsset = false) {\r\n        let booleans = {\r\n            charge_market_fee: false,\r\n            white_list: false,\r\n            override_authority: false,\r\n            transfer_restricted: false,\r\n            disable_force_settle: false,\r\n            global_settle: false,\r\n            disable_confidential: false,\r\n            witness_fed_asset: false,\r\n            committee_fed_asset: false\r\n        };\r\n\r\n        if (mask === \"all\") {\r\n            for (let flag in booleans) {\r\n                if (\r\n                    !isBitAsset &&\r\n                    assetConstants.uia_permission_mask.indexOf(flag) === -1\r\n                ) {\r\n                    delete booleans[flag];\r\n                } else {\r\n                    booleans[flag] = true;\r\n                }\r\n            }\r\n            return booleans;\r\n        }\r\n\r\n        for (let flag in booleans) {\r\n            if (\r\n                !isBitAsset &&\r\n                assetConstants.uia_permission_mask.indexOf(flag) === -1\r\n            ) {\r\n                delete booleans[flag];\r\n            } else {\r\n                if (mask & assetConstants.permission_flags[flag]) {\r\n                    booleans[flag] = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return booleans;\r\n    }\r\n\r\n    static getFlags(flagBooleans) {\r\n        let keys = Object.keys(assetConstants.permission_flags);\r\n\r\n        let flags = 0;\r\n\r\n        keys.forEach(key => {\r\n            if (flagBooleans[key] && key !== \"global_settle\") {\r\n                flags += assetConstants.permission_flags[key];\r\n            }\r\n        });\r\n\r\n        return flags;\r\n    }\r\n\r\n    static getPermissions(flagBooleans, isBitAsset = false) {\r\n        let permissions = isBitAsset\r\n            ? Object.keys(assetConstants.permission_flags)\r\n            : assetConstants.uia_permission_mask;\r\n        let flags = 0;\r\n        permissions.forEach(permission => {\r\n            if (flagBooleans[permission] && permission !== \"global_settle\") {\r\n                flags += assetConstants.permission_flags[permission];\r\n            }\r\n        });\r\n\r\n        if (isBitAsset && flagBooleans[\"global_settle\"]) {\r\n            flags += assetConstants.permission_flags[\"global_settle\"];\r\n        }\r\n\r\n        return flags;\r\n    }\r\n\r\n    static parseDescription(description) {\r\n        let parsed;\r\n        description = sanitize(description, {\r\n            whiteList: [], // empty, means filter out all tags\r\n            stripIgnoreTag: true // filter out all HTML not in the whilelist\r\n        });\r\n        try {\r\n            parsed = JSON.parse(description);\r\n        } catch (error) {}\r\n        for (let key in parsed) {\r\n            parsed[key] = sanitize(parsed[key], {\r\n                whiteList: [], // empty, means filter out all tags\r\n                stripIgnoreTag: true // filter out all HTML not in the whilelist\r\n            });\r\n        }\r\n        return parsed ? parsed : {main: description};\r\n    }\r\n\r\n    static extractRawFeedPrice(asset) {\r\n        /**\r\n         * The naming convention is confusing!\r\n         *\r\n         * bitshares-core knows only settlement_price, which is the feed price as known from UI!\r\n         *\r\n         * UI definition:\r\n         *  - Feed Price: Witness fed price, given by backend as settlement_price\r\n         *  - Settlement Price: feed price * force settlement offset factor\r\n         *\r\n         */\r\n        if (!!asset.bitasset) {\r\n            return asset.bitasset.current_feed.settlement_price;\r\n        }\r\n        if (!!asset.current_feed) {\r\n            return asset.current_feed.settlement_price;\r\n        }\r\n        if (!!asset.settlement_price) {\r\n            return asset.settlement_price;\r\n        }\r\n        if (!!asset.get(\"bitasset\")) {\r\n            return asset.getIn([\r\n                \"bitasset\",\r\n                \"current_feed\",\r\n                \"settlement_price\"\r\n            ]);\r\n        }\r\n        if (!!asset.get(\"settlement_price\")) {\r\n            return asset.getIn([\"settlement_price\"]);\r\n        }\r\n        if (!!asset.get(\"current_feed\")) {\r\n            return asset.getIn([\"current_feed\", \"settlement_price\"]);\r\n        }\r\n        throw \"Feed price not found!\";\r\n    }\r\n}\r\n","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/utils/asset_constants.js",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/SignUpForm/MigrationForm.js",["515","516","517"],"import React, { useState, useEffect } from \"react\";\nimport MetaLoader from \"../../UI/loader/Loader\";\nimport { validateSignature } from \"../../API/API\";\nimport { Button, Form, Grid, Input, Popup } from \"semantic-ui-react\";\n\nimport \"./SignUpForm.css\";\n\nexport default function MigrationForm(props) {\n  const [passkey, setPasskey] = useState(\"\");\n\n  const handleClick = async () => {\n    const response = await validateSignature(props.accountName, passkey);\n    if (response?.isValid === true) {\n      props.onClick(\n        props.accountName,\n        props.password,\n        props.phone,\n        props.lastName,\n        props.firstName\n      );\n    }\n    else {\n      alert(\"Private Key is invalid\");\n      return;\n    }\n  }\n\n  return (\n    <Grid>\n      <Grid.Column width={16} className=\"singup-grid\">\n        <Form autoComplete=\"off\">\n          <div className=\"field\">\n            <Grid stackable>\n              <Grid.Column>\n                <Form.Field>\n                  <label>Meta Wallet Name</label>\n                  <input\n                    control={Input}\n                    value={props.accountName}\n                    type=\"text\"\n                    contentEditable={false}\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <label>Your Private Passkey</label>\n                  <input\n                    control={Input}\n                    value={passkey}\n                    type=\"text\"\n                    placeholder=\"Enter your private or pass key\"\n                    onChange={(event) => {\n                      setPasskey(event.target.value);\n                    }}\n                  />\n                </Form.Field>\n              </Grid.Column>\n            </Grid>\n          </div>\n          <Form.Field>\n            <Button\n              className=\"yellow\"\n              style={{ color: \"#240000\", marginTop: '1em' }}\n              disabled={\n                props.accountName === \"\" ||\n                passkey === \"\"\n              }\n              onClick={handleClick}\n            >\n              Import Wallet\n            </Button>\n          </Form.Field>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  )\n}\n","/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/components/OpenOrder/CustomizedColumns.jsx",[],"/Users/kok/Desktop/meta1/litewallet/meta-1-litewallet-2.0/src/utils/constant.js",[],{"ruleId":"518","replacedBy":"519"},{"ruleId":"520","replacedBy":"521"},{"ruleId":"522","severity":1,"message":"523","line":1,"column":8,"nodeType":"524","messageId":"525","endLine":1,"endColumn":13},{"ruleId":"522","severity":1,"message":"526","line":2,"column":10,"nodeType":"524","messageId":"525","endLine":2,"endColumn":20},{"ruleId":"522","severity":1,"message":"527","line":2,"column":22,"nodeType":"524","messageId":"525","endLine":2,"endColumn":31},{"ruleId":"522","severity":1,"message":"528","line":8,"column":10,"nodeType":"524","messageId":"525","endLine":8,"endColumn":26},{"ruleId":"522","severity":1,"message":"529","line":8,"column":28,"nodeType":"524","messageId":"525","endLine":8,"endColumn":40},{"ruleId":"522","severity":1,"message":"530","line":10,"column":10,"nodeType":"524","messageId":"525","endLine":10,"endColumn":21},{"ruleId":"522","severity":1,"message":"531","line":10,"column":43,"nodeType":"524","messageId":"525","endLine":10,"endColumn":58},{"ruleId":"522","severity":1,"message":"532","line":19,"column":8,"nodeType":"524","messageId":"525","endLine":19,"endColumn":18},{"ruleId":"522","severity":1,"message":"533","line":20,"column":8,"nodeType":"524","messageId":"525","endLine":20,"endColumn":18},{"ruleId":"522","severity":1,"message":"534","line":32,"column":26,"nodeType":"524","messageId":"525","endLine":32,"endColumn":40},{"ruleId":"522","severity":1,"message":"535","line":34,"column":59,"nodeType":"524","messageId":"525","endLine":34,"endColumn":74},{"ruleId":"522","severity":1,"message":"536","line":44,"column":9,"nodeType":"524","messageId":"525","endLine":44,"endColumn":19},{"ruleId":"522","severity":1,"message":"537","line":50,"column":9,"nodeType":"524","messageId":"525","endLine":50,"endColumn":18},{"ruleId":"522","severity":1,"message":"538","line":51,"column":9,"nodeType":"524","messageId":"525","endLine":51,"endColumn":19},{"ruleId":"522","severity":1,"message":"539","line":55,"column":9,"nodeType":"524","messageId":"525","endLine":55,"endColumn":20},{"ruleId":"522","severity":1,"message":"540","line":56,"column":9,"nodeType":"524","messageId":"525","endLine":56,"endColumn":30},{"ruleId":"522","severity":1,"message":"541","line":57,"column":9,"nodeType":"524","messageId":"525","endLine":57,"endColumn":23},{"ruleId":"522","severity":1,"message":"542","line":80,"column":19,"nodeType":"524","messageId":"525","endLine":80,"endColumn":29},{"ruleId":"522","severity":1,"message":"543","line":82,"column":10,"nodeType":"524","messageId":"525","endLine":82,"endColumn":18},{"ruleId":"522","severity":1,"message":"544","line":85,"column":18,"nodeType":"524","messageId":"525","endLine":85,"endColumn":27},{"ruleId":"522","severity":1,"message":"545","line":98,"column":10,"nodeType":"524","messageId":"525","endLine":98,"endColumn":23},{"ruleId":"546","severity":1,"message":"547","line":113,"column":6,"nodeType":"548","endLine":113,"endColumn":8,"suggestions":"549"},{"ruleId":"546","severity":1,"message":"550","line":171,"column":5,"nodeType":"548","endLine":171,"endColumn":40,"suggestions":"551"},{"ruleId":"522","severity":1,"message":"552","line":173,"column":9,"nodeType":"524","messageId":"525","endLine":173,"endColumn":12},{"ruleId":"546","severity":1,"message":"553","line":190,"column":5,"nodeType":"548","endLine":190,"endColumn":22,"suggestions":"554"},{"ruleId":"546","severity":1,"message":"555","line":200,"column":5,"nodeType":"548","endLine":200,"endColumn":39,"suggestions":"556"},{"ruleId":"546","severity":1,"message":"557","line":226,"column":6,"nodeType":"548","endLine":226,"endColumn":68,"suggestions":"558"},{"ruleId":"546","severity":1,"message":"559","line":283,"column":6,"nodeType":"548","endLine":283,"endColumn":24,"suggestions":"560"},{"ruleId":"522","severity":1,"message":"561","line":301,"column":18,"nodeType":"524","messageId":"525","endLine":301,"endColumn":34},{"ruleId":"522","severity":1,"message":"562","line":11,"column":10,"nodeType":"524","messageId":"525","endLine":11,"endColumn":18},{"ruleId":"522","severity":1,"message":"563","line":11,"column":20,"nodeType":"524","messageId":"525","endLine":11,"endColumn":31},{"ruleId":"522","severity":1,"message":"564","line":13,"column":10,"nodeType":"524","messageId":"525","endLine":13,"endColumn":24},{"ruleId":"522","severity":1,"message":"565","line":16,"column":29,"nodeType":"524","messageId":"525","endLine":16,"endColumn":39},{"ruleId":"522","severity":1,"message":"566","line":18,"column":8,"nodeType":"524","messageId":"525","endLine":18,"endColumn":15},{"ruleId":"522","severity":1,"message":"567","line":35,"column":30,"nodeType":"524","messageId":"525","endLine":35,"endColumn":36},{"ruleId":"522","severity":1,"message":"568","line":35,"column":38,"nodeType":"524","messageId":"525","endLine":35,"endColumn":45},{"ruleId":"522","severity":1,"message":"569","line":40,"column":28,"nodeType":"524","messageId":"525","endLine":40,"endColumn":33},{"ruleId":"522","severity":1,"message":"542","line":14,"column":19,"nodeType":"524","messageId":"525","endLine":14,"endColumn":29},{"ruleId":"522","severity":1,"message":"570","line":16,"column":10,"nodeType":"524","messageId":"525","endLine":16,"endColumn":23},{"ruleId":"522","severity":1,"message":"571","line":17,"column":10,"nodeType":"524","messageId":"525","endLine":17,"endColumn":24},{"ruleId":"546","severity":1,"message":"572","line":39,"column":6,"nodeType":"548","endLine":39,"endColumn":33,"suggestions":"573"},{"ruleId":"522","severity":1,"message":"574","line":42,"column":9,"nodeType":"524","messageId":"525","endLine":42,"endColumn":22},{"ruleId":"522","severity":1,"message":"575","line":6,"column":8,"nodeType":"524","messageId":"525","endLine":6,"endColumn":22},{"ruleId":"576","severity":1,"message":"577","line":117,"column":19,"nodeType":"578","endLine":124,"endColumn":20},{"ruleId":"576","severity":1,"message":"577","line":183,"column":21,"nodeType":"578","endLine":190,"endColumn":22},{"ruleId":"522","severity":1,"message":"523","line":3,"column":8,"nodeType":"524","messageId":"525","endLine":3,"endColumn":13},{"ruleId":"522","severity":1,"message":"579","line":6,"column":3,"nodeType":"524","messageId":"525","endLine":6,"endColumn":8},{"ruleId":"522","severity":1,"message":"580","line":11,"column":3,"nodeType":"524","messageId":"525","endLine":11,"endColumn":8},{"ruleId":"522","severity":1,"message":"581","line":12,"column":3,"nodeType":"524","messageId":"525","endLine":12,"endColumn":8},{"ruleId":"522","severity":1,"message":"582","line":14,"column":10,"nodeType":"524","messageId":"525","endLine":14,"endColumn":26},{"ruleId":"522","severity":1,"message":"583","line":19,"column":58,"nodeType":"524","messageId":"525","endLine":19,"endColumn":79},{"ruleId":"522","severity":1,"message":"584","line":20,"column":5,"nodeType":"524","messageId":"525","endLine":20,"endColumn":10},{"ruleId":"522","severity":1,"message":"585","line":25,"column":5,"nodeType":"524","messageId":"525","endLine":25,"endColumn":22},{"ruleId":"522","severity":1,"message":"586","line":26,"column":5,"nodeType":"524","messageId":"525","endLine":26,"endColumn":17},{"ruleId":"522","severity":1,"message":"587","line":27,"column":5,"nodeType":"524","messageId":"525","endLine":27,"endColumn":20},{"ruleId":"522","severity":1,"message":"588","line":28,"column":5,"nodeType":"524","messageId":"525","endLine":28,"endColumn":21},{"ruleId":"522","severity":1,"message":"589","line":29,"column":5,"nodeType":"524","messageId":"525","endLine":29,"endColumn":22},{"ruleId":"522","severity":1,"message":"590","line":32,"column":9,"nodeType":"524","messageId":"525","endLine":32,"endColumn":27},{"ruleId":"546","severity":1,"message":"591","line":65,"column":6,"nodeType":"548","endLine":65,"endColumn":54,"suggestions":"592"},{"ruleId":"522","severity":1,"message":"593","line":4,"column":8,"nodeType":"524","messageId":"525","endLine":4,"endColumn":12},{"ruleId":"522","severity":1,"message":"594","line":16,"column":5,"nodeType":"524","messageId":"525","endLine":16,"endColumn":30},{"ruleId":"522","severity":1,"message":"595","line":17,"column":5,"nodeType":"524","messageId":"525","endLine":17,"endColumn":29},{"ruleId":"522","severity":1,"message":"562","line":5,"column":10,"nodeType":"524","messageId":"525","endLine":5,"endColumn":18},{"ruleId":"522","severity":1,"message":"596","line":3,"column":38,"nodeType":"524","messageId":"525","endLine":3,"endColumn":44},{"ruleId":"522","severity":1,"message":"597","line":36,"column":5,"nodeType":"524","messageId":"525","endLine":36,"endColumn":16},{"ruleId":"522","severity":1,"message":"598","line":37,"column":5,"nodeType":"524","messageId":"525","endLine":37,"endColumn":20},{"ruleId":"522","severity":1,"message":"586","line":38,"column":5,"nodeType":"524","messageId":"525","endLine":38,"endColumn":17},{"ruleId":"522","severity":1,"message":"544","line":42,"column":18,"nodeType":"524","messageId":"525","endLine":42,"endColumn":27},{"ruleId":"522","severity":1,"message":"599","line":47,"column":10,"nodeType":"524","messageId":"525","endLine":47,"endColumn":15},{"ruleId":"522","severity":1,"message":"569","line":51,"column":28,"nodeType":"524","messageId":"525","endLine":51,"endColumn":33},{"ruleId":"546","severity":1,"message":"600","line":73,"column":5,"nodeType":"548","endLine":73,"endColumn":40,"suggestions":"601"},{"ruleId":"602","severity":1,"message":"603","line":120,"column":20,"nodeType":"604","messageId":"605","endLine":120,"endColumn":22},{"ruleId":"546","severity":1,"message":"606","line":126,"column":6,"nodeType":"548","endLine":126,"endColumn":23,"suggestions":"607"},{"ruleId":"522","severity":1,"message":"608","line":23,"column":10,"nodeType":"524","messageId":"525","endLine":23,"endColumn":34},{"ruleId":"522","severity":1,"message":"609","line":33,"column":5,"nodeType":"524","messageId":"525","endLine":33,"endColumn":12},{"ruleId":"522","severity":1,"message":"610","line":39,"column":21,"nodeType":"524","messageId":"525","endLine":39,"endColumn":33},{"ruleId":"546","severity":1,"message":"611","line":79,"column":5,"nodeType":"548","endLine":79,"endColumn":53,"suggestions":"612"},{"ruleId":"602","severity":1,"message":"603","line":130,"column":18,"nodeType":"604","messageId":"605","endLine":130,"endColumn":20},{"ruleId":"546","severity":1,"message":"613","line":135,"column":6,"nodeType":"548","endLine":135,"endColumn":38,"suggestions":"614"},{"ruleId":"546","severity":1,"message":"615","line":175,"column":6,"nodeType":"548","endLine":175,"endColumn":37,"suggestions":"616"},{"ruleId":"602","severity":1,"message":"617","line":190,"column":31,"nodeType":"604","messageId":"605","endLine":190,"endColumn":33},{"ruleId":"602","severity":1,"message":"617","line":192,"column":19,"nodeType":"604","messageId":"605","endLine":192,"endColumn":21},{"ruleId":"546","severity":1,"message":"618","line":268,"column":6,"nodeType":"548","endLine":268,"endColumn":44,"suggestions":"619"},{"ruleId":"602","severity":1,"message":"603","line":929,"column":38,"nodeType":"604","messageId":"605","endLine":929,"endColumn":40},{"ruleId":"620","severity":1,"message":"621","line":958,"column":36,"nodeType":"622","messageId":"623","endLine":958,"endColumn":38},{"ruleId":"620","severity":1,"message":"621","line":978,"column":36,"nodeType":"622","messageId":"623","endLine":978,"endColumn":38},{"ruleId":"522","severity":1,"message":"624","line":32,"column":10,"nodeType":"524","messageId":"525","endLine":32,"endColumn":18},{"ruleId":"546","severity":1,"message":"625","line":45,"column":6,"nodeType":"548","endLine":45,"endColumn":8,"suggestions":"626"},{"ruleId":"522","severity":1,"message":"627","line":8,"column":17,"nodeType":"524","messageId":"525","endLine":8,"endColumn":21},{"ruleId":"522","severity":1,"message":"628","line":8,"column":37,"nodeType":"524","messageId":"525","endLine":8,"endColumn":43},{"ruleId":"522","severity":1,"message":"629","line":10,"column":10,"nodeType":"524","messageId":"525","endLine":10,"endColumn":20},{"ruleId":"522","severity":1,"message":"630","line":10,"column":22,"nodeType":"524","messageId":"525","endLine":10,"endColumn":32},{"ruleId":"522","severity":1,"message":"631","line":10,"column":34,"nodeType":"524","messageId":"525","endLine":10,"endColumn":42},{"ruleId":"522","severity":1,"message":"632","line":10,"column":44,"nodeType":"524","messageId":"525","endLine":10,"endColumn":52},{"ruleId":"602","severity":1,"message":"603","line":40,"column":53,"nodeType":"604","messageId":"605","endLine":40,"endColumn":55},{"ruleId":"522","severity":1,"message":"633","line":43,"column":9,"nodeType":"524","messageId":"525","endLine":43,"endColumn":12},{"ruleId":"522","severity":1,"message":"634","line":44,"column":10,"nodeType":"524","messageId":"525","endLine":44,"endColumn":21},{"ruleId":"522","severity":1,"message":"635","line":44,"column":23,"nodeType":"524","messageId":"525","endLine":44,"endColumn":37},{"ruleId":"522","severity":1,"message":"636","line":48,"column":19,"nodeType":"524","messageId":"525","endLine":48,"endColumn":29},{"ruleId":"522","severity":1,"message":"637","line":55,"column":10,"nodeType":"524","messageId":"525","endLine":55,"endColumn":26},{"ruleId":"522","severity":1,"message":"638","line":58,"column":19,"nodeType":"524","messageId":"525","endLine":58,"endColumn":29},{"ruleId":"522","severity":1,"message":"639","line":59,"column":10,"nodeType":"524","messageId":"525","endLine":59,"endColumn":17},{"ruleId":"522","severity":1,"message":"590","line":66,"column":9,"nodeType":"524","messageId":"525","endLine":66,"endColumn":27},{"ruleId":"546","severity":1,"message":"640","line":99,"column":5,"nodeType":"548","endLine":99,"endColumn":53,"suggestions":"641"},{"ruleId":"546","severity":1,"message":"642","line":148,"column":6,"nodeType":"548","endLine":148,"endColumn":16,"suggestions":"643"},{"ruleId":"546","severity":1,"message":"644","line":169,"column":6,"nodeType":"548","endLine":169,"endColumn":24,"suggestions":"645"},{"ruleId":"522","severity":1,"message":"646","line":197,"column":9,"nodeType":"524","messageId":"525","endLine":197,"endColumn":20},{"ruleId":"546","severity":1,"message":"647","line":268,"column":6,"nodeType":"548","endLine":268,"endColumn":32,"suggestions":"648"},{"ruleId":"522","severity":1,"message":"649","line":274,"column":9,"nodeType":"524","messageId":"525","endLine":274,"endColumn":14},{"ruleId":"546","severity":1,"message":"650","line":310,"column":6,"nodeType":"548","endLine":310,"endColumn":23,"suggestions":"651"},{"ruleId":"522","severity":1,"message":"652","line":311,"column":9,"nodeType":"524","messageId":"525","endLine":311,"endColumn":21},{"ruleId":"522","severity":1,"message":"653","line":328,"column":9,"nodeType":"524","messageId":"525","endLine":328,"endColumn":18},{"ruleId":"522","severity":1,"message":"654","line":5,"column":3,"nodeType":"524","messageId":"525","endLine":5,"endColumn":8},{"ruleId":"522","severity":1,"message":"627","line":6,"column":3,"nodeType":"524","messageId":"525","endLine":6,"endColumn":7},{"ruleId":"522","severity":1,"message":"655","line":7,"column":3,"nodeType":"524","messageId":"525","endLine":7,"endColumn":9},{"ruleId":"522","severity":1,"message":"656","line":8,"column":3,"nodeType":"524","messageId":"525","endLine":8,"endColumn":7},{"ruleId":"522","severity":1,"message":"628","line":9,"column":3,"nodeType":"524","messageId":"525","endLine":9,"endColumn":9},{"ruleId":"522","severity":1,"message":"568","line":17,"column":20,"nodeType":"524","messageId":"525","endLine":17,"endColumn":27},{"ruleId":"546","severity":1,"message":"657","line":54,"column":6,"nodeType":"548","endLine":54,"endColumn":26,"suggestions":"658"},{"ruleId":"522","severity":1,"message":"659","line":2,"column":10,"nodeType":"524","messageId":"525","endLine":2,"endColumn":25},{"ruleId":"522","severity":1,"message":"526","line":5,"column":10,"nodeType":"524","messageId":"525","endLine":5,"endColumn":20},{"ruleId":"522","severity":1,"message":"579","line":7,"column":3,"nodeType":"524","messageId":"525","endLine":7,"endColumn":8},{"ruleId":"522","severity":1,"message":"654","line":7,"column":10,"nodeType":"524","messageId":"525","endLine":7,"endColumn":15},{"ruleId":"522","severity":1,"message":"656","line":7,"column":25,"nodeType":"524","messageId":"525","endLine":7,"endColumn":29},{"ruleId":"522","severity":1,"message":"627","line":7,"column":31,"nodeType":"524","messageId":"525","endLine":7,"endColumn":35},{"ruleId":"522","severity":1,"message":"580","line":7,"column":37,"nodeType":"524","messageId":"525","endLine":7,"endColumn":42},{"ruleId":"522","severity":1,"message":"660","line":40,"column":21,"nodeType":"524","messageId":"525","endLine":40,"endColumn":33},{"ruleId":"522","severity":1,"message":"661","line":53,"column":10,"nodeType":"524","messageId":"525","endLine":53,"endColumn":23},{"ruleId":"522","severity":1,"message":"662","line":56,"column":10,"nodeType":"524","messageId":"525","endLine":56,"endColumn":25},{"ruleId":"522","severity":1,"message":"663","line":56,"column":27,"nodeType":"524","messageId":"525","endLine":56,"endColumn":45},{"ruleId":"546","severity":1,"message":"664","line":91,"column":6,"nodeType":"548","endLine":91,"endColumn":37,"suggestions":"665"},{"ruleId":"546","severity":1,"message":"666","line":111,"column":6,"nodeType":"548","endLine":111,"endColumn":38,"suggestions":"667"},{"ruleId":"602","severity":1,"message":"617","line":173,"column":31,"nodeType":"604","messageId":"605","endLine":173,"endColumn":33},{"ruleId":"546","severity":1,"message":"668","line":222,"column":6,"nodeType":"548","endLine":222,"endColumn":22,"suggestions":"669"},{"ruleId":"522","severity":1,"message":"670","line":1,"column":8,"nodeType":"524","messageId":"525","endLine":1,"endColumn":13},{"ruleId":"522","severity":1,"message":"671","line":21,"column":11,"nodeType":"524","messageId":"525","endLine":21,"endColumn":18},{"ruleId":"522","severity":1,"message":"672","line":20,"column":9,"nodeType":"524","messageId":"525","endLine":20,"endColumn":19},{"ruleId":"522","severity":1,"message":"673","line":21,"column":9,"nodeType":"524","messageId":"525","endLine":21,"endColumn":18},{"ruleId":"522","severity":1,"message":"674","line":24,"column":9,"nodeType":"524","messageId":"525","endLine":24,"endColumn":19},{"ruleId":"522","severity":1,"message":"675","line":25,"column":9,"nodeType":"524","messageId":"525","endLine":25,"endColumn":22},{"ruleId":"620","severity":1,"message":"621","line":85,"column":49,"nodeType":"622","messageId":"623","endLine":85,"endColumn":51},{"ruleId":"546","severity":1,"message":"676","line":16,"column":9,"nodeType":"548","endLine":16,"endColumn":16,"suggestions":"677"},{"ruleId":"522","severity":1,"message":"678","line":2,"column":17,"nodeType":"524","messageId":"525","endLine":2,"endColumn":22},{"ruleId":"522","severity":1,"message":"655","line":2,"column":24,"nodeType":"524","messageId":"525","endLine":2,"endColumn":30},{"ruleId":"522","severity":1,"message":"679","line":6,"column":10,"nodeType":"524","messageId":"525","endLine":6,"endColumn":27},{"ruleId":"522","severity":1,"message":"680","line":6,"column":29,"nodeType":"524","messageId":"525","endLine":6,"endColumn":46},{"ruleId":"522","severity":1,"message":"681","line":6,"column":48,"nodeType":"524","messageId":"525","endLine":6,"endColumn":59},{"ruleId":"522","severity":1,"message":"682","line":8,"column":10,"nodeType":"524","messageId":"525","endLine":8,"endColumn":38},{"ruleId":"522","severity":1,"message":"608","line":10,"column":10,"nodeType":"524","messageId":"525","endLine":10,"endColumn":34},{"ruleId":"522","severity":1,"message":"683","line":11,"column":10,"nodeType":"524","messageId":"525","endLine":11,"endColumn":27},{"ruleId":"522","severity":1,"message":"684","line":26,"column":10,"nodeType":"524","messageId":"525","endLine":26,"endColumn":19},{"ruleId":"522","severity":1,"message":"685","line":26,"column":21,"nodeType":"524","messageId":"525","endLine":26,"endColumn":33},{"ruleId":"522","severity":1,"message":"686","line":27,"column":10,"nodeType":"524","messageId":"525","endLine":27,"endColumn":24},{"ruleId":"522","severity":1,"message":"687","line":27,"column":26,"nodeType":"524","messageId":"525","endLine":27,"endColumn":43},{"ruleId":"546","severity":1,"message":"668","line":57,"column":6,"nodeType":"548","endLine":57,"endColumn":50,"suggestions":"688"},{"ruleId":"546","severity":1,"message":"689","line":59,"column":13,"nodeType":"622","endLine":61,"endColumn":4},{"ruleId":"546","severity":1,"message":"690","line":61,"column":6,"nodeType":"548","endLine":61,"endColumn":8,"suggestions":"691"},{"ruleId":"522","severity":1,"message":"692","line":317,"column":7,"nodeType":"524","messageId":"525","endLine":317,"endColumn":30},{"ruleId":"522","severity":1,"message":"693","line":412,"column":7,"nodeType":"524","messageId":"525","endLine":412,"endColumn":17},{"ruleId":"522","severity":1,"message":"593","line":4,"column":8,"nodeType":"524","messageId":"525","endLine":4,"endColumn":12},{"ruleId":"522","severity":1,"message":"594","line":14,"column":5,"nodeType":"524","messageId":"525","endLine":14,"endColumn":30},{"ruleId":"522","severity":1,"message":"595","line":15,"column":5,"nodeType":"524","messageId":"525","endLine":15,"endColumn":29},{"ruleId":"522","severity":1,"message":"694","line":5,"column":66,"nodeType":"524","messageId":"525","endLine":5,"endColumn":75},{"ruleId":"522","severity":1,"message":"523","line":4,"column":8,"nodeType":"524","messageId":"525","endLine":4,"endColumn":13},{"ruleId":"522","severity":1,"message":"695","line":18,"column":9,"nodeType":"524","messageId":"525","endLine":18,"endColumn":17},{"ruleId":"522","severity":1,"message":"696","line":25,"column":10,"nodeType":"524","messageId":"525","endLine":25,"endColumn":14},{"ruleId":"546","severity":1,"message":"689","line":30,"column":13,"nodeType":"622","endLine":36,"endColumn":4},{"ruleId":"546","severity":1,"message":"697","line":36,"column":6,"nodeType":"548","endLine":36,"endColumn":8,"suggestions":"698"},{"ruleId":"522","severity":1,"message":"699","line":1,"column":38,"nodeType":"524","messageId":"525","endLine":1,"endColumn":48},{"ruleId":"522","severity":1,"message":"581","line":5,"column":37,"nodeType":"524","messageId":"525","endLine":5,"endColumn":42},{"ruleId":"546","severity":1,"message":"700","line":147,"column":6,"nodeType":"548","endLine":147,"endColumn":28,"suggestions":"701"},{"ruleId":"546","severity":1,"message":"702","line":183,"column":5,"nodeType":"548","endLine":183,"endColumn":21,"suggestions":"703"},{"ruleId":"522","severity":1,"message":"704","line":4,"column":10,"nodeType":"524","messageId":"525","endLine":4,"endColumn":27},{"ruleId":"522","severity":1,"message":"705","line":5,"column":10,"nodeType":"524","messageId":"525","endLine":5,"endColumn":16},{"ruleId":"522","severity":1,"message":"706","line":4,"column":58,"nodeType":"524","messageId":"525","endLine":4,"endColumn":75},{"ruleId":"522","severity":1,"message":"707","line":4,"column":77,"nodeType":"524","messageId":"525","endLine":4,"endColumn":96},{"ruleId":"522","severity":1,"message":"586","line":31,"column":5,"nodeType":"524","messageId":"525","endLine":31,"endColumn":17},{"ruleId":"522","severity":1,"message":"708","line":106,"column":9,"nodeType":"524","messageId":"525","endLine":106,"endColumn":22},{"ruleId":"522","severity":1,"message":"709","line":2,"column":10,"nodeType":"524","messageId":"525","endLine":2,"endColumn":33},{"ruleId":"546","severity":1,"message":"710","line":24,"column":7,"nodeType":"548","endLine":24,"endColumn":9,"suggestions":"711"},{"ruleId":"522","severity":1,"message":"712","line":1,"column":8,"nodeType":"524","messageId":"525","endLine":1,"endColumn":13},{"ruleId":"522","severity":1,"message":"713","line":2,"column":8,"nodeType":"524","messageId":"525","endLine":2,"endColumn":18},{"ruleId":"522","severity":1,"message":"714","line":4,"column":43,"nodeType":"524","messageId":"525","endLine":4,"endColumn":60},{"ruleId":"522","severity":1,"message":"715","line":5,"column":18,"nodeType":"524","messageId":"525","endLine":5,"endColumn":22},{"ruleId":"522","severity":1,"message":"656","line":5,"column":24,"nodeType":"524","messageId":"525","endLine":5,"endColumn":28},{"ruleId":"522","severity":1,"message":"678","line":5,"column":30,"nodeType":"524","messageId":"525","endLine":5,"endColumn":35},{"ruleId":"522","severity":1,"message":"581","line":5,"column":37,"nodeType":"524","messageId":"525","endLine":5,"endColumn":42},{"ruleId":"522","severity":1,"message":"716","line":54,"column":17,"nodeType":"524","messageId":"525","endLine":54,"endColumn":29},{"ruleId":"522","severity":1,"message":"717","line":13,"column":18,"nodeType":"524","messageId":"525","endLine":13,"endColumn":29},{"ruleId":"522","severity":1,"message":"718","line":13,"column":37,"nodeType":"524","messageId":"525","endLine":13,"endColumn":45},{"ruleId":"522","severity":1,"message":"719","line":13,"column":68,"nodeType":"524","messageId":"525","endLine":13,"endColumn":74},{"ruleId":"522","severity":1,"message":"720","line":17,"column":10,"nodeType":"524","messageId":"525","endLine":17,"endColumn":20},{"ruleId":"522","severity":1,"message":"721","line":33,"column":17,"nodeType":"524","messageId":"525","endLine":33,"endColumn":27},{"ruleId":"522","severity":1,"message":"569","line":34,"column":27,"nodeType":"524","messageId":"525","endLine":34,"endColumn":32},{"ruleId":"620","severity":1,"message":"722","line":44,"column":21,"nodeType":"622","messageId":"723","endLine":44,"endColumn":23},{"ruleId":"546","severity":1,"message":"724","line":70,"column":4,"nodeType":"548","endLine":70,"endColumn":19,"suggestions":"725"},{"ruleId":"726","severity":1,"message":"727","line":267,"column":18,"nodeType":"524","messageId":"728","endLine":267,"endColumn":21},{"ruleId":"729","severity":1,"message":"730","line":131,"column":9,"nodeType":"731","messageId":"732","endLine":131,"endColumn":39},{"ruleId":"522","severity":1,"message":"733","line":1,"column":27,"nodeType":"524","messageId":"525","endLine":1,"endColumn":36},{"ruleId":"522","severity":1,"message":"713","line":2,"column":8,"nodeType":"524","messageId":"525","endLine":2,"endColumn":18},{"ruleId":"522","severity":1,"message":"581","line":4,"column":37,"nodeType":"524","messageId":"525","endLine":4,"endColumn":42},"no-native-reassign",["734"],"no-negated-in-lhs",["735"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'PrivateKey' is defined but never used.","'Signature' is defined but never used.","'getCryptosChange' is defined but never used.","'loginRequest' is defined but never used.","'getUserData' is defined but never used.","'getLastLocation' is defined but never used.","'logoNavbar' is defined but never used.","'logoDefalt' is defined but never used.","'setAccessToken' is defined but never used.","'isLoginSelector' is defined but never used.","'tokenState' is assigned a value but never used.","'demoState' is assigned a value but never used.","'meta1State' is assigned a value but never used.","'traderState' is assigned a value but never used.","'checkPasswordObjState' is assigned a value but never used.","'senderApiState' is assigned a value but never used.","'setAccount' is assigned a value but never used.","'password' is assigned a value but never used.","'setOrders' is assigned a value but never used.","'tokenModalMsg' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'login' and 'onLogin'. Either include them or remove the dependency array.","ArrayExpression",["736"],"React Hook useEffect has missing dependencies: 'dispatch', 'fromSignUp', and 'onLogin'. Either include them or remove the dependency array.",["737"],"'loc' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'crypt', 'dispatch', and 'userDataState?.message?.currency'. Either include them or remove the dependency array.",["738"],"React Hook useEffect has missing dependencies: 'dispatch' and 'errorMsgState'. Either include them or remove the dependency array.",["739"],"React Hook useEffect has a missing dependency: 'accountNameState'. Either include it or remove the dependency array.",["740"],"React Hook useEffect has missing dependencies: 'dispatch' and 'metaUrl'. Either include them or remove the dependency array.",["741"],"'chngLastLocation' is defined but never used.","'getAsset' is defined but never used.","'getFullName' is defined but never used.","'removeExponent' is defined but never used.","'InputLabel' is defined but never used.","'TrxHash' is defined but never used.","'assets' is assigned a value but never used.","'account' is assigned a value but never used.","'error' is assigned a value but never used.","'readyToCreate' is assigned a value but never used.","'accountChecked' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'portfolioReceiverState'. Either include it or remove the dependency array.",["742"],"'getPrivateKey' is assigned a value but never used.","'WidgetOnRamper' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Image' is defined but never used.","'Label' is defined but never used.","'Popup' is defined but never used.","'saveUserCurrency' is defined but never used.","'setUserCurrencyAction' is defined but never used.","'isSet' is assigned a value but never used.","'getAvatarFromBack' is assigned a value but never used.","'userCurrency' is assigned a value but never used.","'setUserCurrency' is assigned a value but never used.","'setTokenModalMsg' is assigned a value but never used.","'setTokenModalOpen' is assigned a value but never used.","'checkPasswordState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'accountNameState', 'dispatch', and 'isRemoveBtn'. Either include them or remove the dependency array.",["743"],"'user' is defined but never used.","'onClickPaperWalletHandler' is assigned a value but never used.","'onClickOrderTableHandler' is assigned a value but never used.","'useRef' is defined but never used.","'accountName' is assigned a value but never used.","'setFullPorfolio' is assigned a value but never used.","'check' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isCurrencySelectedEmpty'. Either include it or remove the dependency array.",["744"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'currencyValue' and 'totalSum'. Either include them or remove the dependency array.",["745"],"'checkPasswordObjSelector' is defined but never used.","'metaUrl' is assigned a value but never used.","'setPortfolio' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'performTradeSubmit'. Either include them or remove the dependency array.",["746"],"React Hook useEffect has missing dependencies: 'clickedInputs', 'portfolio', and 'userCurrencyState'. Either include them or remove the dependency array.",["747"],"React Hook useEffect has missing dependencies: 'asset', 'assets', 'options', 'selectedFrom.value', and 'selectedTo'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSelectedFrom' needs the current value of 'selectedFrom.value'.",["748"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'handleCalculateSelectedFrom' and 'handleCalculateSelectedTo'. Either include them or remove the dependency array.",["749"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'authData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isSignatureProcessing'. Either include it or remove the dependency array.",["750"],"'Icon' is defined but never used.","'Header' is defined but never used.","'helpSendTo' is defined but never used.","'helpAmount' is defined but never used.","'helpMax1' is defined but never used.","'helpSwap' is defined but never used.","'pre' is assigned a value but never used.","'chosenCrypt' is assigned a value but never used.","'setChosenCrypt' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'accountIsLoading' is assigned a value but never used.","'setBalance' is assigned a value but never used.","'options' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'performTransferSubmit'. Either include them or remove the dependency array.",["751"],"React Hook useEffect has a missing dependency: 'newOptions'. Either include it or remove the dependency array.",["752"],"React Hook useEffect has missing dependencies: 'balance' and 'clickedInputs'. Either include them or remove the dependency array.",["753"],"'setSelected' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'balance', 'clickedInputs', 'portfolioReceiverState', 'receiver', and 'sender'. Either include them or remove the dependency array.",["754"],"'asset' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'portfolio'. Either include it or remove the dependency array.",["755"],"'PasswordForm' is assigned a value but never used.","'ariaLabel' is assigned a value but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","React Hook useEffect has a missing dependency: 'fetcher'. Either include it or remove the dependency array.",["756"],"'CopyToClipboard' is defined but never used.","'setIsLoading' is assigned a value but never used.","'clickedInputs' is assigned a value but never used.","'isValidCurrency' is assigned a value but never used.","'setIsValidCurrency' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'asset', 'assets', 'options', and 'selectedFrom.value'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSelectedFrom' needs the current value of 'selectedFrom.value'.",["757"],"React Hook useEffect has missing dependencies: 'selectedFrom' and 'userCurrencyState'. Either include them or remove the dependency array.",["758"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["759"],"'Meta1' is defined but never used.","'op_type' is assigned a value but never used.","'qrRightPos' is assigned a value but never used.","'textWidth' is assigned a value but never used.","'logoHeight' is assigned a value but never used.","'logoPositionX' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'delay'. Either include it or remove the dependency array.",["760"],"'Input' is defined but never used.","'removeAccessToken' is defined but never used.","'removeLoginDetail' is defined but never used.","'setLocation' is defined but never used.","'checkAccountSignatureRequest' is defined but never used.","'validateSignature' is defined but never used.","'openModal' is assigned a value but never used.","'setOpenModal' is assigned a value but never used.","'openVideoModal' is assigned a value but never used.","'setOpenVideoModal' is assigned a value but never used.",["761"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'checkTransferableAccount'. Either include it or remove the dependency array.",["762"],"'ModalWalletInstructions' is assigned a value but never used.","'VideoModal' is assigned a value but never used.","'portfolio' is assigned a value but never used.","'isMobile' is assigned a value but never used.","'paid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.email'. Either include it or remove the dependency array.",["763"],"'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'isVowelsNotExistAndHasNumber'. Either include it or remove the dependency array.",["764"],"React Hook useEffect has a missing dependency: 'isTouchedCountry'. Either include it or remove the dependency array.",["765"],"'checkTokenRequest' is defined but never used.","'Avatar' is defined but never used.","'meta1ConnectError' is defined but never used.","'meta1ConnectSuccess' is defined but never used.","'currencyValue' is assigned a value but never used.","'generateKeyFromPassword' is defined but never used.","React Hook useEffect has a missing dependency: 'trx'. Either include it or remove the dependency array.",["766"],"'React' is defined but never used.","'MetaLoader' is defined but never used.","'getUserKycProfile' is defined but never used.","'Form' is defined but never used.","'add_response' is assigned a value but never used.","'FormControl' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'ChainStore' is defined but never used.","'setPerPage' is assigned a value but never used.","Array.prototype.sort() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'pageNum' and 'perPage'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilterCollection' needs the current value of 'perPage'.",["767"],"no-redeclare","'key' is already defined.","redeclared","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"768","fix":"769"},{"desc":"770","fix":"771"},{"desc":"772","fix":"773"},{"desc":"774","fix":"775"},{"desc":"776","fix":"777"},{"desc":"778","fix":"779"},{"desc":"780","fix":"781"},{"desc":"782","fix":"783"},{"desc":"784","fix":"785"},{"desc":"786","fix":"787"},{"desc":"788","fix":"789"},{"desc":"790","fix":"791"},{"desc":"792","fix":"793"},{"desc":"794","fix":"795"},{"desc":"796","fix":"797"},{"desc":"798","fix":"799"},{"desc":"800","fix":"801"},{"desc":"802","fix":"803"},{"desc":"804","fix":"805"},{"desc":"806","fix":"807"},{"desc":"808","fix":"809"},{"desc":"810","fix":"811"},{"desc":"812","fix":"813"},{"desc":"814","fix":"815"},{"desc":"816","fix":"817"},{"desc":"818","fix":"819"},{"desc":"820","fix":"821"},{"desc":"822","fix":"823"},{"desc":"824","fix":"825"},{"desc":"826","fix":"827"},{"desc":"828","fix":"829"},{"desc":"830","fix":"831"},"Update the dependencies array to be: [login, onLogin]",{"range":"832","text":"833"},"Update the dependencies array to be: [accountNameState, dispatch, fromSignUp, loginErrorState, onLogin]",{"range":"834","text":"835"},"Update the dependencies array to be: [crypt, cryptoDataState, dispatch, userDataState?.message?.currency]",{"range":"836","text":"837"},"Update the dependencies array to be: [userDataState, isTokenValidState, errorMsgState, dispatch]",{"range":"838","text":"839"},"Update the dependencies array to be: [portfolioReceiverState, portfolio, accountName, refreshData, accountNameState]",{"range":"840","text":"841"},"Update the dependencies array to be: [accountNameState, dispatch, metaUrl]",{"range":"842","text":"843"},"Update the dependencies array to be: [debouncedAccount, account, portfolioReceiverState]",{"range":"844","text":"845"},"Update the dependencies array to be: [accountNameState, dispatch, isRemoveBtn, isValidPasswordKeyState, passwordKeyErrorState]",{"range":"846","text":"847"},"Update the dependencies array to be: [isCurrencySelected, isCurrencySelectedEmpty, selectBoxOpen]",{"range":"848","text":"849"},"Update the dependencies array to be: [portfolio, data, totalSum, currencyValue]",{"range":"850","text":"851"},"Update the dependencies array to be: [dispatch, isValidPasswordKeyState, passwordKeyErrorState, performTradeSubmit]",{"range":"852","text":"853"},"Update the dependencies array to be: [selectedFromAmount, blockPrice, portfolio, clickedInputs, userCurrencyState]",{"range":"854","text":"855"},"Update the dependencies array to be: [asset, assets, options, props.assets, props.portfolio, selectedFrom.value, selectedTo]",{"range":"856","text":"857"},"Update the dependencies array to be: [handleCalculateSelectedFrom, handleCalculateSelectedTo, selectedFromAmount, selectedToAmount]",{"range":"858","text":"859"},"Update the dependencies array to be: [isSignatureProcessing]",{"range":"860","text":"861"},"Update the dependencies array to be: [dispatch, isValidPasswordKeyState, passwordKeyErrorState, performTransferSubmit]",{"range":"862","text":"863"},"Update the dependencies array to be: [newOptions, receiver]",{"range":"864","text":"865"},"Update the dependencies array to be: [amount, balance, clickedInputs, receiver]",{"range":"866","text":"867"},"Update the dependencies array to be: [debouncedAccount, amount, clickedInputs, balance, portfolioReceiverState, receiver, sender]",{"range":"868","text":"869"},"Update the dependencies array to be: [assetCh, assets, portfolio]",{"range":"870","text":"871"},"Update the dependencies array to be: [asset, fetcher, refreshData]",{"range":"872","text":"873"},"Update the dependencies array to be: [asset, assets, options, props.assets, props.portfolio, selectedFrom.value]",{"range":"874","text":"875"},"Update the dependencies array to be: [selectedFromAmount, blockPrice, selectedFrom, userCurrencyState]",{"range":"876","text":"877"},"Update the dependencies array to be: [dispatch, sendEmailState]",{"range":"878","text":"879"},"Update the dependencies array to be: [delay, value]",{"range":"880","text":"881"},"Update the dependencies array to be: [signatureErrorState, isSignatureValidState, dispatch]",{"range":"882","text":"883"},"Update the dependencies array to be: [checkTransferableAccount]",{"range":"884","text":"885"},"Update the dependencies array to be: [props.email]",{"range":"886","text":"887"},"Update the dependencies array to be: [debouncedAccountName, isVowelsNotExistAndHasNumber]",{"range":"888","text":"889"},"Update the dependencies array to be: [isSelectorOpen, isTouchedCountry]",{"range":"890","text":"891"},"Update the dependencies array to be: [trx]",{"range":"892","text":"893"},"Update the dependencies array to be: [pageNum, perPage, rowCollection]",{"range":"894","text":"895"},[5490,5492],"[login, onLogin]",[6998,7033],"[accountNameState, dispatch, fromSignUp, loginErrorState, onLogin]",[7700,7717],"[crypt, cryptoDataState, dispatch, userDataState?.message?.currency]",[7942,7976],"[userDataState, isTokenValidState, errorMsgState, dispatch]",[8795,8857],"[portfolioReceiverState, portfolio, accountName, refreshData, accountNameState]",[10618,10636],"[accountNameState, dispatch, metaUrl]",[1522,1549],"[debouncedAccount, account, portfolioReceiverState]",[2637,2685],"[accountNameState, dispatch, isRemoveBtn, isValidPasswordKeyState, passwordKeyErrorState]",[2610,2645],"[isCurrencySelected, isCurrencySelectedEmpty, selectBoxOpen]",[3935,3952],"[portfolio, data, totalSum, currencyValue]",[3259,3307],"[dispatch, isValidPasswordKeyState, passwordKeyErrorState, performTradeSubmit]",[4909,4941],"[selectedFromAmount, blockPrice, portfolio, clickedInputs, userCurrencyState]",[6127,6158],"[asset, assets, options, props.assets, props.portfolio, selectedFrom.value, selectedTo]",[8954,8992],"[handleCalculateSelectedFrom, handleCalculateSelectedTo, selectedFromAmount, selectedToAmount]",[1653,1655],"[isSignatureProcessing]",[4248,4296],"[dispatch, isValidPasswordKeyState, passwordKeyErrorState, performTransferSubmit]",[5556,5566],"[newOptions, receiver]",[6134,6152],"[amount, balance, clickedInputs, receiver]",[8861,8887],"[debouncedAccount, amount, clickedInputs, balance, portfolioReceiverState, receiver, sender]",[9820,9837],"[assetCh, assets, portfolio]",[1427,1447],"[asset, fetcher, refreshData]",[3342,3373],"[asset, assets, options, props.assets, props.portfolio, selectedFrom.value]",[4015,4047],"[selectedFromAmount, blockPrice, selectedFrom, userCurrencyState]",[7184,7200],"[dispatch, sendEmailState]",[402,409],"[delay, value]",[2379,2423],"[signatureErrorState, isSignatureValidState, dispatch]",[2495,2497],"[checkTransferableAccount]",[1143,1145],"[props.email]",[4993,5015],"[debouncedAccountName, isVowelsNotExistAndHasNumber]",[5714,5730],"[isSelectorOpen, isTouchedCountry]",[769,771],"[trx]",[2470,2485],"[pageNum, perPage, rowCollection]"]